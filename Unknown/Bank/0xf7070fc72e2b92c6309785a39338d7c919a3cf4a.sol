['contract NoFeePonzi {\n', '\n', '  uint public constant MIN_VALUE = 1 ether;\n', '  uint public constant MAX_VALUE = 10 ether;\n', '\n', '  uint public constant RET_MUL = 110;\n', '  uint public constant RET_DIV = 100;\n', '\n', '  struct Payout {\n', '    address addr;\n', '    uint yield;\n', '  }\n', '\n', '  Payout[] public payouts;\n', '  uint public payoutIndex = 0;\n', '  uint public payoutTotal = 0;\n', '\n', '  function NoFeePonzi() {\n', '  }\n', '\n', '  function() {\n', '    if ((msg.value < MIN_VALUE) || (msg.value > MAX_VALUE)) {\n', '      throw;\n', '    }\n', '\n', '    uint entryIndex = payouts.length;\n', '    payouts.length += 1;\n', '    payouts[entryIndex].addr = msg.sender;\n', '    payouts[entryIndex].yield = (msg.value * RET_MUL) / RET_DIV;\n', '\n', '    while (payouts[payoutIndex].yield < this.balance) {\n', '      payoutTotal += payouts[payoutIndex].yield;\n', '      payouts[payoutIndex].addr.send(payouts[payoutIndex].yield);\n', '      payoutIndex += 1;\n', '    }\n', '  }\n', '}']