['pragma solidity ^0.4.0;\n', '\n', '\n', 'contract EtherPrice {\n', '\n', '    uint256 private dollars;\n', '\n', '    uint8 private cents;\n', '\n', '    address private owner;\n', '\n', '    modifier validateCents (uint256 _dollars, uint8 _cents) {\n', '        require(_dollars > 0 || _cents > 0);\n', '        require(_cents < 100);\n', '        _;\n', '    }\n', '\n', '    function EtherPrice(uint256 _dollars, uint8 _cents) validateCents(_dollars, _cents) {\n', '        owner = msg.sender;\n', '        dollars = _dollars;\n', '        cents = _cents;\n', '    }\n', '\n', '    function setPrice(uint256 _dollars, uint8 _cents) validateCents(_dollars, _cents) {\n', '        require(owner == msg.sender);\n', '        dollars = _dollars;\n', '        cents = _cents;\n', '    }\n', '\n', '    function getPrice() constant returns (uint256, uint8) {\n', '        return (dollars, cents);\n', '    }\n', '}']
['pragma solidity ^0.4.0;\n', '\n', '\n', 'contract EtherPrice {\n', '\n', '    uint256 private dollars;\n', '\n', '    uint8 private cents;\n', '\n', '    address private owner;\n', '\n', '    modifier validateCents (uint256 _dollars, uint8 _cents) {\n', '        require(_dollars > 0 || _cents > 0);\n', '        require(_cents < 100);\n', '        _;\n', '    }\n', '\n', '    function EtherPrice(uint256 _dollars, uint8 _cents) validateCents(_dollars, _cents) {\n', '        owner = msg.sender;\n', '        dollars = _dollars;\n', '        cents = _cents;\n', '    }\n', '\n', '    function setPrice(uint256 _dollars, uint8 _cents) validateCents(_dollars, _cents) {\n', '        require(owner == msg.sender);\n', '        dollars = _dollars;\n', '        cents = _cents;\n', '    }\n', '\n', '    function getPrice() constant returns (uint256, uint8) {\n', '        return (dollars, cents);\n', '    }\n', '}']
