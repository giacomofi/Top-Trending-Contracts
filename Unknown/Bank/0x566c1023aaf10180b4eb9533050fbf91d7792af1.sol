['//***********************************Ether Dice Game\n', '//\n', '//\n', '//  Hello player, this is a Ethereum based dice game. You must deposit minimum of "MinDeposit" to play (+transaction cost), if you send less it wont be counted. \n', '//  You have a 25% chance of winning the entire balance, whatever that amount is.  On average that means that 3 players will deposit before you will win the balance.\n', "//  Also every 40th player will win the jackpot, so make sure you are that person. The jackpot will be considerably more than the balance, so you have the chance to win big if you deposit fast! The fee and deposit rate can be changed by the owner, and it's publicly visible, after the dice has a big volume, the fee will be lowered!\n", '//  \n', '//  Good Luck and Have Fun!\n', '//\n', '//***********************************START\n', 'contract EthereumDice {\n', '\n', '  struct gamblerarray {\n', '      address etherAddress;\n', '      uint amount;\n', '  }\n', '\n', '//********************************************PUBLIC VARIABLES\n', '  \n', '  gamblerarray[] public gamblerlist;\n', '  uint public Gamblers_Until_Jackpot=0;\n', '  uint public Total_Gamblers=0;\n', '  uint public FeeRate=7;\n', '  uint public Bankroll = 0;\n', '  uint public Jackpot = 0;\n', '  uint public Total_Deposits=0;\n', '  uint public Total_Payouts=0;\n', '  uint public MinDeposit=1 ether;\n', '\n', '  address public owner;\n', '  uint Fees=0;\n', '  // simple single-sig function modifier\n', '  modifier onlyowner { if (msg.sender == owner) _ }\n', '\n', '//********************************************INIT\n', '\n', '  function EthereumDice() {\n', '    owner = msg.sender;\n', '  }\n', '\n', '//********************************************TRIGGER\n', '\n', '  function() {\n', '    enter();\n', '  }\n', '  \n', '//********************************************ENTER\n', '\n', '  function enter() {\n', '    if (msg.value >= MinDeposit) {\n', '\n', '    uint amount=msg.value;\n', '    uint payout;\n', '\n', '\n', '    // add a new participant to the system and calculate total players\n', '    uint list_length = gamblerlist.length;\n', '    Total_Gamblers=list_length+1;\n', '    Gamblers_Until_Jackpot=40-(Total_Gamblers % 40);\n', '    gamblerlist.length += 1;\n', '    gamblerlist[list_length].etherAddress = msg.sender;\n', '    gamblerlist[list_length].amount = amount;\n', '\n', '\n', '\n', '    // set payout variables\n', '     Total_Deposits+=amount;       \t//update deposited amount\n', '\t    \n', '      Fees   =amount * FeeRate/100;    // 7% fee to the owner\n', '      amount-=amount * FeeRate/100;\n', '\t    \n', '      Bankroll += amount*80/100;     // 80% to the balance\n', '      amount-=amount*80/100;  \n', '\t    \n', '      Jackpot += amount;               \t//remaining to the jackpot\n', '\n', '\n', '    // payout Fees to the owner\n', '     if (Fees != 0) \n', '     {\n', '      \towner.send(Fees);\t\t//send fee to owner\n', '\tTotal_Payouts+=Fees;        //update paid out amount\n', '     }\n', ' \n', '\n', '   //payout to participants\t\n', "     if(list_length%40==0 && Jackpot > 0)   \t\t\t\t//every 40th player wins the jackpot if  it's not 0\n", '\t{\n', '\tgamblerlist[list_length].etherAddress.send(Jackpot);         //send pay out to participant\n', '\tTotal_Payouts += Jackpot;               \t\t\t\t\t//update paid out amount   \n', '\tJackpot=0;\t\t\t\t\t\t\t\t\t//Jackpot update\n', '\t}\n', '     else   \t\t\t\t\t\t\t\t\t\t\t//you either win the jackpot or the balance, but not both in 1 round\n', '\tif(uint(sha3(gamblerlist[list_length].etherAddress)) % 2==0 && list_length % 2==0 && Bankroll > 0) \t//if the hashed length of your address is even, \n', '\t{ \t\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t//which is a 25% chance, then you get paid out all balance!\n', '\tgamblerlist[list_length].etherAddress.send(Bankroll);        //send pay out to participant\n', '\tTotal_Payouts += Bankroll;               \t\t\t\t\t//update paid out amount\n', '\tBankroll = 0;                      \t\t\t\t\t\t//Bankroll update\n', '\t}\n', '    \n', '    \n', '    \n', '    //enter function ends\n', '    }\n', '  }\n', '\n', '//********************************************NEW OWNER\n', '\n', '  function setOwner(address new_owner) onlyowner { //set new owner of the casino\n', '      owner = new_owner;\n', '  }\n', '//********************************************SET MIN DEPOSIT\n', '\n', '  function setMinDeposit(uint new_mindeposit) onlyowner { //set new minimum deposit rate\n', '      MinDeposit = new_mindeposit;\n', '  }\n', '//********************************************SET FEE RATE\n', '\n', '  function setFeeRate(uint new_feerate) onlyowner { //set new fee rate\n', '      FeeRate = new_feerate;\n', '  }\n', '}']