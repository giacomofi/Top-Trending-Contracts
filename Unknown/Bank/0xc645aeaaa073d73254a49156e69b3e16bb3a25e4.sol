['pragma solidity ^0.4.15;\n', '\n', 'contract ERC20Basic {\n', '\n', '    uint256 public totalSupply;\n', '\n', '    function balanceOf(address _owner) constant returns (uint256 balance);\n', '    function transfer(address _to, uint256 amount) returns (bool result);\n', '\n', '    event Transfer(address _from, address _to, uint256 amount);\n', '}\n', '\n', 'contract TrueVeganCoin is ERC20Basic {\n', '\n', '    string public tokenName = "True Vegan Coin";  \n', '    string public tokenSymbol = "TVC"; \n', '\n', '    uint256 public constant decimals = 18;\n', '\n', '    mapping(address => uint256) balances;\n', '\n', '    function TrueVeganCoin() {\n', '        totalSupply = 55 * (10**6) * 10**decimals; // 55 millions\n', '        balances[msg.sender] += totalSupply;\n', '    }\n', '\n', '    function balanceOf(address _owner) constant returns (uint256 balance) {\n', '        return balances[_owner];\n', '    }\n', '\n', '    function transfer(address _to, uint256 amount) returns (bool result) {\n', '        require(amount > 0);\n', '        require(balances[msg.sender] >= amount);\n', '        balances[msg.sender] -= amount;\n', '        balances[_to] += amount;\n', '        Transfer(msg.sender, _to, amount);\n', '        return true;\n', '    }\n', '}']
['pragma solidity ^0.4.15;\n', '\n', 'contract ERC20Basic {\n', '\n', '    uint256 public totalSupply;\n', '\n', '    function balanceOf(address _owner) constant returns (uint256 balance);\n', '    function transfer(address _to, uint256 amount) returns (bool result);\n', '\n', '    event Transfer(address _from, address _to, uint256 amount);\n', '}\n', '\n', 'contract TrueVeganCoin is ERC20Basic {\n', '\n', '    string public tokenName = "True Vegan Coin";  \n', '    string public tokenSymbol = "TVC"; \n', '\n', '    uint256 public constant decimals = 18;\n', '\n', '    mapping(address => uint256) balances;\n', '\n', '    function TrueVeganCoin() {\n', '        totalSupply = 55 * (10**6) * 10**decimals; // 55 millions\n', '        balances[msg.sender] += totalSupply;\n', '    }\n', '\n', '    function balanceOf(address _owner) constant returns (uint256 balance) {\n', '        return balances[_owner];\n', '    }\n', '\n', '    function transfer(address _to, uint256 amount) returns (bool result) {\n', '        require(amount > 0);\n', '        require(balances[msg.sender] >= amount);\n', '        balances[msg.sender] -= amount;\n', '        balances[_to] += amount;\n', '        Transfer(msg.sender, _to, amount);\n', '        return true;\n', '    }\n', '}']
