['pragma solidity ^0.4.0;\n', '\n', 'contract Presale {\n', '   struct PresaleEntry {\n', '        address ethID;\n', '        string email;\n', '        string bitcoinSRC;\n', '        string bitcoinDEST;\n', '        uint satoshis;\n', '        uint centiWRG;\n', '    }\n', '  \n', '   PresaleEntry [] public entries ;\n', '   address public master; // master address\n', '   uint public presaleAmount;\n', '   bool public presaleGoing;\n', '   \n', '   event presaleMade(string sender, uint satoshis);\n', '\n', '    /* Initializes contract with initial supply tokens to the creator of the contract */\n', '\n', '    function Presale() {\n', '     master = msg.sender;\n', '     presaleAmount = 23970000 * 100; // 6 030 000 was sold to first investors\n', '     presaleGoing = true;\n', '    }\n', '\n', '    /* Very simple trade function */\n', '\n', '    function makePresale(string mail, address adr, uint satoshis, uint centiWRG,string bitcoinSRC, string bitcoinDEST) returns(bool sufficient) {\n', '        PresaleEntry memory entry;\n', '        int expectedWRG = int(presaleAmount) - int(centiWRG);\n', '        \n', '        if (!presaleGoing) return;\n', '        \n', '        if (msg.sender != master) return false; \n', '        if (expectedWRG < 0) return false;\n', '        \n', '        presaleAmount -= centiWRG;\n', '        entry.ethID = adr;\n', '        entry.email = mail;\n', '        entry.satoshis = satoshis;\n', '        entry.centiWRG = centiWRG;\n', '        entry.bitcoinSRC = bitcoinSRC;\n', '        entry.bitcoinDEST = bitcoinDEST;\n', '        \n', '        entries.push(entry);\n', '        \n', '        return true;\n', '     }\n', '     \n', '     function stopPresale() returns (bool ok) {\n', '          if (msg.sender != master) return false; \n', '          presaleGoing = false;\n', '          return true;\n', '     }\n', '     \n', '     function getAmountLeft() returns (uint amount){\n', '         return presaleAmount;\n', '     }\n', '     \n', '     function getPresaleNumber() returns (uint length){\n', '         return entries.length;\n', '     }\n', '    \n', '     function getPresale(uint i) returns (string,address,uint,uint,string,string){\n', '         uint max = entries.length;\n', '         if (i >= max) {\n', '             return ("NotFound",0,0,0,"","");\n', '         }\n', '         return (entries[i].email,entries[i].ethID, entries[i].satoshis, entries[i].centiWRG,entries[i].bitcoinSRC,entries[i].bitcoinDEST);\n', '     }\n', '\n', '}']