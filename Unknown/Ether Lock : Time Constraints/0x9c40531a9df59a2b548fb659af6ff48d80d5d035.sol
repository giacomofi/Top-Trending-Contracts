['pragma solidity ^0.4.14;\n', '\n', 'contract Owned\n', '{\n', '    address public owner;\n', '    \n', '    function Owned()\n', '    {\n', '        owner = msg.sender;\n', '    }\n', '    \n', '    modifier onlyOwner()\n', '    {\n', '        if (msg.sender != owner) revert();\n', '        _;\n', '    }\n', '}\n', '\n', 'contract ProspectorsDevAllocation is Owned\n', '{\n', '    ProspectorsGoldToken public token;\n', '    uint public initial_time;\n', '\n', '    mapping(uint => bool) public unlocked;\n', '    mapping(uint => uint) public unlock_times;\n', '    mapping(uint => uint) unlock_values;\n', '    \n', '    //contract with PGL tokens for Prospectors developers. Tokens will be frozen up to 4 years\n', '    function ProspectorsDevAllocation(address _token)\n', '    {\n', '        token = ProspectorsGoldToken(_token);\n', '    }\n', '    \n', '    function init() onlyOwner\n', '    {\n', '        if (token.balanceOf(this) == 0 || initial_time != 0) revert();\n', '        initial_time = block.timestamp;\n', '        uint unlock_amount = token.balanceOf(this) / 5; //one part - 20% of tokens\n', '\n', '        unlock_values[0] = unlock_amount;\n', '        unlock_values[1] = unlock_amount;\n', '        unlock_values[2] = unlock_amount;\n', '        unlock_values[3] = unlock_amount;\n', '        unlock_values[4] = unlock_amount;\n', '        \n', '        unlock_times[0] = 180 days; //20% of tokens will be available after 180 days\n', '        unlock_times[1] = 360 days; //20% of tokens will be available after 360 days\n', '        unlock_times[2] = 720 days; //20% of tokens will be available after 2 years\n', '        unlock_times[3] = 1080 days; //20% of tokens will be available after 3 years\n', '        unlock_times[4] = 1440 days; //20% of tokens will be available after 4 years\n', '    }\n', '\n', '    function unlock(uint part)\n', '    {\n', '        if (unlocked[part] == true || block.timestamp < initial_time + unlock_times[part] || unlock_values[part] == 0) revert();\n', '        token.transfer(owner, unlock_values[part]);\n', '        unlocked[part] = true;\n', '    }\n', '}\n', '\n', 'contract ProspectorsGoldToken {\n', '    function balanceOf( address who ) constant returns (uint value);\n', '    function transfer( address to, uint value) returns (bool ok);\n', '}']
['pragma solidity ^0.4.14;\n', '\n', 'contract Owned\n', '{\n', '    address public owner;\n', '    \n', '    function Owned()\n', '    {\n', '        owner = msg.sender;\n', '    }\n', '    \n', '    modifier onlyOwner()\n', '    {\n', '        if (msg.sender != owner) revert();\n', '        _;\n', '    }\n', '}\n', '\n', 'contract ProspectorsDevAllocation is Owned\n', '{\n', '    ProspectorsGoldToken public token;\n', '    uint public initial_time;\n', '\n', '    mapping(uint => bool) public unlocked;\n', '    mapping(uint => uint) public unlock_times;\n', '    mapping(uint => uint) unlock_values;\n', '    \n', '    //contract with PGL tokens for Prospectors developers. Tokens will be frozen up to 4 years\n', '    function ProspectorsDevAllocation(address _token)\n', '    {\n', '        token = ProspectorsGoldToken(_token);\n', '    }\n', '    \n', '    function init() onlyOwner\n', '    {\n', '        if (token.balanceOf(this) == 0 || initial_time != 0) revert();\n', '        initial_time = block.timestamp;\n', '        uint unlock_amount = token.balanceOf(this) / 5; //one part - 20% of tokens\n', '\n', '        unlock_values[0] = unlock_amount;\n', '        unlock_values[1] = unlock_amount;\n', '        unlock_values[2] = unlock_amount;\n', '        unlock_values[3] = unlock_amount;\n', '        unlock_values[4] = unlock_amount;\n', '        \n', '        unlock_times[0] = 180 days; //20% of tokens will be available after 180 days\n', '        unlock_times[1] = 360 days; //20% of tokens will be available after 360 days\n', '        unlock_times[2] = 720 days; //20% of tokens will be available after 2 years\n', '        unlock_times[3] = 1080 days; //20% of tokens will be available after 3 years\n', '        unlock_times[4] = 1440 days; //20% of tokens will be available after 4 years\n', '    }\n', '\n', '    function unlock(uint part)\n', '    {\n', '        if (unlocked[part] == true || block.timestamp < initial_time + unlock_times[part] || unlock_values[part] == 0) revert();\n', '        token.transfer(owner, unlock_values[part]);\n', '        unlocked[part] = true;\n', '    }\n', '}\n', '\n', 'contract ProspectorsGoldToken {\n', '    function balanceOf( address who ) constant returns (uint value);\n', '    function transfer( address to, uint value) returns (bool ok);\n', '}']
