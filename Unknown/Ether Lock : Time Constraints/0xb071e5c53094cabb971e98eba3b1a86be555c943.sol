['contract IOU {\n', '    address owner;\n', '\n', '/* Public variables of the token */\n', '    string public name;\n', '    string public symbol;\n', '    uint8 public decimals;\n', '    \n', '/* This creates an array with all balances */\n', '    mapping (address => uint256) public balanceOf;\n', '\n', '/* This generates a public event on the blockchain that will notify clients */\n', 'event Transfer(address indexed from, address indexed to, uint256 value);\n', '\n', '    function IOU(string tokenName, string tokenSymbol, uint8 decimalUnits) {\n', '        owner = msg.sender;                                 // sets main RipplePay contract as owner\n', '        name = tokenName;                                       // Set the name for display purposes     \n', '        symbol = tokenSymbol;                                     // Set the symbol for display purposes    \n', '        decimals = decimalUnits;                                       // Amount of decimals for display purposes        \n', '    \n', '    }\n', '    \n', '    /* update balances so they display in ethereum-wallet */\n', '    function transfer(address _from, address _to, uint256 _value) {\n', '        if(msg.sender != owner) throw;                       // can only be invoked by main RipplePay contract\n', '        balanceOf[_from] -= _value;                     // Subtract from the sender\n', '        balanceOf[_to] += _value;                            // Add the same to the recipient\n', '        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place\n', '    }\n', '    \n', '}\n', '\n', '\n', '\n', 'contract RipplePayMain {\n', '\n', 'mapping(string => address) currencies;\n', '\n', 'function newCurrency(string currencyName, string currencySymbol, uint8 decimalUnits){\n', 'currencies[currencySymbol] = new IOU(currencyName, currencySymbol, decimalUnits);\n', '}\n', '\n', 'function issueIOU(string _currency, uint256 _amount, address _to){\n', '    // update creditLines in main contract, then update balances in IOU contract to display in ethereum-wallet\n', '    IOU(currencies[_currency]).transfer(msg.sender, _to, _amount);\n', '\n', '}\n', '\n', '}']