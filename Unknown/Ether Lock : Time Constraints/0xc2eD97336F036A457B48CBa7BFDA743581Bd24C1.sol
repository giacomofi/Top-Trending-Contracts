['pragma solidity ^0.4.11;\n', '\n', 'contract TestToken5 {\n', '\n', '    string public name = "TestToken5";      //  token name\n', '    string public symbol = "TT5";           //  token symbol\n', '    uint public decimals = 6;               //  token digit\n', '\n', '    mapping (address => uint256) public balanceOf;\n', '    mapping (address => mapping (address => uint256)) public allowance;\n', '\n', '    uint256 constant valueICO       = 40000000000000000;\n', '    uint256 constant valueFounder   = 35000000000000000;\n', '    uint256 constant valueVIP       = 15000000000000000;\n', '    uint256 constant valuePeiwo     = 10000000000000000;\n', '\n', '    uint public totalSupply = valueICO + valueFounder + valueVIP + valuePeiwo;\n', '\n', '    function TestToken5(address _addressICO, address _addressFounder, address _addressVIP, address _addressPeiwo) {\n', '        balanceOf[_addressICO] = valueICO;\n', '        balanceOf[_addressFounder] = valueFounder;\n', '        balanceOf[_addressVIP] = valueVIP;\n', '        balanceOf[_addressPeiwo] = valuePeiwo;\n', '        Transfer(0x0, _addressICO, valueICO);\n', '        Transfer(0x0, _addressFounder, valueFounder);\n', '        Transfer(0x0, _addressVIP, valueVIP);\n', '        Transfer(0x0, _addressPeiwo, valuePeiwo);\n', '    }\n', '\n', '    function transfer(address _to, uint256 _value) returns (bool success) {\n', '        require(balanceOf[msg.sender] >= _value);\n', '        require(balanceOf[_to] + _value >= balanceOf[_to]);\n', '        balanceOf[msg.sender] -= _value;\n', '        balanceOf[_to] += _value;\n', '        Transfer(msg.sender, _to, _value);\n', '        return true;\n', '    }\n', '\n', '    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\n', '        require(balanceOf[_from] >= _value);\n', '        require(balanceOf[_to] + _value >= balanceOf[_to]);\n', '        require(allowance[_from][msg.sender] >= _value);\n', '        balanceOf[_to] += _value;\n', '        balanceOf[_from] -= _value;\n', '        allowance[_from][msg.sender] -= _value;\n', '        Transfer(_from, _to, _value);\n', '        return true;\n', '    }\n', '\n', '    function approve(address _spender, uint256 _value) returns (bool success) {\n', '        require(_value == 0 || allowance[msg.sender][_spender] == 0);\n', '        allowance[msg.sender][_spender] = _value;\n', '        Approval(msg.sender, _spender, _value);\n', '        return true;\n', '    }\n', '\n', '    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n', '    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n', '}']