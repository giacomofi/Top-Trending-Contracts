['pragma solidity ^0.4.13;\n', '\n', 'contract PizzaPoll {\n', '    mapping (address => bool) pizzaIsLiked;\n', '    mapping (address => uint) likeCount;\n', '    mapping (address => uint) dislikeCount;\n', '\n', '    function PizzaPoll() { \n', '        likeCount[msg.sender] = 0;\n', '        dislikeCount[msg.sender] = 0;\n', '    }\n', '\n', '    function GetLikeCount() returns (uint count){\n', '        return likeCount[msg.sender];\n', '    }\n', '\n', '    function GetDislikeCount() returns (uint count) {\n', '        return dislikeCount[msg.sender];\n', '    }\n', '\n', '    function Vote (address voterAddress, bool isLiked)\n', '    {\n', '        pizzaIsLiked[voterAddress] = isLiked;\n', '\n', '        if (isLiked)\n', '        {\n', '            likeCount[msg.sender] += 1;    \n', '        }\n', '        else\n', '        {\n', '            dislikeCount[msg.sender] += 1;\n', '        }\n', '    }\n', '}']
['pragma solidity ^0.4.13;\n', '\n', 'contract PizzaPoll {\n', '    mapping (address => bool) pizzaIsLiked;\n', '    mapping (address => uint) likeCount;\n', '    mapping (address => uint) dislikeCount;\n', '\n', '    function PizzaPoll() { \n', '        likeCount[msg.sender] = 0;\n', '        dislikeCount[msg.sender] = 0;\n', '    }\n', '\n', '    function GetLikeCount() returns (uint count){\n', '        return likeCount[msg.sender];\n', '    }\n', '\n', '    function GetDislikeCount() returns (uint count) {\n', '        return dislikeCount[msg.sender];\n', '    }\n', '\n', '    function Vote (address voterAddress, bool isLiked)\n', '    {\n', '        pizzaIsLiked[voterAddress] = isLiked;\n', '\n', '        if (isLiked)\n', '        {\n', '            likeCount[msg.sender] += 1;    \n', '        }\n', '        else\n', '        {\n', '            dislikeCount[msg.sender] += 1;\n', '        }\n', '    }\n', '}']
