['pragma solidity 0.4.10;\n', '\n', 'contract BAT_ATM{\n', '    Token public bat = Token(0x0D8775F648430679A709E98d2b0Cb6250d2887EF);\n', '    address owner = msg.sender;\n', '\n', '    uint    public pausedUntil;\n', '    uint    public BATsPerEth;// BAT/ETH\n', '\n', '    modifier onlyActive(){ if(pausedUntil < now){ _; }else{ throw; } }\n', '    \n', '    function () payable onlyActive{//buy some BAT. Use gasLimit:100000\n', '        if(!bat.transfer(msg.sender, (msg.value * BATsPerEth))){ throw; }\n', '    }\n', '//only owner\n', '    modifier onlyOwner(){ if(msg.sender == owner) _; }\n', '\n', '    function changeRate(uint _BATsPerEth) onlyOwner{\n', '        pausedUntil = now + 300; //no new bids for 5 minutes (protects taker)\n', '        BATsPerEth = _BATsPerEth;\n', '    }\n', '\n', '    function withdrawETH() onlyOwner{\n', '        if(!msg.sender.send(this.balance)){ throw; }\n', '    }\n', '    function withdrawBAT() onlyOwner{\n', '        if(!bat.transfer(msg.sender, bat.balanceOf(this))){ throw; }\n', '    }\n', '}\n', '\n', '// BAToken contract found at:\n', '// https://etherscan.io/address/0x0D8775F648430679A709E98d2b0Cb6250d2887EF#code\n', 'contract Token {\n', '    function balanceOf(address _owner) constant returns (uint256 balance);\n', '    function transfer(address _to, uint256 _value) returns (bool success);\n', '}']