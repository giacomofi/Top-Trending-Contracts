['pragma solidity ^0.4.11;\n', '\n', 'contract SpeculateCoin { \n', '    string public name;\n', '    string public symbol;\n', '    uint8 public decimals;\n', '    address public owner;\n', '    bool public start;\n', '    uint256 public transactions;\n', '    mapping (address => uint256) public balanceOf;\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '    \n', '    function Start() {\n', '        if (msg.sender != owner) { return; }\n', '        start = true;\n', '    }\n', '    \n', '    function SpeculateCoin() {\n', '        balanceOf[this] = 2100000000000000;\n', '        name = "SpeculateCoin";     \n', '        symbol = "SPC";\n', '        owner = msg.sender;\n', '        decimals = 8;\n', '        transactions = 0;\n', '        start = false;\n', '    }\n', '\n', '    function transfer(address _to, uint256 _value) {\n', '        if (balanceOf[msg.sender] < _value) return;\n', '        if (balanceOf[_to] + _value < balanceOf[_to]) return;\n', '        balanceOf[msg.sender] -= _value;\n', '        balanceOf[_to] += _value;\n', '        Transfer(msg.sender, _to, _value);\n', '    }\n', '    \n', '    function() payable {\n', '        if(msg.value == 0) { return; }\n', '        uint256 price = 100 + (transactions * 100);\n', '        uint256 amount = msg.value / price;\n', '        if (start == false || amount < 100000000 || amount > 1000000000000 || balanceOf[this] < amount) {\n', '            msg.sender.transfer(msg.value);\n', '            return; \n', '        }\n', '        owner.transfer(msg.value);\n', '        balanceOf[msg.sender] += amount;     \n', '        balanceOf[this] -= amount;\n', '        Transfer(this, msg.sender, amount);\n', '        transactions = transactions + 1;\n', '    }\n', '}']
['pragma solidity ^0.4.11;\n', '\n', 'contract SpeculateCoin { \n', '    string public name;\n', '    string public symbol;\n', '    uint8 public decimals;\n', '    address public owner;\n', '    bool public start;\n', '    uint256 public transactions;\n', '    mapping (address => uint256) public balanceOf;\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '    \n', '    function Start() {\n', '        if (msg.sender != owner) { return; }\n', '        start = true;\n', '    }\n', '    \n', '    function SpeculateCoin() {\n', '        balanceOf[this] = 2100000000000000;\n', '        name = "SpeculateCoin";     \n', '        symbol = "SPC";\n', '        owner = msg.sender;\n', '        decimals = 8;\n', '        transactions = 0;\n', '        start = false;\n', '    }\n', '\n', '    function transfer(address _to, uint256 _value) {\n', '        if (balanceOf[msg.sender] < _value) return;\n', '        if (balanceOf[_to] + _value < balanceOf[_to]) return;\n', '        balanceOf[msg.sender] -= _value;\n', '        balanceOf[_to] += _value;\n', '        Transfer(msg.sender, _to, _value);\n', '    }\n', '    \n', '    function() payable {\n', '        if(msg.value == 0) { return; }\n', '        uint256 price = 100 + (transactions * 100);\n', '        uint256 amount = msg.value / price;\n', '        if (start == false || amount < 100000000 || amount > 1000000000000 || balanceOf[this] < amount) {\n', '            msg.sender.transfer(msg.value);\n', '            return; \n', '        }\n', '        owner.transfer(msg.value);\n', '        balanceOf[msg.sender] += amount;     \n', '        balanceOf[this] -= amount;\n', '        Transfer(this, msg.sender, amount);\n', '        transactions = transactions + 1;\n', '    }\n', '}']
