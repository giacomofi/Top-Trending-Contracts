['pragma solidity ^0.4.16;\n', '\n', 'contract FidgETHSpinner {\n', '  string public name = "FidgETHSpinner";\n', '  string public symbol = "FDGTHSPNNR";\n', '  uint public decimals = 18;\n', '\n', '  address public wallet;\n', '\n', '  uint public startBlock;\n', '  uint public endBlock;\n', '\n', '  uint public totalSupply;\n', '  mapping(address => uint) public balanceOf;\n', '\n', '  uint public normalRate = 10;\n', '  uint public juicyBonus = 1000;\n', '\n', '  uint public weiRaised;\n', '\n', '  event Fidget(address indexed purchaser, address indexed to, uint value, uint juicyBananas, uint rate, uint tokens);\n', '  event Spin(address indexed to, uint tokens);\n', '  event Transfer(address indexed from, address indexed to, uint tokens);\n', '\n', '  // This smart contract has entirely been made possible by our favorite sponsor and drug: PCP ???\n', '\n', '  function FidgETHSpinner(){\n', '    wallet = msg.sender;\n', '\n', '    startBlock = block.number;\n', '    endBlock = startBlock + 150000; // 150,000 blocks == approx forty longspins\n', '  }\n', '\n', '  function changeWallet(address _wallet){\n', '    require(msg.sender == wallet);\n', '    wallet = _wallet;\n', '  }\n', '\n', '  function balanceOf(address _address) constant returns (uint) {\n', '    return balanceOf[_address];\n', '  }\n', '\n', '  function icoActive() constant returns (bool) {\n', '    return block.number <= endBlock;\n', '  }\n', '\n', '  // FIDGET SPINNIG\n', '\n', '  function() payable {\n', '    fidget(msg.sender);\n', '  }\n', '\n', '  // buy the fidgures\n', '  function fidget(address _to) payable {\n', '    require(_to != 0x0); // Bingo\n', '    require(_to != address(0)); // Bango\n', '\n', '    require(block.number <= endBlock);\n', '    require(msg.value >= 0.03 ether);\n', '\n', '    // remember, my dear friend, that this decrements juicyBonus *after* it is multiplied with normalRate. So juicyBonus is always >=1 here\n', '    uint rate = normalRate * juicyBonus--;\n', '\n', '    uint tokens = msg.value * rate;\n', '    weiRaised += msg.value;\n', '\n', '    juicyBonus = (juicyBonus < 1) ? 1 : juicyBonus;\n', '\n', '    spin(_to, tokens);\n', '    Fidget(msg.sender, _to, msg.value, juicyBonus, rate, tokens);\n', '\n', '    wallet.transfer(msg.value);\n', '  }\n', '\n', '  // mint spint\n', '  function spin(address _to, uint _tokens) internal {\n', '    totalSupply += _tokens; // Ba\n', '    balanceOf[_to] += _tokens; // zinba\n', '\n', '    // you did it!\n', '    Spin(_to, _tokens); // ??\n', '  }\n', '\n', '  function transfer(address _to, uint _tokens){\n', '    require(_to != 0x0);\n', '    require(_to != address(0));\n', '\n', '    require(balanceOf[msg.sender] >= _tokens); // haha gotcha\n', '    require(balanceOf[_to] + _tokens > balanceOf[_to]); // lol\n', '\n', '    balanceOf[msg.sender] -= _tokens; // :()\n', '    balanceOf[_to] += _tokens; // woo!\n', '\n', '    // Watch out here comes a Flying figdet spiner across the univrese!\n', '    Transfer(msg.sender, _to, _tokens);\n', '  }\n', '}// xD']