['pragma solidity ^0.4.16;\n', 'contract Token { \n', '    function issue(address _recipient, uint256 _value) returns (bool success) {} \n', '    function totalSupply() constant returns (uint256 supply) {}\n', '    function unlock() returns (bool success) {}\n', '}\n', '\n', 'contract STARCrowdsale {\n', '\n', '    address public creator; \n', '    \n', '    uint256 public maxSupply = 104400000 * 10**8; \n', '    uint256 public minAcceptedAmount = 1 ether; // 1 ether\n', '\n', '    uint256 public rateAngel = 1136;\n', '    uint256 public rateA = 558;\n', '    uint256 public rateB = 277;\n', '    uint256 public rateC = 136;\n', '    \n', '    \n', '    bool public close = false;\n', '\n', '    \n', '    address public address1 = 0x08294159dE662f0Bd810FeaB94237cf3A7bB2A3D;\n', '    address public address2 = 0xAed27d4ecCD7C0a0bd548383DEC89031b7bBcf3E;\n', '    address public address3 = 0x41ba7eED9be2450961eBFD7C9Fb715cae077f1dC;\n', '    address public address4 = 0xb9cdb4CDC8f9A931063cA30BcDE8b210D3BA80a3;\n', '    address public address5 = 0x5aBF2CA9e7F5F1895c6FBEcF5668f164797eDc5D;\n', '    \n', '\n', '    enum Stages {\n', '        InProgress,\n', '        Ended,\n', '        Withdrawn\n', '    }\n', '\n', '    Stages public stage = Stages.InProgress;\n', '    \n', '    uint256 public raised;\n', '\n', '\n', '    Token public starToken;\n', '\n', '\n', '    mapping (address => uint256) balances;\n', '\n', '    modifier atStage(Stages _stage) {\n', '        if (stage != _stage) {\n', '            throw;\n', '        }\n', '        _;\n', '    }\n', '    \n', '    modifier onlyOwner() {\n', '        if (creator != msg.sender) {\n', '            throw;\n', '        }\n', '        _;\n', '    }\n', '  \n', '\n', '    function balanceOf(address _investor) constant returns (uint256 balance) {\n', '        return balances[_investor];\n', '    }\n', '\n', '    function STARCrowdsale() {\n', '        \n', '        \n', '        starToken = Token(0x7b6054262d9ac537110a434ae75c880192faac25);\n', '        \n', '        creator = 0x6ADAfB7632859EF19d28276037581af00064d68F;\n', '        \n', '    }\n', '    function toSTAR(uint256 _wei) returns (uint256 amount) {\n', '        uint256 rate = 0;\n', '        if (stage != Stages.Ended) {\n', '            \n', '            \n', '            uint256 supply = starToken.totalSupply();\n', '            \n', '            if (supply <= 3000000 * 10**8) {\n', '\n', '                rate = rateAngel;\n', '            }\n', '            \n', '            else if (supply > 3000000 * 10**8) {\n', '\n', '                rate = rateA;\n', '            }\n', '            \n', '            else if (supply > 9000000 * 10**8) {\n', '\n', '                rate = rateB;\n', '            }\n', '            \n', '            else if (supply > 23400000 * 10**8) {\n', '\n', '                rate = rateC;\n', '            }\n', '\t\t\t\n', '           \n', '        }\n', '\n', '        return _wei * rate * 10**8 / 1 ether; // 10**8 for 8 decimals\n', '    }\n', ' \n', '    function endCrowdsale() onlyOwner atStage(Stages.InProgress) {\n', '\n', '    \n', '        stage = Stages.Ended;\n', '    }\n', '    \n', '    function setOwner(address _newowner) onlyOwner {\n', '\n', '        creator = _newowner;\n', '    }\n', '\n', '\n', '    function withdraw() onlyOwner atStage(Stages.Ended) {\n', '\n', '        creator.transfer(this.balance);\n', '\n', '        stage = Stages.Withdrawn;\n', '    }\n', '    \n', '    function close() onlyOwner{\n', '\n', '       close = true;\n', '    }\n', '\n', '    function () payable atStage(Stages.InProgress) {\n', '\n', '            \n', '        if (msg.value < minAcceptedAmount) {\n', '            throw;\n', '        }\n', '        \n', '        if(close == true){\n', '            throw;\n', '        }\n', ' \n', '        uint256 received = msg.value;\n', '        uint256 valueInSCL = toSTAR(msg.value);\n', '\n', '\n', '        if (valueInSCL == 0) {\n', '            throw;\n', '        }\n', '\n', '        if (!starToken.issue(msg.sender, valueInSCL)) {\n', '            throw;\n', '        }\n', '\n', '        address1.transfer(received/5);\n', '        address2.transfer(received/5);\n', '        address3.transfer(received/5);\n', '        address4.transfer(received/5);\n', '        address5.transfer(received/5);\n', '\n', '        raised += received;\n', '\n', '        if (starToken.totalSupply() >= maxSupply) {\n', '            stage = Stages.Ended;\n', '        }\n', '    }\n', '}']