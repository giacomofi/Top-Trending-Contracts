['pragma solidity ^0.4.11;\n', '\n', 'contract Initable {\n', '    function init(address token);\n', '}\n', '\n', '/**\n', ' * @title ERC20Basic\n', ' * @dev Simpler version of ERC20 interface\n', ' * @dev see https://github.com/ethereum/EIPs/issues/179\n', ' */\n', 'contract ERC20Basic {\n', '  uint256 public totalSupply;\n', '  function balanceOf(address who) constant returns (uint256);\n', '  function transfer(address to, uint256 value) returns (bool);\n', '  event Transfer(address indexed from, address indexed to, uint256 value);\n', '}\n', '\n', '\n', '// Time-locked wallet for Genesis Vision team tokens\n', 'contract GVTTeamAllocator is Initable {\n', '    // Address of team member to allocations mapping\n', '    mapping (address => uint256) allocations;\n', '\n', '    ERC20Basic gvt;\n', '    uint unlockedAt;\n', '    uint tokensForAllocation;\n', '    address owner;\n', '\n', '    function GVTTeamAllocator() {\n', '        unlockedAt = now + 12 * 30 days;\n', '        owner = msg.sender;\n', '        \n', '        allocations[0x3787C4A087fd3226959841828203D845DF21610c] = 38;\n', '        allocations[0xb205b75E932eC8B5582197052dB81830af372480] = 25;\n', '        allocations[0x8db451a2e2A2F7bE92f186Dc718CF98F49AaB719] = 15;\n', '        allocations[0x3451310558D3487bfBc41C674719a6B09B7C3282] = 7;\n', '        allocations[0x36f3dAB9a9408Be0De81681eB5b50BAE53843Fe7] = 5; \n', '        allocations[0x3dDc2592B66821eF93FF767cb7fF89c9E9C060C6] = 3; \n', '        allocations[0xfD3eBadDD54cD61e37812438f60Fb9494CBBe0d4] = 2;\n', '        allocations[0xfE8B87Ae4fe6A565791B0cBD5418092eb2bE9647] = 2;\n', '        allocations[0x04FF8Fac2c0dD1EB5d28B0D7C111514055450dDC] = 1;           \n', '        allocations[0x1cd5B39373F52eEFffb5325cE4d51BCe3d1353f0] = 1;       \n', '        allocations[0xFA9930cbCd53c9779a079bdbE915b11905DfbEDE] = 1;        \n', '              \n', '    }\n', '\n', '    function init(address token) {\n', '        require(msg.sender == owner);\n', '        gvt = ERC20Basic(token);\n', '    }\n', '\n', '    // Unlock team member&#39;s tokens by transferring them to his address\n', '    function unlock() external {\n', '        require (now >= unlockedAt);\n', '\n', '        // Update total number of locked tokens with the first unlock attempt\n', '        if (tokensForAllocation == 0)\n', '            tokensForAllocation = gvt.balanceOf(this);\n', '\n', '        var allocation = allocations[msg.sender];\n', '        allocations[msg.sender] = 0;\n', '        var amount = tokensForAllocation * allocation / 100;\n', '\n', '        if (!gvt.transfer(msg.sender, amount)) {\n', '            revert();\n', '        }\n', '    }\n', '}']
['pragma solidity ^0.4.11;\n', '\n', 'contract Initable {\n', '    function init(address token);\n', '}\n', '\n', '/**\n', ' * @title ERC20Basic\n', ' * @dev Simpler version of ERC20 interface\n', ' * @dev see https://github.com/ethereum/EIPs/issues/179\n', ' */\n', 'contract ERC20Basic {\n', '  uint256 public totalSupply;\n', '  function balanceOf(address who) constant returns (uint256);\n', '  function transfer(address to, uint256 value) returns (bool);\n', '  event Transfer(address indexed from, address indexed to, uint256 value);\n', '}\n', '\n', '\n', '// Time-locked wallet for Genesis Vision team tokens\n', 'contract GVTTeamAllocator is Initable {\n', '    // Address of team member to allocations mapping\n', '    mapping (address => uint256) allocations;\n', '\n', '    ERC20Basic gvt;\n', '    uint unlockedAt;\n', '    uint tokensForAllocation;\n', '    address owner;\n', '\n', '    function GVTTeamAllocator() {\n', '        unlockedAt = now + 12 * 30 days;\n', '        owner = msg.sender;\n', '        \n', '        allocations[0x3787C4A087fd3226959841828203D845DF21610c] = 38;\n', '        allocations[0xb205b75E932eC8B5582197052dB81830af372480] = 25;\n', '        allocations[0x8db451a2e2A2F7bE92f186Dc718CF98F49AaB719] = 15;\n', '        allocations[0x3451310558D3487bfBc41C674719a6B09B7C3282] = 7;\n', '        allocations[0x36f3dAB9a9408Be0De81681eB5b50BAE53843Fe7] = 5; \n', '        allocations[0x3dDc2592B66821eF93FF767cb7fF89c9E9C060C6] = 3; \n', '        allocations[0xfD3eBadDD54cD61e37812438f60Fb9494CBBe0d4] = 2;\n', '        allocations[0xfE8B87Ae4fe6A565791B0cBD5418092eb2bE9647] = 2;\n', '        allocations[0x04FF8Fac2c0dD1EB5d28B0D7C111514055450dDC] = 1;           \n', '        allocations[0x1cd5B39373F52eEFffb5325cE4d51BCe3d1353f0] = 1;       \n', '        allocations[0xFA9930cbCd53c9779a079bdbE915b11905DfbEDE] = 1;        \n', '              \n', '    }\n', '\n', '    function init(address token) {\n', '        require(msg.sender == owner);\n', '        gvt = ERC20Basic(token);\n', '    }\n', '\n', "    // Unlock team member's tokens by transferring them to his address\n", '    function unlock() external {\n', '        require (now >= unlockedAt);\n', '\n', '        // Update total number of locked tokens with the first unlock attempt\n', '        if (tokensForAllocation == 0)\n', '            tokensForAllocation = gvt.balanceOf(this);\n', '\n', '        var allocation = allocations[msg.sender];\n', '        allocations[msg.sender] = 0;\n', '        var amount = tokensForAllocation * allocation / 100;\n', '\n', '        if (!gvt.transfer(msg.sender, amount)) {\n', '            revert();\n', '        }\n', '    }\n', '}']
