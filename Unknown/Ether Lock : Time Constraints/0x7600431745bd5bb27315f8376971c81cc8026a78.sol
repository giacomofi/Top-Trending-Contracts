['pragma solidity ^0.4.15;\n', '\n', 'contract BMICOAffiliateProgramm\n', '{\n', '\tfunction add_referral(address referral, string promo, uint256 amount) external returns(address, uint256, uint256);\n', '}\n', '\n', 'contract BMPre_ICO {\n', '\tmapping (address => uint256) public holders;\n', '\tmapping (address => uint256) public holdersBonus;\n', '\tuint256 public amount_investments = 0;\n', '\tuint256 public amount_bonus = 0;\n', '\tuint256 public countHolders = 0;\n', '\n', '\tuint256 public preIcoStart = 1503219600; //20.08.2017 12:00 MSK\n', '\tuint256 public preIcoEnd = 1504990800; //10.00.2017 00:00 MSK\n', '\tuint256 public lastCallstopPreICO = 1503219600;\n', '\n', '\tuint256 public minSizeInvest = 100 finney;\n', '\n', '\taddress public owner;\n', '\taddress public affiliate;\n', '\tBMICOAffiliateProgramm contractAffiliate;\n', '\n', '\tevent Investment(address holder, uint256 value);\n', '\tevent EndPreICO(uint256 EndDate);\n', '\n', '\tfunction BMPre_ICO()\n', '\t{\n', '\t\towner = msg.sender;\n', '\t\taffiliate = address(0x0);\n', '\t}\n', '\n', '\tmodifier isOwner()\n', '\t{\n', '\t\tassert(msg.sender == owner);\n', '\t\t_;\n', '\t}\n', '\n', '\tfunction changeOwner(address new_owner) isOwner {\n', '\t\tassert(new_owner!=address(0x0));\n', '\t\tassert(new_owner!=address(this));\n', '\t\towner = new_owner;\n', '\t}\n', '\n', '\tfunction setAffiliateContract(address new_address) isOwner {\n', '\t\tassert(new_address!=address(0x0));\n', '\t\tassert(new_address!=address(this));\n', '\t\taffiliate = new_address;\n', '\t\tcontractAffiliate = BMICOAffiliateProgramm(new_address);\n', '\t}\n', '\n', '\tfunction getDataHolders(address holder) external constant returns(uint256)\n', '\t{\n', '\t\treturn holders[holder];\n', '\t}\n', '\n', '\tfunction getDataHoldersRefBonus(address holder) external constant returns(uint256)\n', '\t{\n', '\t\treturn holdersBonus[holder];\n', '\t}\n', '\n', '\tuint256 public stopBlock = 0;\n', '\n', '\tfunction stopPreIco_step1() {\n', '\t\tassert(now - lastCallstopPreICO > 12 hours);\n', '\t\tlastCallstopPreICO = now;\n', '\n', '\t\tstopBlock = block.number + 5;\n', '\t}\n', '\n', '\tfunction stopPreIco_step2()\n', '\t{\n', '\t\tif (stopBlock != 0 && stopBlock < block.number)\n', '\t\t{\n', '\t\t\tbytes32 hash = block.blockhash(stopBlock);\n', '\t\t\tif (uint256(hash) > 0)\n', '\t\t\t{\n', '\t\t\t\tuint8 value = uint8(uint256(sha3(hash, msg.sender)) % 100);\n', '\t\t\t\tuint8 limit = uint8((amount_investments*100)/100000000000000000000000);\n', '\n', '\t\t\t\tif(value < limit)\n', '\t\t\t\t{\n', '\t\t\t\t\tif(preIcoEnd - now > 1 days)\n', '\t\t\t\t\t{\n', '\t\t\t\t\t\tpreIcoEnd -= 1 days;\n', '\t\t\t\t\t}\n', '\t\t\t\t\tEndPreICO(preIcoEnd);\n', '\t\t\t\t}\n', '\t\t\t}\n', '\t\t\tstopBlock = 0;\n', '\t\t}\n', '\t}\n', '\n', '\tfunction sendInvestmentsToOwner() isOwner {\n', '\t\tassert(now >= preIcoEnd);\n', '\t\towner.transfer(this.balance);\n', '\t}\n', '\n', '\tfunction buy(string promo) payable {\n', '\t\tassert(now < preIcoEnd);\n', '\t\tassert(now >= preIcoStart);\n', '\t\tassert(msg.value>=minSizeInvest);\n', '\n', '\t\tif(holders[msg.sender] == 0){\n', '\t\t\tcountHolders += 1;\n', '\t\t}\n', '\t\tholders[msg.sender] += msg.value;\n', '\t\tamount_investments += msg.value;\n', '\t\tInvestment(msg.sender, msg.value);\n', '\n', '\t\tif(affiliate != address(0x0)){\n', '\t\t\tvar (partner_address, partner_bonus, referral_bonus) = contractAffiliate.add_referral(msg.sender, promo, msg.value);\n', '\t\t\tif(partner_bonus > 0 && partner_address != address(0x0)){\n', '\t\t\t\tholdersBonus[partner_address] += msg.value;\n', '\t\t\t\tamount_bonus += msg.value;\n', '\t\t\t}\n', '\t\t\tif(referral_bonus > 0){\n', '\t\t\t\tholdersBonus[msg.sender] = referral_bonus;\n', '\t\t\t\tamount_bonus += referral_bonus;\n', '\t\t\t}\n', '\t\t}\n', '\t\tstopPreIco_step2();\n', '\t}\n', '\n', '\tfunction () payable {\n', '\t\tbuy(&#39;&#39;);\n', '\t}\n', '}']
['pragma solidity ^0.4.15;\n', '\n', 'contract BMICOAffiliateProgramm\n', '{\n', '\tfunction add_referral(address referral, string promo, uint256 amount) external returns(address, uint256, uint256);\n', '}\n', '\n', 'contract BMPre_ICO {\n', '\tmapping (address => uint256) public holders;\n', '\tmapping (address => uint256) public holdersBonus;\n', '\tuint256 public amount_investments = 0;\n', '\tuint256 public amount_bonus = 0;\n', '\tuint256 public countHolders = 0;\n', '\n', '\tuint256 public preIcoStart = 1503219600; //20.08.2017 12:00 MSK\n', '\tuint256 public preIcoEnd = 1504990800; //10.00.2017 00:00 MSK\n', '\tuint256 public lastCallstopPreICO = 1503219600;\n', '\n', '\tuint256 public minSizeInvest = 100 finney;\n', '\n', '\taddress public owner;\n', '\taddress public affiliate;\n', '\tBMICOAffiliateProgramm contractAffiliate;\n', '\n', '\tevent Investment(address holder, uint256 value);\n', '\tevent EndPreICO(uint256 EndDate);\n', '\n', '\tfunction BMPre_ICO()\n', '\t{\n', '\t\towner = msg.sender;\n', '\t\taffiliate = address(0x0);\n', '\t}\n', '\n', '\tmodifier isOwner()\n', '\t{\n', '\t\tassert(msg.sender == owner);\n', '\t\t_;\n', '\t}\n', '\n', '\tfunction changeOwner(address new_owner) isOwner {\n', '\t\tassert(new_owner!=address(0x0));\n', '\t\tassert(new_owner!=address(this));\n', '\t\towner = new_owner;\n', '\t}\n', '\n', '\tfunction setAffiliateContract(address new_address) isOwner {\n', '\t\tassert(new_address!=address(0x0));\n', '\t\tassert(new_address!=address(this));\n', '\t\taffiliate = new_address;\n', '\t\tcontractAffiliate = BMICOAffiliateProgramm(new_address);\n', '\t}\n', '\n', '\tfunction getDataHolders(address holder) external constant returns(uint256)\n', '\t{\n', '\t\treturn holders[holder];\n', '\t}\n', '\n', '\tfunction getDataHoldersRefBonus(address holder) external constant returns(uint256)\n', '\t{\n', '\t\treturn holdersBonus[holder];\n', '\t}\n', '\n', '\tuint256 public stopBlock = 0;\n', '\n', '\tfunction stopPreIco_step1() {\n', '\t\tassert(now - lastCallstopPreICO > 12 hours);\n', '\t\tlastCallstopPreICO = now;\n', '\n', '\t\tstopBlock = block.number + 5;\n', '\t}\n', '\n', '\tfunction stopPreIco_step2()\n', '\t{\n', '\t\tif (stopBlock != 0 && stopBlock < block.number)\n', '\t\t{\n', '\t\t\tbytes32 hash = block.blockhash(stopBlock);\n', '\t\t\tif (uint256(hash) > 0)\n', '\t\t\t{\n', '\t\t\t\tuint8 value = uint8(uint256(sha3(hash, msg.sender)) % 100);\n', '\t\t\t\tuint8 limit = uint8((amount_investments*100)/100000000000000000000000);\n', '\n', '\t\t\t\tif(value < limit)\n', '\t\t\t\t{\n', '\t\t\t\t\tif(preIcoEnd - now > 1 days)\n', '\t\t\t\t\t{\n', '\t\t\t\t\t\tpreIcoEnd -= 1 days;\n', '\t\t\t\t\t}\n', '\t\t\t\t\tEndPreICO(preIcoEnd);\n', '\t\t\t\t}\n', '\t\t\t}\n', '\t\t\tstopBlock = 0;\n', '\t\t}\n', '\t}\n', '\n', '\tfunction sendInvestmentsToOwner() isOwner {\n', '\t\tassert(now >= preIcoEnd);\n', '\t\towner.transfer(this.balance);\n', '\t}\n', '\n', '\tfunction buy(string promo) payable {\n', '\t\tassert(now < preIcoEnd);\n', '\t\tassert(now >= preIcoStart);\n', '\t\tassert(msg.value>=minSizeInvest);\n', '\n', '\t\tif(holders[msg.sender] == 0){\n', '\t\t\tcountHolders += 1;\n', '\t\t}\n', '\t\tholders[msg.sender] += msg.value;\n', '\t\tamount_investments += msg.value;\n', '\t\tInvestment(msg.sender, msg.value);\n', '\n', '\t\tif(affiliate != address(0x0)){\n', '\t\t\tvar (partner_address, partner_bonus, referral_bonus) = contractAffiliate.add_referral(msg.sender, promo, msg.value);\n', '\t\t\tif(partner_bonus > 0 && partner_address != address(0x0)){\n', '\t\t\t\tholdersBonus[partner_address] += msg.value;\n', '\t\t\t\tamount_bonus += msg.value;\n', '\t\t\t}\n', '\t\t\tif(referral_bonus > 0){\n', '\t\t\t\tholdersBonus[msg.sender] = referral_bonus;\n', '\t\t\t\tamount_bonus += referral_bonus;\n', '\t\t\t}\n', '\t\t}\n', '\t\tstopPreIco_step2();\n', '\t}\n', '\n', '\tfunction () payable {\n', "\t\tbuy('');\n", '\t}\n', '}']
