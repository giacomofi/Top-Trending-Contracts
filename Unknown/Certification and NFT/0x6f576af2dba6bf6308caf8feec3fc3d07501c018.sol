['// Refund contract for extraBalance\n', '// Amounts to be paid are tokenized in another contract and allow using the same refund contract as for theDAO\n', "// Though it may be misleading, the names 'DAO', 'mainDAO' are kept here for the ease of code review\n", '\n', 'contract DAO {\n', '    function balanceOf(address addr) returns (uint);\n', '    function transferFrom(address from, address to, uint balance) returns (bool);\n', '    uint public totalSupply;\n', '}\n', '\n', 'contract WithdrawDAO {\n', '    DAO constant public mainDAO = DAO(0x5c40ef6f527f4fba68368774e6130ce6515123f2);\n', '    address constant public trustee = 0xda4a4626d3e16e094de3225a751aab7128e96526;\n', '\n', '    function withdraw(){\n', '        uint balance = mainDAO.balanceOf(msg.sender);\n', '\n', '        if (!mainDAO.transferFrom(msg.sender, this, balance) || !msg.sender.send(balance))\n', '            throw;\n', '    }\n', '\n', '    function trusteeWithdraw() {\n', '        trustee.send((this.balance + mainDAO.balanceOf(this)) - mainDAO.totalSupply());\n', '    }\n', '}']