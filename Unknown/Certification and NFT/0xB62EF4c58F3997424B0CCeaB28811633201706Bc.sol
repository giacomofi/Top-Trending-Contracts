['pragma solidity 0.4.11;\n', '\n', 'contract Fundraiser {\n', '\n', '  /* State */\n', '\n', '  address public signer1;\n', '  address public signer2;\n', '\n', '  enum Action {\n', '    None,\n', '    Withdraw\n', '  }\n', '  \n', '  struct Proposal {\n', '    Action action;\n', '    address destination;\n', '    uint256 amount;\n', '  }\n', '  \n', '  Proposal public signer1_proposal;\n', '  Proposal public signer2_proposal;\n', '\n', '  /* Constructor, choose signers. Those cannot be changed */\n', '  function Fundraiser(address init_signer1,\n', '                      address init_signer2) {\n', '    signer1 = init_signer1;\n', '    signer2 = init_signer2;\n', '    signer1_proposal.action = Action.None;\n', '    signer2_proposal.action = Action.None;\n', '  }\n', '\n', '  /* allow simple send transactions */\n', '  function () payable {\n', '  }\n', '\n', '  \n', '  /* Entry points for signers */\n', '\n', '  function Withdraw(address proposed_destination,\n', '                    uint256 proposed_amount) {\n', '    /* check amount */\n', '    if (proposed_amount > this.balance) { throw; }\n', '    /* update action */\n', '    if (msg.sender == signer1) {\n', '      signer1_proposal.action = Action.Withdraw;\n', '      signer1_proposal.destination = proposed_destination;\n', '      signer1_proposal.amount = proposed_amount;\n', '    } else if (msg.sender == signer2) {\n', '      signer2_proposal.action = Action.Withdraw;\n', '      signer2_proposal.destination = proposed_destination;\n', '      signer2_proposal.amount = proposed_amount;\n', '    } else { throw; }\n', '    /* perform action */\n', '    MaybePerformWithdraw();\n', '  }\n', '\n', '  function MaybePerformWithdraw() internal {\n', '    if (signer1_proposal.action == Action.Withdraw\n', '        && signer2_proposal.action == Action.Withdraw\n', '        && signer1_proposal.amount == signer2_proposal.amount\n', '        && signer1_proposal.destination == signer2_proposal.destination) {\n', '      signer1_proposal.action = Action.None;\n', '      signer2_proposal.action = Action.None;\n', '      signer1_proposal.destination.transfer(signer1_proposal.amount);\n', '    }\n', '  }\n', '\n', '}']