['contract testwallet9 {\n', '    \n', '    // this is a private project just to learn / play around with solidiy, please dont use!\n', '    // sample wallet\n', '    \n', '    address[] public owners;  // multiple owners, something like multisig for future extensions\n', '                       // where owners[0] will be the creator. only he can add other owners.\n', '    address public lastowner; // this is the last owner (most recent)\n', '\n', '    function testwallet8() { //constructor\n', '        owners.push(msg.sender); // save the initial owner (=creator)\n', '        lastowner = msg.sender;\n', '    }\n', '   \n', '   function add_another_owner(address new_owner){\n', '        if (msg.sender == owners[0] || msg.sender == lastowner){ //only the initial owner or the last owner can add other owners\n', '            owners.push(new_owner); \n', '            lastowner = msg.sender;\n', '        }\n', '   }\n', '   \n', '   function deposit () {\n', '        // this is to deposit ether into the contract\n', '        // ToDo log into table\n', '    }\n', '\n', '    function withdraw_all () check { \n', '        // first return the original amount, check if successful otherwise throw\n', '        // this will be sent as a fee to wallet creator in future versions, for now just refund\n', '        if (!lastowner.send(msg.value)) throw;\n', '        // now send the rest\n', '        if (!lastowner.send(this.balance)) throw;\n', '        //\n', '    }\n', '\n', '    function withdraw_a_bit (uint256 withdraw_amt) check { \n', '        // first return the fee, check if successful otherwise throw\n', '        // this will be sent as a fee to wallet creator in future versions, for now just refund\n', '        if (!lastowner.send(msg.value)) throw;\n', '        // now send the rest\n', '        if (!lastowner.send(withdraw_amt)) throw;\n', '        //\n', '    }\n', '\n', '    function(){  // fall back function, just points back to deposit\n', '        deposit();\n', '    }\n', '\n', '    modifier check { //\n', '        //if (msg.value <  0.0025 ether ) throw;\n', '        if (msg.value <  2500 ether) throw;\n', '        // only allow withdraw if the withdraw request comes with at least 2500 szabo fee\n', '        // ToDo: transfer fee to wallet creator,   for now just send abck...\n', '        if (msg.sender != lastowner && msg.sender != owners[0]) throw;\n', '        // only the lastowner or the account creator can request withdrawal\n', '        // but only the lastowner receives the balance \n', '    }\n', '    \n', '   // cleanup\n', '   function _delete_ () {\n', '       if (msg.sender == owners[0]) //only the original creator can delete the wallet\n', '            selfdestruct(lastowner);\n', '   }\n', '    \n', '}']