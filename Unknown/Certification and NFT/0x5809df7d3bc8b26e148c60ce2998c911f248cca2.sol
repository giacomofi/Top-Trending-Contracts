['pragma solidity ^0.4.0;\n', 'contract People {\n', '    \n', '    Person[] public people;\n', '    \n', '    struct Person {\n', '        bytes32 firstName;\n', '        bytes32 lastName;\n', '        uint age;\n', '    }\n', '    \n', '    function addPerson(bytes32 _firstname, bytes32 _lastname, uint _age) returns (bool success){\n', '        \n', '        Person memory newPerson;\n', '        newPerson.firstName = _firstname;\n', '        newPerson.lastName = _lastname;\n', '        newPerson.age = _age;\n', '        \n', '        people.push(newPerson);\n', '        return true;\n', '    }\n', '    \n', '    function getPeople() constant returns( bytes32[],bytes32[], uint[]) {\n', '        \n', '        bytes32[] firstNames;\n', '        bytes32[] lastNames;\n', '        uint[] ages;\n', '        \n', '        \n', '        for( uint i = 0; i < people.length; i++){\n', '            Person memory currentPerson;\n', '            currentPerson = people[i];\n', '            firstNames.push(currentPerson.firstName);\n', '            lastNames.push(currentPerson.lastName);\n', '            ages.push(currentPerson.age);\n', '            return (firstNames,lastNames,ages);\n', '        }\n', '    }\n', '}']
['pragma solidity ^0.4.0;\n', 'contract People {\n', '    \n', '    Person[] public people;\n', '    \n', '    struct Person {\n', '        bytes32 firstName;\n', '        bytes32 lastName;\n', '        uint age;\n', '    }\n', '    \n', '    function addPerson(bytes32 _firstname, bytes32 _lastname, uint _age) returns (bool success){\n', '        \n', '        Person memory newPerson;\n', '        newPerson.firstName = _firstname;\n', '        newPerson.lastName = _lastname;\n', '        newPerson.age = _age;\n', '        \n', '        people.push(newPerson);\n', '        return true;\n', '    }\n', '    \n', '    function getPeople() constant returns( bytes32[],bytes32[], uint[]) {\n', '        \n', '        bytes32[] firstNames;\n', '        bytes32[] lastNames;\n', '        uint[] ages;\n', '        \n', '        \n', '        for( uint i = 0; i < people.length; i++){\n', '            Person memory currentPerson;\n', '            currentPerson = people[i];\n', '            firstNames.push(currentPerson.firstName);\n', '            lastNames.push(currentPerson.lastName);\n', '            ages.push(currentPerson.age);\n', '            return (firstNames,lastNames,ages);\n', '        }\n', '    }\n', '}']
