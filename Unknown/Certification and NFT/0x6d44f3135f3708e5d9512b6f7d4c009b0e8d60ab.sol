['pragma solidity ^0.4.9; \n', '//v.1609rev17 Ezlab 2016 all-rights reseved support@ezlab.it\n', '//special purpose contract for CantinaVolpone further info https://agrichain.it/d/0x160564d346f6e9fb3d93c034f207ecf9791b7739\n', '\n', '//common base contract\n', 'contract BaseAgriChainContract {\n', '    address creator; \n', '    bool public isSealed;\n', '    function BaseAgriChainContract() public    {  creator = msg.sender; EventCreated(this,creator); }\n', '    modifier onlyIfNotSealed() //semantic when sealed is not possible to change sensible data\n', '    {\n', '        if (isSealed)\n', '            throw;\n', '        _;\n', '    }\n', '\n', '    modifier onlyBy(address _account) //semantic only _account can operate\n', '    {\n', '        if (msg.sender != _account)\n', '            throw;\n', '        _;\n', '    }\n', '    \n', '    function kill() onlyBy(creator)   { suicide(creator); }     \n', '    function setCreator(address _creator)  onlyBy(creator)  { creator = _creator;     }\n', '    function setSealed()  onlyBy(creator)  { isSealed = true;  EventSealed(this);   } //seal down contract not reversible\n', '\n', '    event EventCreated(address self,address creator);\n', '    event EventSealed(address self); //invoked when contract is sealed\n', '    event EventChanged(address self,string property); // generic property change\n', '    event EventChangedInt32(address self,string property,int32 value); //Int32 property change\n', '    event EventChangedString(address self,string property,string value); //string property Change\n', '    event EventChangedAddress(address self,string property,address value); //address property Changed\n', '    \n', '  \n', '}\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '// production \n', 'contract AgriChainContract   is BaseAgriChainContract    \n', '{  \n', '    string  public  Organization;      //Production Organization\n', '    string  public  Product ;          //Product\n', '    string  public  Description ;      //Description\n', '    address public  AgriChainData;     //ProductionData\n', '    string  public  AgriChainSeal;     //SecuritySeal\n', '    string  public  Notes ;\n', '    \n', '    function   AgriChainProductionContract() public\n', '    { \n', '       AgriChainData=address(this);\n', '    }\n', '    \n', '    function setOrganization(string _Organization)  onlyBy(creator)  onlyIfNotSealed()\n', '    {\n', '          Organization = _Organization;\n', "          EventChangedString(this,'Organization',_Organization);\n", '\n', '    }\n', '    \n', '    function setProduct(string _Product)  onlyBy(creator) onlyIfNotSealed()\n', '    {\n', '          Product = _Product;\n', "          EventChangedString(this,'Product',_Product);\n", '        \n', '    }\n', '    \n', '    function setDescription(string _Description)  onlyBy(creator) onlyIfNotSealed()\n', '    {\n', '          Description = _Description;\n', "          EventChangedString(this,'Description',_Description);\n", '    }\n', '    function setAgriChainData(address _AgriChainData)  onlyBy(creator) onlyIfNotSealed()\n', '    {\n', '         AgriChainData = _AgriChainData;\n', "         EventChangedAddress(this,'AgriChainData',_AgriChainData);\n", '    }\n', '    \n', '    \n', '    function setAgriChainSeal(string _AgriChainSeal)  onlyBy(creator) onlyIfNotSealed()\n', '    {\n', '         AgriChainSeal = _AgriChainSeal;\n', "         EventChangedString(this,'AgriChainSeal',_AgriChainSeal);\n", '    }\n', '    \n', '    \n', '     \n', '    function setNotes(string _Notes)  onlyBy(creator)\n', '    {\n', '         Notes =  _Notes;\n', "         EventChanged(this,'Notes');\n", '    }\n', '}\n', '\n', '\n', '//InnerData\n', 'contract AgriChainDataContract   is BaseAgriChainContract    \n', '{  \n', '    function   AgriChainDataContract() public\n', '    {\n', '        AgriChainNextData=address(this);\n', '        AgriChainPrevData=address(this);\n', '        AgriChainRootData=address(this);\n', '    }\n', '    \n', '      address public  AgriChainNextData;\n', '      address public  AgriChainPrevData;\n', '      address public  AgriChainRootData;\n', '      \n', '      string public AgriChainType;\n', '      string public AgriChainLabel;\n', '      string public AgriChainLabelInt;\n', '      string public AgriChainDescription;\n', '      string public AgriChainDescriptionInt;\n', '      \n', '    function setChain(address _Next,address _Prev, address _Root)  onlyBy(creator)  \n', '    {\n', '         AgriChainNextData=_Next;\n', '         AgriChainPrevData=_Prev;\n', '         AgriChainRootData=_Root;\n', "         EventChanged(this,'Chain');\n", '    }\n', '    \n', '    //main language data  \n', '    function setData(string _Type,string _Label,string _Description)  onlyBy(creator) onlyIfNotSealed()\n', '    {\n', '          AgriChainType=_Type;\n', '          AgriChainLabel=_Label;\n', '          AgriChainDescription=_Description;\n', "          EventChanged(this,'Data');\n", '    }\n', '   \n', '    //International language data\n', '    function setDataInt(string _LabelInt,string _DescriptionInt)  onlyBy(creator) onlyIfNotSealed()\n', '    {\n', '          \n', '          AgriChainLabelInt=_LabelInt;\n', '          AgriChainDescriptionInt=_DescriptionInt;\n', "          EventChanged(this,'DataInt');\n", '    }\n', '   \n', '      \n', '}\n', '\n', '//DocumentData\n', 'contract AgriChainDocumentContract   is AgriChainDataContract    \n', '{  \n', '     \n', '    string  public  Emitter;      //Organization\n', '    string  public  Name;         //Name\n', '    string  public  Description ; //Description\n', '    string  public  NameInt;         //Name International\n', '    string  public  DescriptionInt ; //Description International\n', '\n', '    string  public  FileName;     //FileName\n', '    string  public  FileHash;     //FileHash\n', '    string  public  FileData;     //FileData\n', '   \n', '    string  public  FileNameInt;  //FileName International\n', '    string  public  FileHashInt;  //FileHash International\n', '    string  public  FileDataInt;  //FileData International\n', '\n', '    string  public  Notes ;\n', '    address public  Revision; \n', '    \n', '    function   AgriChainDocumentContract() public\n', '    {\n', '        Revision=address(this);\n', '    }\n', '    \n', '    function setData(string _Emitter,string _Name,string _Description, string _FileName,string _FileHash,string _FileData)  onlyBy(creator) onlyIfNotSealed()\n', '    {\n', '          Emitter=_Emitter;\n', '          Name=_Name;\n', '          Description=_Description;\n', '          FileName=_FileName;\n', '          FileHash=_FileHash;\n', '          FileData=_FileData;          \n', "          EventChanged(this,'Data');\n", '       \n', '    } \n', '    \n', '     \n', '    \n', '    function setRevision(address _Revision)  onlyBy(creator) onlyIfNotSealed()\n', '    {\n', '          Revision = _Revision;\n', '        \n', '    } \n', '     \n', '     \n', '    function setNotes(string _Notes)  onlyBy(creator)\n', '    {\n', '         Notes =  _Notes;\n', '         \n', '    }\n', '}\n', '\n', '\n', '//\n', 'contract AgriChainProductionLotContract   is AgriChainDataContract    \n', '{  \n', '    \n', '     int32  public QuantityInitial;\n', '     int32  public QuantityAvailable;\n', '     string public QuantityUnit;\n', '    \n', '    function InitQuantity(int32 _Initial,string _Unit)  onlyBy(creator)  onlyIfNotSealed()\n', '    {\n', '          QuantityInitial = _Initial;\n', '          QuantityAvailable = _Initial;\n', '          QuantityUnit = _Unit;\n', "          EventChangedInt32(this,'QuantityInitial',_Initial);\n", '\n', '    }\n', '  \n', '    function UseQuantity(int32 _Use)  onlyBy(creator)  \n', '    {\n', '          QuantityAvailable = QuantityAvailable-_Use;\n', "          EventChangedInt32(this,'QuantityAvailable',QuantityAvailable);\n", '\n', '    }\n', '  \n', '}']