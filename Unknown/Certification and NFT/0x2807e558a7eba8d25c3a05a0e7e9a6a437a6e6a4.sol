['pragma solidity ^0.4.0;\n', '\n', 'contract Resolver {\n', '    function supportsInterface(bytes4 interfaceID) constant returns (bool);\n', '    function dnsrr(bytes32 node) constant returns (bytes data);\n', '}\n', '\n', 'contract DNSResolver is Resolver {\n', '    address public owner;\n', '    mapping(bytes32=>bytes) zones;\n', '    \n', '    function OwnedResolver() {\n', '        owner = msg.sender;\n', '    }\n', '    \n', '    modifier owner_only {\n', '        if(msg.sender != owner) throw;\n', '        _;\n', '    }\n', '    \n', '    function supportsInterface(bytes4 interfaceID) constant returns (bool) {\n', '        return interfaceID == 0x126a710e;\n', '    }\n', '    \n', '    function dnsrr(bytes32 node) constant returns (bytes data) {\n', '        return zones[node];\n', '    }\n', '    \n', '    function setDnsrr(bytes32 node, bytes data) owner_only {\n', '        zones[node] = data;\n', '    }\n', '}']