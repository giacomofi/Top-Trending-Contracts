['/// Simple contract that collects money, keeps them till the certain birthday\n', '/// time and then allows certain recipient to take the collected money.\n', 'contract BirthdayGift {\n', '    /// Address of the recipient allowed to take the gift after certain birthday\n', '    /// time.\n', '    address public recipient;\n', '\n', '    /// Birthday time, the gift could be taken after.\n', '    uint public birthday;\n', '\n', '    /// Congratulate recipient and give the gift.\n', '    ///\n', '    /// @param recipient recipient of the gift\n', '    /// @param value value of the gift\n', '    event HappyBirthday (address recipient, uint value);\n', '\n', '    /// Instantiate the contract with given recipient and birthday time.\n', '    ///\n', '    /// @param _recipient recipient of the gift\n', '    /// @param _birthday birthday time\n', '    function BirthdayGift (address _recipient, uint _birthday)\n', '    {\n', '        // Remember recipient\n', '        recipient = _recipient;\n', '\n', '        // Remember birthday time\n', '        birthday = _birthday;\n', '    }\n', '\n', "    /// Collect money if birthday time didn't come yet.\n", '    function ()\n', '    {\n', '        // Do not collect after birthday time\n', '        if (block.timestamp >= birthday) throw;\n', '    }\n', '\n', '    /// Take a gift.\n', '    function Take ()\n', '    {\n', '        // Only proper recipient is allowed to take the gift\n', '        if (msg.sender != recipient) throw;\n', '\n', "        // Gift couldn't be taken before birthday time\n", '        if (block.timestamp < birthday) throw;\n', '\n', "        // Let's congratulate our recipient\n", '        HappyBirthday (recipient, this.balance);\n', '\n', '        // And finally give the gift!\n', '        if (!recipient.send (this.balance)) throw;\n', '    }\n', '}']