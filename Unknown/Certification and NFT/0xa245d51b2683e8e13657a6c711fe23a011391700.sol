['pragma solidity ^0.4.10;\n', 'contract Ownable {\n', '  address public owner;\n', '\n', '  function Ownable() {\n', '    owner = msg.sender;\n', '  }\n', '\n', '  modifier onlyOwner() {\n', '    if (msg.sender == owner)\n', '      _;\n', '  }\n', '\n', '  function transferOwnership(address newOwner) onlyOwner {\n', '    if (newOwner != address(0)) owner = newOwner;\n', '  }\n', '\n', '}\n', '\n', 'contract wLogoVote {\n', '\tfunction claimReward(address _receiver);\n', '}\n', '\n', 'contract Logo is Ownable{\n', '\n', '\twLogoVote public logoVote;\n', '\n', '\taddress public author;\n', '\tstring public metadataUrl;\n', '\n', '\tevent ReceiveTips(address _from, uint _value);\n', '\n', '\tfunction Logo(address _owner, address _author, string _metadatUrl){\n', '\t\towner = _owner;\n', '\t\tauthor = _author;\n', '\t\tmetadataUrl = _metadatUrl;\n', '\t\tlogoVote = wLogoVote(msg.sender);\n', '\t}\n', '\n', '\tfunction tips() payable {\n', '\t\tReceiveTips(msg.sender, msg.value);\n', '\t\tif(!author.send(msg.value)) throw;\n', '\t}\n', '\n', '\tfunction claimReward() onlyOwner {\n', '\t\tlogoVote.claimReward(author);\n', '\t}\n', '\n', '\tfunction setMetadata(string _metadataUrl) onlyOwner {\n', '\t\tmetadataUrl = _metadataUrl;\n', '\t}\n', '\n', '\tfunction () payable {\n', '\t\ttips();\n', '\t}\n', '}']