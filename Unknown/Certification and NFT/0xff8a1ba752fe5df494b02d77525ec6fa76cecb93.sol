['pragma solidity ^0.4.15;\n', '\n', 'contract ERC20 {\n', '\n', '  function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\n', '}\n', '\n', 'contract Ownable {\n', '\n', '  address owner;\n', '  address pendingOwner;\n', '\n', '  modifier onlyOwner {\n', '    require(msg.sender == owner);\n', '    _;\n', '  }\n', '\n', '  modifier onlyPendingOwner {\n', '    require(msg.sender == pendingOwner);\n', '    _;\n', '  }\n', '\n', '  function Ownable() {\n', '    owner = msg.sender;\n', '  }\n', '\n', '  function transferOwnership(address newOwner) onlyOwner {\n', '    pendingOwner = newOwner;\n', '  }\n', '\n', '  function claimOwnership() onlyPendingOwner {\n', '    owner = pendingOwner;\n', '  }\n', '}\n', '\n', 'contract Destructible is Ownable {\n', '\n', '  function destroy() onlyOwner {\n', '    selfdestruct(msg.sender);\n', '  }\n', '}\n', '\n', 'contract WithClaim {\n', '    \n', '    event Claim(string data);\n', '}\n', '\n', '// Mainnet: 0xFd74f0ce337fC692B8c124c094c1386A14ec7901\n', '// Rinkeby: 0xC5De286677AC4f371dc791022218b1c13B72DbBd\n', '// Ropsten: 0x6f32a6F579CFEed1FFfDc562231C957ECC894001\n', '// Kovan:   0x139d658eD55b78e783DbE9bD4eb8F2b977b24153\n', '\n', 'contract UserfeedsClaimWithoutValueTransfer is Destructible, WithClaim {\n', '\n', '  function post(string data) {\n', '    Claim(data);\n', '  }\n', '}\n', '\n', '// Mainnet: 0x70B610F7072E742d4278eC55C02426Dbaaee388C\n', '// Rinkeby: 0x00034B8397d9400117b4298548EAa59267953F8c\n', '// Ropsten: 0x37C1CA7996CDdAaa31e13AA3eEE0C89Ee4f665B5\n', '// Kovan:   0xc666c75C2bBA9AD8Df402138cE32265ac0EC7aaC\n', '\n', 'contract UserfeedsClaimWithValueTransfer is Destructible, WithClaim {\n', '\n', '  function post(address userfeed, string data) payable {\n', '    userfeed.transfer(msg.value);\n', '    Claim(data);\n', '  }\n', '}\n', '\n', '// Mainnet: 0xfF8A1BA752fE5df494B02D77525EC6Fa76cecb93\n', '// Rinkeby: 0xBd2A0FF74dE98cFDDe4653c610E0E473137534fB\n', '// Ropsten: 0x54b4372fA0bd76664B48625f0e8c899Ff19DFc39\n', '// Kovan:   0xd6Ede7F43882B100C6311a9dF801088eA91cEb64\n', '\n', 'contract UserfeedsClaimWithTokenTransfer is Destructible, WithClaim {\n', '\n', '  function post(address userfeed, address token, uint value, string data) {\n', '    var erc20 = ERC20(token);\n', '    require(erc20.transferFrom(msg.sender, userfeed, value));\n', '    Claim(data);\n', '  }\n', '}']