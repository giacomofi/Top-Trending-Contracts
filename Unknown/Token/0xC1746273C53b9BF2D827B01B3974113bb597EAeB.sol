['pragma solidity ^0.4.4;\n', '\n', 'contract EtownCoinTest {\n', "  string public standard = 'ERC20';\n", '  string public name;\n', '  string public symbol;\n', '  uint8 public decimals;\n', '  uint256 public totalSupply;\n', '\n', '  mapping (address => uint256) public balanceOf;\n', '  mapping (address => mapping (address => uint256)) public allowance;\n', '\n', '  event Transfer(address indexed from, address indexed to, uint256 value);\n', '\n', '  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n', '\n', '  function EtownCoinTest(\n', '    uint256 initialSupply,\n', '    string tokenName,\n', '    uint8 decimalUnits,\n', '    string tokenSymbol\n', '    ) {\n', '    balanceOf[msg.sender] = initialSupply;\n', '    totalSupply = initialSupply;\n', '    name = tokenName;\n', '    symbol = tokenSymbol;\n', '    decimals = decimalUnits;\n', '  }\n', '\n', '  function transfer(address _to, uint256 _value) {\n', '    if (_to == 0x0) revert();\n', '    if (balanceOf[msg.sender] < _value) revert();\n', '    if (balanceOf[_to] + _value < balanceOf[_to]) revert();\n', '    balanceOf[msg.sender] -= _value;\n', '    balanceOf[_to] += _value;\n', '    Transfer(msg.sender, _to, _value);\n', '  }\n', '\n', '  function approve(address _spender, uint256 _value)\n', '    returns (bool success) {\n', '    allowance[msg.sender][_spender] = _value;\n', '    Approval(msg.sender, _spender, _value);\n', '    success = true;\n', '  }    \n', '\n', '  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\n', '    if (_to == 0x0) revert();\n', '    if (balanceOf[_from] < _value) revert();\n', '    if (balanceOf[_to] + _value < balanceOf[_to]) revert();\n', '    balanceOf[_from] -= _value;\n', '    balanceOf[_to] += _value;\n', '    allowance[_from][msg.sender] -= _value;\n', '    Transfer(_from, _to, _value);\n', '    success = true;\n', '  }\n', '}']