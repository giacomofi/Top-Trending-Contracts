['pragma solidity ^0.4.16;\n', '\n', 'contract TestCoin {\n', '    string public name;\n', '    string public symbol;\n', '    uint8 public decimals;\n', '\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '\n', '    /* This creates an array with all balances */\n', '    mapping (address => uint256) public balanceOf;\n', '\n', '    /* Initializes contract with initial supply tokens to the creator of the contract */\n', '    function TestCoin() {\n', '        balanceOf[msg.sender] = 4000000;  \t            // Give the creator all initial tokens\n', '        name = "TestCoin";                                  // Set the name for display purposes\n', '        symbol = "TEST";  \t                            // Set the symbol for display purposes\n', '        decimals = 2;                   \t\t    // Amount of decimals for display purposes\n', '    }\n', '\n', '    /* Send coins */\n', '    function transfer(address _to, uint256 _value) {\n', '        require(balanceOf[msg.sender] >= _value);           // Check if the sender has enough\n', '        require(balanceOf[_to] + _value >= balanceOf[_to]); // Check for overflows\n', '        balanceOf[msg.sender] -= _value;                    // Subtract from the sender\n', '        balanceOf[_to] += _value;                           // Add the same to the recipient\n', '\n', '        /* Notify anyone listening that this transfer took place */\n', '        Transfer(msg.sender, _to, _value);\n', '    }\n', '}']