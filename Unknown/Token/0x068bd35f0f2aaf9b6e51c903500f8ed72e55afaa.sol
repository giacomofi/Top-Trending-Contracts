['pragma solidity ^0.4.11;\n', ' \n', 'contract admined {\n', '\taddress public admin;\n', '\n', '\tfunction admined(){\n', '\t\tadmin = msg.sender;\n', '\t}\n', '\n', '\tmodifier onlyAdmin(){\n', '\t\trequire(msg.sender == admin);\n', '\t\t_;\n', '\t}\n', '\n', '\tfunction transferAdminship(address newAdmin) onlyAdmin {\n', '\t\tadmin = newAdmin;\n', '\t}\n', '\n', '}\n', '\n', 'contract AllInOne {\n', '\n', '\tmapping (address => uint256) public balanceOf;\n', '\t// balanceOf[address] = 5;\n', '\tstring public name;\n', '\tstring public symbol;\n', '\tuint8 public decimal; \n', '\tuint256 public intialSupply=500000000;\n', '\tuint256 public totalSupply;\n', '\t\n', '\t\n', '\tevent Transfer(address indexed from, address indexed to, uint256 value);\n', '\n', '\n', '\tfunction AllInOne(){\n', '\t\tbalanceOf[msg.sender] = intialSupply;\n', '\t\ttotalSupply = intialSupply;\n', '\t\tdecimal = 2;\n', '\t\tsymbol = "AIO";\n', '\t\tname = "AllInOne";\n', '\t}\n', '\n', '\tfunction transfer(address _to, uint256 _value){\n', '\t\trequire(balanceOf[msg.sender] > _value);\n', '\t\trequire(balanceOf[_to] + _value > balanceOf[_to]) ;\n', '\t\t//if(admin)\n', '\n', '\t\tbalanceOf[msg.sender] -= _value;\n', '\t\tbalanceOf[_to] += _value;\n', '\t\tTransfer(msg.sender, _to, _value);\n', '\t}\n', '\n', '}\n', '\n', 'contract AssetToken is admined, AllInOne{\n', '\n', '\n', '\tfunction AssetToken() AllInOne (){\n', '\t\ttotalSupply = 500000000;\n', '\t\tadmin = msg.sender;\n', '\t\tbalanceOf[admin] = 500000000;\n', '\t\ttotalSupply = 500000000;\t\n', '\t}\n', '\n', '\tfunction mintToken(address target, uint256 mintedAmount) onlyAdmin{\n', '\t\tbalanceOf[target] += mintedAmount;\n', '\t\ttotalSupply += mintedAmount;\n', '\t\tTransfer(0, this, mintedAmount);\n', '\t\tTransfer(this, target, mintedAmount);\n', '\t}\n', '\n', '\tfunction transfer(address _to, uint256 _value){\n', '\t\trequire(balanceOf[msg.sender] > 0);\n', '\t\trequire(balanceOf[msg.sender] > _value) ;\n', '\t\trequire(balanceOf[_to] + _value > balanceOf[_to]);\n', '\t\t//if(admin)\n', '\t\tbalanceOf[msg.sender] -= _value;\n', '\t\tbalanceOf[_to] += _value;\n', '\t\tTransfer(msg.sender, _to, _value);\n', '\t}\n', '\n', '}']
['pragma solidity ^0.4.11;\n', ' \n', 'contract admined {\n', '\taddress public admin;\n', '\n', '\tfunction admined(){\n', '\t\tadmin = msg.sender;\n', '\t}\n', '\n', '\tmodifier onlyAdmin(){\n', '\t\trequire(msg.sender == admin);\n', '\t\t_;\n', '\t}\n', '\n', '\tfunction transferAdminship(address newAdmin) onlyAdmin {\n', '\t\tadmin = newAdmin;\n', '\t}\n', '\n', '}\n', '\n', 'contract AllInOne {\n', '\n', '\tmapping (address => uint256) public balanceOf;\n', '\t// balanceOf[address] = 5;\n', '\tstring public name;\n', '\tstring public symbol;\n', '\tuint8 public decimal; \n', '\tuint256 public intialSupply=500000000;\n', '\tuint256 public totalSupply;\n', '\t\n', '\t\n', '\tevent Transfer(address indexed from, address indexed to, uint256 value);\n', '\n', '\n', '\tfunction AllInOne(){\n', '\t\tbalanceOf[msg.sender] = intialSupply;\n', '\t\ttotalSupply = intialSupply;\n', '\t\tdecimal = 2;\n', '\t\tsymbol = "AIO";\n', '\t\tname = "AllInOne";\n', '\t}\n', '\n', '\tfunction transfer(address _to, uint256 _value){\n', '\t\trequire(balanceOf[msg.sender] > _value);\n', '\t\trequire(balanceOf[_to] + _value > balanceOf[_to]) ;\n', '\t\t//if(admin)\n', '\n', '\t\tbalanceOf[msg.sender] -= _value;\n', '\t\tbalanceOf[_to] += _value;\n', '\t\tTransfer(msg.sender, _to, _value);\n', '\t}\n', '\n', '}\n', '\n', 'contract AssetToken is admined, AllInOne{\n', '\n', '\n', '\tfunction AssetToken() AllInOne (){\n', '\t\ttotalSupply = 500000000;\n', '\t\tadmin = msg.sender;\n', '\t\tbalanceOf[admin] = 500000000;\n', '\t\ttotalSupply = 500000000;\t\n', '\t}\n', '\n', '\tfunction mintToken(address target, uint256 mintedAmount) onlyAdmin{\n', '\t\tbalanceOf[target] += mintedAmount;\n', '\t\ttotalSupply += mintedAmount;\n', '\t\tTransfer(0, this, mintedAmount);\n', '\t\tTransfer(this, target, mintedAmount);\n', '\t}\n', '\n', '\tfunction transfer(address _to, uint256 _value){\n', '\t\trequire(balanceOf[msg.sender] > 0);\n', '\t\trequire(balanceOf[msg.sender] > _value) ;\n', '\t\trequire(balanceOf[_to] + _value > balanceOf[_to]);\n', '\t\t//if(admin)\n', '\t\tbalanceOf[msg.sender] -= _value;\n', '\t\tbalanceOf[_to] += _value;\n', '\t\tTransfer(msg.sender, _to, _value);\n', '\t}\n', '\n', '}']
