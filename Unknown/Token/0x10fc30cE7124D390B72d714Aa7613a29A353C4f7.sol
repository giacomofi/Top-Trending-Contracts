['pragma solidity ^0.4.11;\n', '\n', '/// @title Artcoin (ART) - democratizing culture.\n', 'contract Artcoin {\n', '\n', '    string public constant name = "Artcoin";\n', '    string public constant symbol = "ART";\n', '    uint8 public constant decimals = 18;\n', '\n', '    uint256 public authorizedSupply;\n', '    uint256 public treasurySupply;\n', '\n', '    mapping (address => uint) public balances;\n', '\n', '    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n', '\n', '    /*\n', '     * Initialize Artcoin.\n', '     */\n', '    function Artcoin(address consortium, uint256 _authorizedSupply, uint256 _treasurySupply) {\n', '        authorizedSupply = _authorizedSupply;\n', '        treasurySupply = _treasurySupply;\n', '        if (authorizedSupply < treasurySupply) throw;\n', '\n', '        // one-time issuance of ART to the consortium endowment\n', '        balances[consortium] = authorizedSupply;\n', '\n', '        // one-time issuance of ART to the consortium founders\n', '        var founderSupply = ((authorizedSupply - treasurySupply) / 2) / 2;\n', '        balances[0x00331BA52fa3A22d6C7904Be8910954184336bcc] = founderSupply;\n', '        balances[0x210DdB647768B891472700CaE03043003A79384E] = founderSupply;\n', '\n', '        balances[consortium] -= founderSupply * 2;\n', '    }\n', '\n', '    /// @return total amount of ART\n', '    function totalSupply() external constant returns (uint256) {\n', '        return authorizedSupply;\n', '    }\n', '\n', '    /// @param _owner The address from which the ART balance will be retrieved\n', '    /// @return The balance\n', '    function balanceOf(address _owner) constant returns (uint256 balance) {\n', '        return balances[_owner];\n', '    }\n', '\n', '    /// @notice send `_value` ART to `_to` from `msg.sender`\n', '    /// to provided account address `_to`.\n', '    /// @param _to The address of the ART recipient\n', '    /// @param _value The amount of ART to be transferred\n', '    /// @return Whether the transfer was successful or not\n', '    function transfer(address _to, uint256 _value) returns (bool) {\n', '        var senderBalance = balances[msg.sender];\n', '        var overflow = balanceOf(_to) + _value < balanceOf(_to);\n', '        if (_value > 0 && senderBalance >= _value && !overflow) {\n', '            senderBalance -= _value;\n', '            balances[msg.sender] = senderBalance;\n', '            balances[_to] += _value;\n', '            Transfer(msg.sender, _to, _value);\n', '            return true;\n', '        }\n', '        return false;\n', '    }\n', '}']