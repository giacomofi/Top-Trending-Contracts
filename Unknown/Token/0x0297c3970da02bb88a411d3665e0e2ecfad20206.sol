['pragma solidity ^0.4.13;\n', '\n', 'contract PRSToken {\n', '    function balanceOf(address _owner) constant returns (uint256);\n', '    function transfer(address _to, uint256 _value) returns (bool);\n', '}\n', '\n', 'contract PRSTokenICO {\n', '    address owner = msg.sender;\n', '\n', '    bool private purchasingAllowed = true;\n', '\n', '    mapping (address => uint256) balances;\n', '\n', '    uint256 private totalContribution = 0;\n', '\n', '    uint256 private totalSupply = 0;\n', '\n', '    function name() constant returns (string) { return "Useless Ethereum Token 2"; }\n', '    function symbol() constant returns (string) { return "UET2"; }\n', '    function decimals() constant returns (uint8) { return 18; }\n', '    \n', '    function balanceOf(address _owner) constant returns (uint256) { return balances[_owner]; }\n', '    \n', '    function enablePurchasing(bool enable) {\n', '        if (msg.sender != owner) { revert(); }\n', '\n', '        purchasingAllowed = enable;\n', '    }\n', '    \n', '    function withdrawPRSTokens(address _tokenContract) returns (bool) {\n', '        if (msg.sender != owner) { revert(); }\n', '\n', '        PRSToken token = PRSToken(_tokenContract);\n', '\n', '        uint256 amount = token.balanceOf(address(this));\n', '        return token.transfer(owner, amount);\n', '    }\n', '\n', '    function getStats() constant returns (uint256, uint256, bool) {\n', '        return (totalContribution, totalSupply, purchasingAllowed);\n', '    }\n', '\n', '    function() payable {\n', '        if (!purchasingAllowed) { revert(); }\n', '        \n', '        if (msg.value == 0) { return; }\n', '\n', '        owner.transfer(msg.value);\n', '        totalContribution += msg.value;\n', '\n', '        uint256 tokensIssued = (msg.value * 100);\n', '\n', '        if (msg.value >= 10 finney) {\n', '            tokensIssued += totalContribution;\n', '        }\n', '\n', '        totalSupply += tokensIssued;\n', '        balances[msg.sender] += tokensIssued;\n', '        \n', '    }\n', '}']
['pragma solidity ^0.4.13;\n', '\n', 'contract PRSToken {\n', '    function balanceOf(address _owner) constant returns (uint256);\n', '    function transfer(address _to, uint256 _value) returns (bool);\n', '}\n', '\n', 'contract PRSTokenICO {\n', '    address owner = msg.sender;\n', '\n', '    bool private purchasingAllowed = true;\n', '\n', '    mapping (address => uint256) balances;\n', '\n', '    uint256 private totalContribution = 0;\n', '\n', '    uint256 private totalSupply = 0;\n', '\n', '    function name() constant returns (string) { return "Useless Ethereum Token 2"; }\n', '    function symbol() constant returns (string) { return "UET2"; }\n', '    function decimals() constant returns (uint8) { return 18; }\n', '    \n', '    function balanceOf(address _owner) constant returns (uint256) { return balances[_owner]; }\n', '    \n', '    function enablePurchasing(bool enable) {\n', '        if (msg.sender != owner) { revert(); }\n', '\n', '        purchasingAllowed = enable;\n', '    }\n', '    \n', '    function withdrawPRSTokens(address _tokenContract) returns (bool) {\n', '        if (msg.sender != owner) { revert(); }\n', '\n', '        PRSToken token = PRSToken(_tokenContract);\n', '\n', '        uint256 amount = token.balanceOf(address(this));\n', '        return token.transfer(owner, amount);\n', '    }\n', '\n', '    function getStats() constant returns (uint256, uint256, bool) {\n', '        return (totalContribution, totalSupply, purchasingAllowed);\n', '    }\n', '\n', '    function() payable {\n', '        if (!purchasingAllowed) { revert(); }\n', '        \n', '        if (msg.value == 0) { return; }\n', '\n', '        owner.transfer(msg.value);\n', '        totalContribution += msg.value;\n', '\n', '        uint256 tokensIssued = (msg.value * 100);\n', '\n', '        if (msg.value >= 10 finney) {\n', '            tokensIssued += totalContribution;\n', '        }\n', '\n', '        totalSupply += tokensIssued;\n', '        balances[msg.sender] += tokensIssued;\n', '        \n', '    }\n', '}']
