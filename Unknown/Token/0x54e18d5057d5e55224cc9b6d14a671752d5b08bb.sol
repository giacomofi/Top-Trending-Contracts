['pragma solidity ^0.4.8;\n', '\n', 'contract WSIPrivateEquityShare {\n', '    /* Public variables of the token */\n', '    string public constant name = &#39;WSI Private Equity Share&#39;;\n', '    string public constant symbol = &#39;WSIPES&#39;;\n', '    uint256 public constant totalSupply = 10000;\n', '    uint8 public decimals = 2;\n', '\n', '    /* This creates an array with all balances */\n', '    mapping (address => uint256) public balanceOf;\n', '\n', '    /* This generates a public event on the blockchain that will notify clients */\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '\n', '    /* Initializes contract with initial supply tokens to the creator of the contract */\n', '    function WSIPrivateEquityShare() {\n', '        balanceOf[msg.sender] = totalSupply;              // Give the creator all initial tokens\n', '    }\n', '\n', '    /* Send coins */\n', '    function transfer(address _to, uint256 _value) {\n', '        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough\n', '        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows\n', '        balanceOf[msg.sender] -= _value;                     // Subtract from the sender\n', '        balanceOf[_to] += _value;                            // Add the same to the recipient\n', '        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place\n', '    }\n', '\n', '    /* This unnamed function is called whenever someone tries to send ether to it */\n', '    function () {\n', '        throw;     // Prevents accidental sending of ether\n', '    }\n', '}']
['pragma solidity ^0.4.8;\n', '\n', 'contract WSIPrivateEquityShare {\n', '    /* Public variables of the token */\n', "    string public constant name = 'WSI Private Equity Share';\n", "    string public constant symbol = 'WSIPES';\n", '    uint256 public constant totalSupply = 10000;\n', '    uint8 public decimals = 2;\n', '\n', '    /* This creates an array with all balances */\n', '    mapping (address => uint256) public balanceOf;\n', '\n', '    /* This generates a public event on the blockchain that will notify clients */\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '\n', '    /* Initializes contract with initial supply tokens to the creator of the contract */\n', '    function WSIPrivateEquityShare() {\n', '        balanceOf[msg.sender] = totalSupply;              // Give the creator all initial tokens\n', '    }\n', '\n', '    /* Send coins */\n', '    function transfer(address _to, uint256 _value) {\n', '        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough\n', '        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows\n', '        balanceOf[msg.sender] -= _value;                     // Subtract from the sender\n', '        balanceOf[_to] += _value;                            // Add the same to the recipient\n', '        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place\n', '    }\n', '\n', '    /* This unnamed function is called whenever someone tries to send ether to it */\n', '    function () {\n', '        throw;     // Prevents accidental sending of ether\n', '    }\n', '}']
