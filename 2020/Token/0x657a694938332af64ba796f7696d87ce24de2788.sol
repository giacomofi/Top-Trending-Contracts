['// SPDX-License-Identifier: MIT\n', 'pragma solidity ^0.6.6;\n', '\n', 'contract SmartBTC {\n', '\n', '    string public constant name = "SmartBTC";\n', '    string public constant symbol = "SMBTC";\n', '    uint8 public constant decimals = 0;  \n', '\n', '    mapping(address => uint256) balances;\n', '    \n', '    uint256 totalSupply_;\n', '\n', '    using SafeMath for uint256;\n', '\n', '\n', '   constructor(uint256 total) public {  \n', '    totalSupply_ = total;\n', '    balances[msg.sender] = totalSupply_;\n', '    }  \n', '\n', '    function totalSupply() public view returns (uint256) {\n', '    return totalSupply_;\n', '    }\n', '    \n', '    function balanceOf(address tokenOwner) public view returns (uint) {\n', '        return balances[tokenOwner];\n', '    }\n', '}\n', 'library SafeMath { \n', '    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n', '      assert(b <= a);\n', '      return a - b;\n', '    }\n', '    \n', '    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n', '      uint256 c = a + b;\n', '      assert(c >= a);\n', '      return c;\n', '    }\n', '}']