['/* \n', ' *  Central Gifter DB\n', ' *  VERSION: 1.1\n', ' *\n', ' */\n', ' \n', ' \n', 'contract ERC20{\n', '    function allowance(address owner, address spender) external view returns (uint256){}\n', '    function transfer(address recipient, uint256 amount) external returns (bool){}\n', '    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool){}\n', '    function balanceOf(address account) external view returns (uint256){}\n', '}\n', '\n', '\n', 'contract ItemsGifterDB{\n', '    \n', '    event Gifted(address gifted);\n', '    \n', '    address[] public modules_list;\n', '    mapping(address => bool)public modules;\n', '    \n', '    ERC20 public token;\n', '    address master;\n', '    address public receiver;\n', '    \n', '    constructor() public{\n', '        master=msg.sender;\n', '    }\n', '    \n', '    function gift(address tkn,uint amount,address gifted) public returns(bool){\n', '        require(modules[msg.sender]);\n', '        ERC20 token=ERC20(tkn);\n', '        require(token.transfer(gifted, amount));\n', '        emit Gifted(gifted);\n', '        return true;\n', '    } \n', '    \n', '    function burn(address tkn)public returns(bool){\n', '        require(msg.sender==master);\n', '        ERC20 token=ERC20(tkn);\n', '        token.transfer(master, token.balanceOf(address(this)));\n', '    }\n', '    \n', '    function setModule(address new_module,bool set)public returns(bool){\n', '        require(msg.sender==master);\n', '        modules[new_module]=set;\n', '        if(set)modules_list.push(new_module);\n', '        return true;\n', '    }\n', '    \n', '    function setMaster(address new_master)public returns(bool){\n', '        require(msg.sender==master);\n', '        master=new_master;\n', '        return true;\n', '    }\n', '    \n', '}\n', '\n', 'contract giftOrderer{\n', '    \n', '     function gift(address tkn,uint amount,address dbb) public returns(bool){\n', '        ItemsGifterDB db=ItemsGifterDB(dbb);\n', '        require(db.gift(tkn,amount,msg.sender));\n', '        return true;\n', '    } \n', '    \n', '}']