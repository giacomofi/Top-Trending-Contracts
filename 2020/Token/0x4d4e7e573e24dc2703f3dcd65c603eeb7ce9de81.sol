['pragma solidity ^0.5.17;\n', '\n', '\n', 'contract Wasp {\n', '    function totalSupply() external view returns (uint256 _totalSupply){}\n', '    function balanceOf(address _owner) external view returns (uint256 _balance){}\n', '    function transfer(address _to, uint256 _value) external returns (bool _success){}\n', '    function transferFrom(address _from, address _to, uint256 _value) external returns (bool _success){}\n', '    function approve(address _spender, uint256 _value) external returns (bool _success){}\n', '    function allowance(address _owner, address _spender) external view returns (uint256 _remaining){}\n', '\n', '    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n', '    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n', '}\n', '\n', 'contract WaspFinanceLock {\n', '    \n', '     uint256 constant sixmonth = 16136064;\n', '    \n', '     Wasp token;\n', '     \n', '     address public owner;\n', '    \n', '    modifier onlyOwner() {\n', '        require(msg.sender == owner,"You are not Authorize to call this function");\n', '        _;\n', '    } \n', '    \n', '     constructor() public {\n', '        owner = msg.sender;\n', '    \n', '        token = Wasp(0x938FD0EB452972A72692631A10DD5eEA29832b6f);\n', '    }\n', '    \n', '    function withdrawOwnerNioxToken(uint256 _tkns) public  onlyOwner returns (bool) {\n', '             require(block.timestamp >= sixmonth);\n', '             require(token.transfer(msg.sender, _tkns));\n', '             return true;\n', '    }\n', '    \n', '}']