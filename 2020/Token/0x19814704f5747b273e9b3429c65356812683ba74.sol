['/**\n', '/\n', '/_______/\\\\\\\\\\\\\\\\\\_        __/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_        __/\\\\\\________/\\\\\\_        __/\\\\\\________/\\\\\\_        __/\\\\\\_____________        __/\\\\\\________/\\\\\\_        __/\\\\\\________/\\\\\\_                                                               \n', '/_____/\\\\\\////////__        _\\///////\\\\\\/////__        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_____________        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_______\\/\\\\\\_                                                              \n', '/ ___/\\\\\\/___________        _______\\/\\\\\\_______        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_____________        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_______\\/\\\\\\_                                                             \n', '/  __/\\\\\\_____________        _______\\/\\\\\\_______        _\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_____________        _\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_        _\\/\\\\\\_______\\/\\\\\\_                                                            \n', '/   _\\/\\\\\\_____________        _______\\/\\\\\\_______        _\\/\\\\\\/////////\\\\\\_        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_____________        _\\/\\\\\\/////////\\\\\\_        _\\/\\\\\\_______\\/\\\\\\_                                                           \n', '/    _\\//\\\\\\____________        _______\\/\\\\\\_______        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_____________        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_______\\/\\\\\\_                                                          \n', '/     __\\///\\\\\\__________        _______\\/\\\\\\_______        _\\/\\\\\\_______\\/\\\\\\_        _\\//\\\\\\______/\\\\\\__        _\\/\\\\\\_____________        _\\/\\\\\\_______\\/\\\\\\_        _\\//\\\\\\______/\\\\\\__                                                         \n', '/      ____\\////\\\\\\\\\\\\\\\\\\_        _______\\/\\\\\\_______        _\\/\\\\\\_______\\/\\\\\\_        __\\///\\\\\\\\\\\\\\\\\\/___        _\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_        _\\/\\\\\\_______\\/\\\\\\_        __\\///\\\\\\\\\\\\\\\\\\/___                                                        \n', '/       _______\\/////////__        _______\\///________        _\\///________\\///__        ____\\/////////_____        _\\///////////////__        _\\///________\\///__        ____\\/////////_____                                                       \n', '/___________          ___________         _____/\\\\\\\\\\\\\\\\\\\\\\___        _______/\\\\\\\\\\______        __/\\\\\\________/\\\\\\_        __/\\\\\\_____________         ___________          ___________                                                            \n', '/ ___________          ___________         ___/\\\\\\/////////\\\\\\_        _____/\\\\\\///\\\\\\____        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_____________         ___________          ___________                                                           \n', '/  ___________          ___________         __\\//\\\\\\______\\///__        ___/\\\\\\/__\\///\\\\\\__        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_____________         ___________          ___________                                                          \n', '/   ___________          ___________         ___\\////\\\\\\_________        __/\\\\\\______\\//\\\\\\_        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_____________         ___________          ___________                                                         \n', '/    ___________          ___________         ______\\////\\\\\\______        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_____________         ___________          ___________                                                        \n', '/     ___________          ___________         _________\\////\\\\\\___        _\\//\\\\\\______/\\\\\\__        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_____________         ___________          ___________                                                       \n', '/      ___________          ___________         __/\\\\\\______\\//\\\\\\__        __\\///\\\\\\__/\\\\\\____        _\\//\\\\\\______/\\\\\\__        _\\/\\\\\\_____________         ___________          ___________                                                      \n', '/       ___________          ___________         _\\///\\\\\\\\\\\\\\\\\\\\\\/___        ____\\///\\\\\\\\\\/_____        __\\///\\\\\\\\\\\\\\\\\\/___        _\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_         ___________          ___________                                                     \n', '/        ___________          ___________         ___\\///////////_____        ______\\/////_______        ____\\/////////_____        _\\///////////////__         ___________          ___________                                                    \n', '/_/\\\\\\________/\\\\\\_        _____/\\\\\\\\\\\\\\\\\\____        ____/\\\\\\\\\\\\\\\\\\_____        __/\\\\\\________/\\\\\\_        __/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_        _____/\\\\\\\\\\\\\\\\\\\\\\___        __/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_        __/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_        ____/\\\\\\\\\\\\\\\\\\_____        \n', '/_\\/\\\\\\_______\\/\\\\\\_        ___/\\\\\\\\\\\\\\\\\\\\\\\\\\__        __/\\\\\\///////\\\\\\___        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\///////////__        ___/\\\\\\/////////\\\\\\_        _\\///////\\\\\\/////__        _\\/\\\\\\///////////__        __/\\\\\\///////\\\\\\___       \n', '/ _\\/\\\\\\_______\\/\\\\\\_        __/\\\\\\/////////\\\\\\_        _\\/\\\\\\_____\\/\\\\\\___        _\\//\\\\\\______/\\\\\\__        _\\/\\\\\\_____________        __\\//\\\\\\______\\///__        _______\\/\\\\\\_______        _\\/\\\\\\_____________        _\\/\\\\\\_____\\/\\\\\\___      \n', '/  _\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\\\\\\\\\\\\\\\\\/____        __\\//\\\\\\____/\\\\\\___        _\\/\\\\\\\\\\\\\\\\\\\\\\_____        ___\\////\\\\\\_________        _______\\/\\\\\\_______        _\\/\\\\\\\\\\\\\\\\\\\\\\_____        _\\/\\\\\\\\\\\\\\\\\\\\\\/____     \n', '/   _\\/\\\\\\/////////\\\\\\_        _\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_        _\\/\\\\\\//////\\\\\\____        ___\\//\\\\\\__/\\\\\\____        _\\/\\\\\\///////______        ______\\////\\\\\\______        _______\\/\\\\\\_______        _\\/\\\\\\///////______        _\\/\\\\\\//////\\\\\\____    \n', '/    _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\/////////\\\\\\_        _\\/\\\\\\____\\//\\\\\\___        ____\\//\\\\\\/\\\\\\_____        _\\/\\\\\\_____________        _________\\////\\\\\\___        _______\\/\\\\\\_______        _\\/\\\\\\_____________        _\\/\\\\\\____\\//\\\\\\___   \n', '/     _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_____\\//\\\\\\__        _____\\//\\\\\\\\\\______        _\\/\\\\\\_____________        __/\\\\\\______\\//\\\\\\__        _______\\/\\\\\\_______        _\\/\\\\\\_____________        _\\/\\\\\\_____\\//\\\\\\__  \n', '/      _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\_______\\/\\\\\\_        _\\/\\\\\\______\\//\\\\\\_        ______\\//\\\\\\_______        _\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_        _\\///\\\\\\\\\\\\\\\\\\\\\\/___        _______\\/\\\\\\_______        _\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_        _\\/\\\\\\______\\//\\\\\\_ \n', '/       _\\///________\\///__        _\\///________\\///__        _\\///________\\///__        _______\\///________        _\\///////////////__        ___\\///////////_____        _______\\///________        _\\///////////////__        _\\///________\\///__\n', '/                                                                                                                       \n', '///                                                                                                                       \n', '/*                                                       *******                                                        \n', '/*                                              ************************                                                \n', '/*                                           ******************************                                            \n', '/*                                         **********************************                                          \n', '/*                                        ************************************                                         \n', '/*                                        ************************************                                         \n', '/*                                        ************************************                                         \n', '/*      //////////////////////////////////************************************////////////////////////////////////    \n', '/*      ///                               ************************************                                 ///      \n', '/*      ///                               ************************************                                 ///      \n', '/*      ///                              ***************************************                               ///      \n', '/*      ///              ********       *****************************************       ********               ///      \n', '/*      ///            ***********     *******************************************    ************             ///      \n', '/*      ///          *******   ****  **********//////************////////***********  ****   *******           ///      \n', '/*      ///         ******    *****  ***********************************************  *****    *****           ///      \n', '/*      ///        ******    *****   ***********************************************   *****   ******          ///      \n', '/*      ///     **************          *****************************************        *****************     ///      \n', '/*      ///  ***  * *********            ***************************************             ***************   ///      \n', '/*      ///*****     *******           *******************************************           *******     ***** ///      \n', '/*      ///***        *****************************************************************************        *** ///      \n', '/*      ///*             **********************************************************************              **///   \n', '/*      ///                  **************************************************************                   *///      \n', '/*      ///                  * *       ******************************************                              ///      \n', '/*      ///                  *       ***********************************************                           ///      \n', '/*      ///                  *     ******* *********************************** *******                         ///      \n', '/*      ///                  *   *******   ***********************************   ******                        ///      \n', '/*      ///                     *****      ***********************************      ****                       ///      \n', '/*      ///                    *****      ************************************       ***                       ///      \n', '/*      ///                    ****       *************************************       ***                      ///      \n', '/*      ///                    ***        *************************************       ***                      ///      \n', '/*      ///                    ***        *************************************       ***                      ///      \n', '/*      ///                    ****       *************************************        **                      ///      \n', '/*      ///                    ****       *************************************       **                       ///      \n', '/*      ///                     ***        ******** ****************** *******        **                       ///      \n', '/*      ///                     ***         ****** ******************  ******         **                       ///      \n', '/*      ///                     ***          ******  ****** ********  ******          **                       ///      \n', '/*      ///                     **           ******   *****   *****   *****            *                       ///      \n', '/*      ///                      *            ******   ***** *****   *****                                     ///      \n', '/*      ///                                    *****   ***** *****   ****                                      ///      \n', '/*      ///                                     ****    *********   ****                                       ///      \n', '/*      ///                                      *****  ********   ****                                        ///      \n', '/*      ///                                       ***** ********   ****                                        ///      \n', '///     ///                                        ****  *******   ***                                         ///      \n', '///     ///                                           * ***** **     *                                         ///      \n', '///     ///                                             **** ****    *                                         ///      \n', '///     ///                                             ***   ***    *                                         ///      \n', '///     ///                                             ***    ***   *                                         ///      \n', '///     ///                                            ***      **   *                                         ///      \n', '///     ///                                            ***     * *                                             ///      \n', '///     ///                                              *                                                     ///      \n', '///     ///                                              *                                                     ///      \n', '///     ///                                              *                                                     ///      \n', '///     ///                                                                                                    ///      \n', '///     ///                                                                                                    ///      \n', '///     ///                                                                                                    ///      \n', '///     ///                                                                                                    ///      \n', '///     ///                                                                                                    ///      \n', '///     ///                                                                                                    ///      \n', '///     ///                                                                                                    ///      \n', '///     ///                                                                                                    ///      \n', '///     ///                                                                                                    ///      \n', '///     ///                                                                                                    ///      \n', '///     ///                                                                                                    ///      \n', '///     //////////////////////////////////////////////////////////////////////////////////////////////////////////    \n', '///          \n', '///                                                                                                                    \n', '///                                                                                                                   \n', '/// Website: ct-hu.com \n', '**/\n', '\n', '\n', 'pragma solidity ^0.7.1;\n', '\n', '// SPDX-License-Identifier: UNLICENSED\n', '\n', 'interface IERC20 {\n', '    function totalSupply() external view returns (uint);\n', '    function balanceOf(address who) external view returns (uint);\n', '    function allowance(address owner, address spender) external view returns (uint);\n', '    function transfer(address to, uint value) external returns (bool);\n', '    function approve(address spender, uint value) external returns (bool);\n', '    function transferFrom(address from, address to, uint value) external returns (bool);\n', '    event Transfer(address indexed from, address indexed to, uint value);\n', '    event Approval(address indexed owner, address indexed spender, uint value);\n', '}\n', '\n', 'interface ApproveAndCallFallBack {\n', '    function receiveApproval(address from, uint tokens, address token, bytes calldata data) external;\n', '}\n', '\n', 'interface burn{\n', '        function burnAmountOfTokensFromTheCallerBECAREFUL(uint256 amount) external;\n', '}\n', '\n', '/*\n', ' * @dev Provides information about the current execution context, including the\n', ' * sender of the transaction and its data. While these are generally available\n', ' * via msg.sender and msg.data, they should not be accessed in such a direct\n', ' * manner, since when dealing with GSN meta-transactions the account sending and\n', ' * paying for execution may not be the actual sender (as far as an application\n', ' * is concerned).\n', ' *\n', ' * This contract is only required for intermediate, library-like contracts.\n', ' */\n', 'abstract contract Context {\n', '    function _msgSender() internal view virtual returns (address payable) {\n', '        return msg.sender;\n', '    }\n', '\n', '    function _msgData() internal view virtual returns (bytes memory) {\n', '        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n', '        return msg.data;\n', '    }\n', '}\n', '\n', '/**\n', ' * @dev Contract module which provides a basic access control mechanism, where\n', ' * there is an account (an owner) that can be granted exclusive access to\n', ' * specific functions.\n', ' *\n', ' * By default, the owner account will be the one that deploys the contract. This\n', ' * can later be changed with {transferOwnership}.\n', ' *\n', ' * This module is used through inheritance. It will make available the modifier\n', ' * `onlyOwner`, which can be applied to your functions to restrict their use to\n', ' * the owner.\n', ' */\n', 'abstract contract Ownable is Context {\n', '    address private _owner;\n', '\n', '    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n', '\n', '    /**\n', '     * @dev Initializes the contract setting the deployer as the initial owner.\n', '     */\n', '    constructor ()  {\n', '        address msgSender = _msgSender();\n', '        _owner = msgSender;\n', '        emit OwnershipTransferred(address(0), msgSender);\n', '    }\n', '\n', '    /**\n', '     * @dev Returns the address of the current owner.\n', '     */\n', '    function owner() public view returns (address) {\n', '        return _owner;\n', '    }\n', '\n', '    /**\n', '     * @dev Throws if called by any account other than the owner.\n', '     */\n', '    modifier onlyOwner() {\n', '        require(_owner == _msgSender(), "Ownable: caller is not the owner");\n', '        _;\n', '    }\n', '\n', '    /**\n', '     * @dev Leaves the contract without owner. It will not be possible to call\n', '     * `onlyOwner` functions anymore. Can only be called by the current owner.\n', '     *\n', '     * NOTE: Renouncing ownership will leave the contract without an owner,\n', '     * thereby removing any functionality that is only available to the owner.\n', '     */\n', '    function renounceOwnership() public virtual onlyOwner {\n', '        emit OwnershipTransferred(_owner, address(0));\n', '        _owner = address(0);\n', '    }\n', '\n', '    /**\n', '     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n', '     * Can only be called by the current owner.\n', '     */\n', '    function transferOwnership(address newOwner) public virtual onlyOwner {\n', '        require(newOwner != address(0), "Ownable: new owner is the zero address");\n', '        emit OwnershipTransferred(_owner, newOwner);\n', '        _owner = newOwner;\n', '    }\n', '}\n', '\n', 'contract SoulsHarvest is Ownable {\n', '    IERC20 public cthu;\n', '    IERC20 public souls;\n', '    burn soulAddressBurn;\n', '    address soulAddress;\n', 'constructor(address _cthu, address _souls) {\n', '        cthu = IERC20(_cthu);\n', '        souls = IERC20(_souls);\n', '        soulAddressBurn = burn(_souls);\n', '        soulAddress = _souls;\n', '    }\n', '    \n', '    event Bought(address indexed buyer, uint256 amount);\n', '    \n', '        function withdrawERC20Tokens(address tokenAddress, uint256 amount) public onlyOwner {\n', '        require(tokenAddress != soulAddress);\n', '        require(tokenAddress != address(this));\n', '        require(IERC20(tokenAddress).balanceOf(address(this)) >= amount);\n', '        IERC20(tokenAddress).transfer(msg.sender, amount);\n', '    }\n', '    \n', '    function buy(uint256 amount) external {\n', '        require(souls.balanceOf(msg.sender) >= amount);\n', '            uint cthuToRecieve = amount / 100;\n', '        require(cthu.balanceOf(address(this)) >= cthuToRecieve);\n', '        // @dev need to be approved via the UI\n', '        souls.transferFrom(msg.sender, address(this), amount);\n', '        soulAddressBurn.burnAmountOfTokensFromTheCallerBECAREFUL(amount);\n', '        cthu.transfer(msg.sender, cthuToRecieve);\n', '        emit Bought(msg.sender, amount);\n', '    }\n', '}']