['//  _               _     __  __                _____ _                  _ _             \n', '// | |             | |   |  \\/  |              / ____| |                | (_)            \n', '// | |     __ _ ___| |_  | \\  / | __ _ _ __   | (___ | |_ __ _ _ __   __| |_ _ __   __ _ \n', "// | |    / _` / __| __| | |\\/| |/ _` | '_ \\   \\___ \\| __/ _` | '_ \\ / _` | | '_ \\ / _` |\n", '// | |___| (_| \\__ \\ |_  | |  | | (_| | | | |  ____) | || (_| | | | | (_| | | | | | (_| |\n', '// |______\\__,_|___/\\__| |_|  |_|\\__,_|_| |_| |_____/ \\__\\__,_|_| |_|\\__,_|_|_| |_|\\__, |\n', '//                                                                                  __/ |\n', '//                                                                                 |___/ \n', '\n', '/*\n', '* Last Man Standing is an Erc20 battle royale game.\n', '* 2% of tokens will be burned on every transaction, similar to a rebase, these coins are burned permanently.\n', '* Small limited 50,000 supply(NO DECIMALS). Minimum 2 LMS burned per transaction. Maximum 25,000 transactions possible.\n', '* As supply shrinks, the price increases, but when will you take profit?\n', "* Upon reaching 2 supply, the coin can't be sold\n", '* NOTE: YOU CANNOT BUY or SELL 2 or less tokens, both with be burned!\n', '* Can you avoid being the last man standing?\n', '* Tg: tg.me/LastManStandingGame\n', '\n', '**/\n', '\n', 'pragma solidity ^0.5.0;\n', '\n', 'interface IERC20 {\n', '  function totalSupply() external view returns (uint256);\n', '  function balanceOf(address who) external view returns (uint256);\n', '  function allowance(address owner, address spender) external view returns (uint256);\n', '  function transfer(address to, uint256 value) external returns (bool);\n', '  function approve(address spender, uint256 value) external returns (bool);\n', '  function transferFrom(address from, address to, uint256 value) external returns (bool);\n', '\n', '  event Transfer(address indexed from, address indexed to, uint256 value);\n', '  event Approval(address indexed owner, address indexed spender, uint256 value);\n', '}\n', '\n', 'library SafeMath {\n', '  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    if (a == 0) {\n', '      return 0;\n', '    }\n', '    uint256 c = a * b;\n', '    assert(c / a == b);\n', '    return c;\n', '  }\n', '\n', '  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    uint256 c = a / b;\n', '    return c;\n', '  }\n', '\n', '  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    assert(b <= a);\n', '    return a - b;\n', '  }\n', '\n', '  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    uint256 c = a + b;\n', '    assert(c >= a);\n', '    return c;\n', '  }\n', '\n', '  function ceil(uint256 a, uint256 m) internal pure returns (uint256) {\n', '    uint256 c = add(a,m);\n', '    uint256 d = sub(c,1);\n', '    return mul(div(d,m),m);\n', '  }\n', '}\n', '\n', 'contract ERC20Detailed is IERC20 {\n', '\n', '  string private _name;\n', '  string private _symbol;\n', '  uint8 private _decimals;\n', '\n', '  constructor(string memory name, string memory symbol, uint8 decimals) public {\n', '    _name = name;\n', '    _symbol = symbol;\n', '    _decimals = decimals;\n', '  }\n', '\n', '  function name() public view returns(string memory) {\n', '    return _name;\n', '  }\n', '\n', '  function symbol() public view returns(string memory) {\n', '    return _symbol;\n', '  }\n', '\n', '  function decimals() public view returns(uint8) {\n', '    return _decimals;\n', '  }\n', '}\n', '\n', 'contract LMSG is ERC20Detailed {\n', '\n', '  using SafeMath for uint256;\n', '  mapping (address => uint256) private _balances;\n', '  mapping (address => mapping (address => uint256)) private _allowed;\n', '\n', '  string constant tokenName = "Last Man Standing Game";\n', '  string constant tokenSymbol = "LMSG";\n', '  uint8  constant tokenDecimals = 0;\n', '  uint256 _totalSupply = 50000;\n', '  uint256 public basePercent = 100;\n', '\n', '//  _               _     __  __                _____ _                  _ _             \n', '// | |             | |   |  \\/  |              / ____| |                | (_)            \n', '// | |     __ _ ___| |_  | \\  / | __ _ _ __   | (___ | |_ __ _ _ __   __| |_ _ __   __ _ \n', "// | |    / _` / __| __| | |\\/| |/ _` | '_ \\   \\___ \\| __/ _` | '_ \\ / _` | | '_ \\ / _` |\n", '// | |___| (_| \\__ \\ |_  | |  | | (_| | | | |  ____) | || (_| | | | | (_| | | | | | (_| |\n', '// |______\\__,_|___/\\__| |_|  |_|\\__,_|_| |_| |_____/ \\__\\__,_|_| |_|\\__,_|_|_| |_|\\__, |\n', '//                                                                                  __/ |\n', '//  \n', '\n', '  constructor() public payable ERC20Detailed(tokenName, tokenSymbol, tokenDecimals) {\n', '    _mint(msg.sender, _totalSupply);\n', '  }\n', '\n', '  function totalSupply() public view returns (uint256) {\n', '    return _totalSupply;\n', '  }\n', '\n', '  function balanceOf(address owner) public view returns (uint256) {\n', '    return _balances[owner];\n', '  }\n', '\n', '  function allowance(address owner, address spender) public view returns (uint256) {\n', '    return _allowed[owner][spender];\n', '  }\n', '\n', '  function findTwoPercent(uint256 value) public view returns (uint256)  {\n', '    uint256 roundValue = value.ceil(basePercent);\n', '    uint256 twoPercent = roundValue.mul(basePercent).div(5000);\n', '    return twoPercent;\n', '  }\n', '\n', '  function transfer(address to, uint256 value) public returns (bool) {\n', '    require(value <= _balances[msg.sender]);\n', '    require(to != address(0));\n', '\n', '    uint256 tokensToBurn = findTwoPercent(value);\n', '    uint256 tokensToTransfer = value.sub(tokensToBurn);\n', '\n', '    _balances[msg.sender] = _balances[msg.sender].sub(value);\n', '    _balances[to] = _balances[to].add(tokensToTransfer);\n', '\n', '    _totalSupply = _totalSupply.sub(tokensToBurn);\n', '\n', '    emit Transfer(msg.sender, to, tokensToTransfer);\n', '    emit Transfer(msg.sender, address(0), tokensToBurn);\n', '    return true;\n', '  }\n', '\n', '  function multiTransfer(address[] memory receivers, uint256[] memory amounts) public {\n', '    for (uint256 i = 0; i < receivers.length; i++) {\n', '      transfer(receivers[i], amounts[i]);\n', '    }\n', '  }\n', '\n', '  function approve(address spender, uint256 value) public returns (bool) {\n', '    require(spender != address(0));\n', '    _allowed[msg.sender][spender] = value;\n', '    emit Approval(msg.sender, spender, value);\n', '    return true;\n', '  }\n', '\n', '  function transferFrom(address from, address to, uint256 value) public returns (bool) {\n', '    require(value <= _balances[from]);\n', '    require(value <= _allowed[from][msg.sender]);\n', '    require(to != address(0));\n', '\n', '    _balances[from] = _balances[from].sub(value);\n', '\n', '    uint256 tokensToBurn = findTwoPercent(value);\n', '    uint256 tokensToTransfer = value.sub(tokensToBurn);\n', '\n', '    _balances[to] = _balances[to].add(tokensToTransfer);\n', '    _totalSupply = _totalSupply.sub(tokensToBurn);\n', '\n', '    _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\n', '\n', '    emit Transfer(from, to, tokensToTransfer);\n', '    emit Transfer(from, address(0), tokensToBurn);\n', '\n', '    return true;\n', '  }\n', '\n', '  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n', '    require(spender != address(0));\n', '    _allowed[msg.sender][spender] = (_allowed[msg.sender][spender].add(addedValue));\n', '    emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\n', '    return true;\n', '  }\n', '\n', '  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n', '    require(spender != address(0));\n', '    _allowed[msg.sender][spender] = (_allowed[msg.sender][spender].sub(subtractedValue));\n', '    emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\n', '    return true;\n', '  }\n', '\n', '  function _mint(address account, uint256 amount) internal {\n', '    require(amount != 0);\n', '    _balances[account] = _balances[account].add(amount);\n', '    emit Transfer(address(0), account, amount);\n', '  }\n', '\n', '//  _               _     __  __                _____ _                  _ _             \n', '// | |             | |   |  \\/  |              / ____| |                | (_)            \n', '// | |     __ _ ___| |_  | \\  / | __ _ _ __   | (___ | |_ __ _ _ __   __| |_ _ __   __ _ \n', "// | |    / _` / __| __| | |\\/| |/ _` | '_ \\   \\___ \\| __/ _` | '_ \\ / _` | | '_ \\ / _` |\n", '// | |___| (_| \\__ \\ |_  | |  | | (_| | | | |  ____) | || (_| | | | | (_| | | | | | (_| |\n', '// |______\\__,_|___/\\__| |_|  |_|\\__,_|_| |_| |_____/ \\__\\__,_|_| |_|\\__,_|_|_| |_|\\__, |\n', '//                                                                                  __/ |\n', '//  \n', '\n', '  function burn(uint256 amount) external {\n', '    _burn(msg.sender, amount);\n', '  }\n', '\n', '  function _burn(address account, uint256 amount) internal {\n', '    require(amount != 0);\n', '    require(amount <= _balances[account]);\n', '    _totalSupply = _totalSupply.sub(amount);\n', '    _balances[account] = _balances[account].sub(amount);\n', '    emit Transfer(account, address(0), amount);\n', '  }\n', '\n', '  function burnFrom(address account, uint256 amount) external {\n', '    require(amount <= _allowed[account][msg.sender]);\n', '    _allowed[account][msg.sender] = _allowed[account][msg.sender].sub(amount);\n', '    _burn(account, amount);\n', '  }\n', '}\n', '\n', "//* Still reading the contract? Well.. okay.. Uh... Here's Sonic?\n", '//                             ...,?77??!~~~~!???77?<~.... \n', '//                        ..?7`                           `7!.. \n', '//                    .,=`          ..~7^`   I                  ?1. \n', '//       ........  ..^            ?`  ..?7!1 .               ...??7 \n', '//      .        .7`        .,777.. .I.    . .!          .,7! \n', '//      ..     .?         .^      .l   ?i. . .`       .,^ \n', '//       b    .!        .= .?7???7~.     .>r .      .= \n', '//       .,.?4         , .^         1        `     4... \n', '//        J   ^         ,            5       `         ?<. \n', '//       .%.7;         .`     .,     .;                   .=. \n', '//       .+^ .,       .%      MML     F       .,             ?, \n', '//        P   ,,      J      .MMN     F        6               4. \n', '//        l    d,    ,       .MMM!   .t        ..               ,, \n', '//        ,    JMa..`         MMM`   .         .!                .; \n', '//         r   .M#            .M#   .%  .      .~                 ., \n', '//       dMMMNJ..!                 .P7!  .>    .         .         ,, \n', '//       .WMMMMMm  ?^..       ..,?! ..    ..   ,  Z7`        `?^..  ,, \n', '//          ?THB3       ?77?!        .Yr  .   .!   ?,              ?^C \n', '//            ?,                   .,^.` .%  .^      5. \n', '//              7,          .....?7     .^  ,`        ?. \n', "//                `<.                 .= .`'           1 \n", '//                ....dn... ... ...,7..J=!7,           ., \n', '//             ..=     G.,7  ..,o..  .?    J.           F \n', '//           .J.  .^ ,,,t  ,^        ?^.  .^  `?~.      F \n', '//          r %J. $    5r J             ,r.1      .=.  .% \n', '//          r .77=?4.    ``,     l ., 1  .. <.       4., \n', "//          .$..    .X..   .n..  ., J. r .`  J.       `' \n", "//        .?`  .5        `` .%   .% .' L.'    t \n", '//        ,. ..1JL          .,   J .$.?`      . \n', '//                1.          .=` ` .J7??7<.. .; \n', '//                 JS..    ..^      L        7.: \n', '//                   `> ..       J.  4. \n', '//                   +   r `t   r ~=..G. \n', '//                    =   $  ,.  J \n', '//                    2   r   t  .; \n', '//              .,7!  r   t`7~..  j.. \n', '//              j   7~L...$=.?7r   r ;?1. \n', '//               8.      .=    j ..,^   .. \n', '//              r        G              . \n', '//            .,7,        j,           .>=. \n', '//         .J??,  `T....... %             .. \n', '//      ..^     <.  ~.    ,.             .D \n', '//    .?`        1   L     .7.........?Ti..l \n', '//   ,`           L  .    .%    .`!       `j, \n', '// .^             .  ..   .`   .^  .?7!?7+. 1 \n', '//.`              .  .`..`7.  .^  ,`      .i.; \n', '//.7<..........~<<3?7!`    4. r  `          G% \n', '//                          J.` .!           % \n', '//                            JiJ           .` \n', '//                              .1.         J \n', "//                                 ?1.     .'         \n", '//                                     7<..%']