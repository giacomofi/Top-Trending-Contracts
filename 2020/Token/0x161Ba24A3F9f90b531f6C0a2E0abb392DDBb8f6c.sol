['pragma solidity 0.5.16;\n', '\n', 'import "./Ownable.sol";\n', 'import "./SafeMath.sol";\n', 'import "./IERC20.sol";\n', '\n', '// ----------------------------------------------------------------------------------\n', '// Escrow contract to safely store and release the token allocated to Morpher at\n', '// protocol inception\n', '// ----------------------------------------------------------------------------------\n', '\n', 'contract MorpherEscrow is Ownable{\n', '    using SafeMath for uint256;\n', '\n', '    uint256 public lastEscrowTransferTime;\n', '    address public recipient;\n', '    address public morpherToken;\n', '\n', '    uint256 public constant RELEASEAMOUNT = 10**25;\n', '    uint256 public constant RELEASEPERIOD = 30 days;\n', '\n', '    event EscrowReleased(uint256 _released, uint256 _leftInEscrow);\n', '\n', '    constructor(address _recipientAddress, address _morpherToken, address _coldStorageOwnerAddress) public {\n', '        setRecipientAddress(_recipientAddress);\n', '        setMorpherTokenAddress(_morpherToken);\n', '        lastEscrowTransferTime = now;\n', '        transferOwnership(_coldStorageOwnerAddress);\n', '    }\n', '\n', '    // ----------------------------------------------------------------------------------\n', '    // Owner can modify recipient address and update morpherToken adddress\n', '    // ----------------------------------------------------------------------------------\n', '    function setRecipientAddress(address _recipientAddress) public onlyOwner {\n', '        recipient = _recipientAddress;\n', '    }\n', '\n', '    function setMorpherTokenAddress(address _address) public onlyOwner {\n', '        morpherToken = _address;\n', '    }\n', '\n', '    // ----------------------------------------------------------------------------------\n', '    // Anyone can release funds from escrow if enough time has elapsed\n', '    // Every 30 days 1% of the total initial supply or 10m token are released to Morpher\n', '    // ----------------------------------------------------------------------------------\n', '    function releaseFromEscrow() public {\n', '        require(IERC20(morpherToken).balanceOf(address(this)) > 0, "No funds left in escrow.");\n', '        uint256 _releasedAmount;\n', '        if (now > lastEscrowTransferTime.add(RELEASEPERIOD)) {\n', '            if (IERC20(morpherToken).balanceOf(address(this)) > RELEASEAMOUNT) {\n', '                _releasedAmount = RELEASEAMOUNT;\n', '            } else {\n', '                _releasedAmount = IERC20(morpherToken).balanceOf(address(this));\n', '            }\n', '            IERC20(morpherToken).transfer(recipient, _releasedAmount);\n', '            lastEscrowTransferTime = lastEscrowTransferTime.add(RELEASEPERIOD);\n', '            emit EscrowReleased(_releasedAmount, IERC20(morpherToken).balanceOf(address(this)));\n', '        }\n', '    }\n', '}']