['pragma solidity 0.6.6;\n', '\n', 'interface IRealityCards {\n', '\n', '    function collectRentAllTokens() external;\n', '    function numberOfTokens() external view returns(uint); \n', '    function ownerOf(uint) external view returns(address); \n', '    function currentOwnerRemainingDeposit(uint) external view returns(uint);\n', '\n', '}\n', '\n', 'contract rentCollector {\n', '    \n', '    mapping (uint256 => address) public marketAddresses; \n', '    uint public numberOfMarkets;\n', '    \n', '    function addMarket(uint _position, address _marketAddress) public {\n', '        require(msg.sender == 0xacD628D01dd8534Db6Ebe4894C1be3c8D34ebe14,"not owner");\n', '        marketAddresses[_position] = _marketAddress;\n', '    }\n', '    \n', '    function setNumberOfMarkets(uint _numberOfMarkets) public {\n', '        require(msg.sender == 0xacD628D01dd8534Db6Ebe4894C1be3c8D34ebe14,"not owner");\n', '        numberOfMarkets = _numberOfMarkets;\n', '    }\n', '    \n', '    function hasCardExpired() external view returns (bool) {\n', '        bool _expired = false;\n', '        \n', '        for (uint i = 0; i < numberOfMarkets; i++) {\n', '            IRealityCards rc = IRealityCards(marketAddresses[i]);\n', '            for (uint j = 0; j < rc.numberOfTokens(); j++) {\n', '                if (rc.currentOwnerRemainingDeposit(j) == 0 && rc.ownerOf(j) != address(rc)) {\n', '                    _expired = true;\n', '                }\n', '            }\n', '        }\n', '            \n', '    return _expired;\n', '        \n', '    }\n', '    \n', '    function collectRentAllTokensAllMarkets() public \n', '    {\n', '        bool _expired;\n', '        \n', '        for (uint i = 0; i < numberOfMarkets; i++) {\n', '            IRealityCards rc = IRealityCards(marketAddresses[i]);\n', '            _expired = false;\n', '            for (uint j = 0; j < rc.numberOfTokens(); j++) {\n', '                if (rc.currentOwnerRemainingDeposit(j) == 0 && rc.ownerOf(j) != address(rc)) {\n', '                    _expired = true;\n', '                }\n', '            if (_expired) {\n', '                rc.collectRentAllTokens(); \n', '                }\n', '            }\n', '        }\n', '    }\n', '        \n', '}']