['// SPDX-License-Identifier: MIT\n', '/*\n', 'The MIT License (MIT)\n', '\n', 'Copyright (c) 2016-2020 zOS Global Limited\n', '\n', 'Permission is hereby granted, free of charge, to any person obtaining\n', 'a copy of this software and associated documentation files (the\n', '"Software"), to deal in the Software without restriction, including\n', 'without limitation the rights to use, copy, modify, merge, publish,\n', 'distribute, sublicense, and/or sell copies of the Software, and to\n', 'permit persons to whom the Software is furnished to do so, subject to\n', 'the following conditions:\n', '\n', 'The above copyright notice and this permission notice shall be included\n', 'in all copies or substantial portions of the Software.\n', '\n', 'THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n', 'OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n', 'MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n', 'IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n', 'CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n', 'TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n', 'SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n', '*/\n', '\n', 'pragma solidity ^0.7.0;\n', '\n', 'interface IERC20 {\n', '    function transfer(address recipient, uint256 amount) external returns (bool);\n', '}\n', '\n', 'contract TokenTimelock {\n', '    uint256 constant COIN = 10 ** 18;\n', '\n', '    struct Batch {\n', '      uint256 amount;\n', '      uint256 time;\n', '      bool spent;\n', '    }\n', '\n', '    IERC20 constant _token = IERC20(address(0x3A1c1d1c06bE03cDDC4d3332F7C20e1B37c97CE9));\n', '    address private _beneficiary = address(0x8875c123547bc477ec76F1FF09b4E1e787E11D35);\n', '    Batch[5] private _batches;\n', '\n', '    constructor() {\n', '        // October, 2020\n', '        _batches[0] = Batch(200000 * COIN, 1601510400, false);\n', '        // November, 2020\n', '        _batches[1] = Batch(300000 * COIN, 1604188800, false);\n', '        // December, 2020\n', '        _batches[2] = Batch(350000 * COIN, 1606780800, false);\n', '        // March, 2021\n', '        _batches[3] = Batch(350000 * COIN, 1614556800, false);\n', '        // June, 2021\n', '        _batches[4] = Batch(300000 * COIN, 1622505600, false);\n', '    }\n', '\n', '    function updateBeneficiary(address newBeneficiary) external {\n', '        require(msg.sender == _beneficiary);\n', '        _beneficiary = newBeneficiary;\n', '    }\n', '\n', '    function release(uint b) external {\n', '        require(!_batches[b].spent);\n', '        require(block.timestamp >= _batches[b].time);\n', '        require(_token.transfer(_beneficiary, _batches[b].amount));\n', '        _batches[b].spent = true;\n', '    }\n', '}']