['pragma solidity  ^0.4.0;\n', '\n', 'contract Register {\n', '    \n', '    uint256 public totalClaimed=0;\n', '    uint256 public totalBurned=0;\n', '    uint256 public totalConverted=0;\n', '    uint256 minClaimedValue;\n', '    address owner;\n', '    address zyroAddr=0x1f6bd8766f8a8AA58F7441C8dd3709aFA3a56202;\n', '    mapping(string => uint256)  claimRecords;\n', '    mapping(string => uint256)  convertedRecords;\n', '    \n', '    constructor(uint256 _minValue) public {\n', '        owner=msg.sender;\n', '        minClaimedValue=_minValue;\n', '    }\n', '    \n', '    event Claim(address indexed _from,string indexed _to,uint256 indexed _value);\n', '    event BurnToken(address indexed _from,uint256 indexed _value);\n', '\n', '    function claim(string _zilaccount,uint256 _value) public returns (bool sucess) {\n', '        require(_value>minClaimedValue);\n', '        bytes4 transferFromMethodId = bytes4(keccak256("transferFrom(address,address,uint256)"));\n', '        if(zyroAddr.call(transferFromMethodId, msg.sender, address(this), _value)){\n', '             claimRecords[_zilaccount]+=_value;\n', '             totalClaimed+=_value;\n', '             emit Claim(msg.sender,_zilaccount,_value);\n', '             return true;\n', '        }\n', '        return false;\n', '    }\n', '    \n', '    function burn() public returns (bool sucess) {\n', '        bytes4 transferMethodId = bytes4(keccak256("transfer(address,uint256)"));\n', '        uint256 _value = totalClaimed - totalBurned;\n', '        if(zyroAddr.call(transferMethodId, address(0), _value)){\n', '             totalBurned+=_value;\n', '             emit BurnToken(msg.sender,_value);\n', '             return true;\n', '        }\n', '        return false;\n', '    }\n', '    \n', '    function convert(string _zilaccount, uint256 _value) public {\n', '        require(msg.sender == owner);\n', '        convertedRecords[_zilaccount]+=_value;\n', '        totalConverted+=_value;\n', '        claimRecords[_zilaccount]-=_value;\n', '    }\n', '\n', '    function getClaimedByAddr(string _zilaccount) public view returns(uint256){\n', '        return claimRecords[_zilaccount];\n', '    }\n', '        \n', '    function getTotalClaimed()  public view returns (uint256){\n', '        return totalClaimed;\n', '    }\n', '\n', '    function getTotalBurned()  public view returns (uint256){\n', '        return totalBurned;\n', '    }\n', '}']