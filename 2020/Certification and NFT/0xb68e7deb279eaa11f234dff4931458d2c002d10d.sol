['// SPDX-License-Identifier: MIT\n', 'pragma solidity ^0.6.6;\n', '\n', 'interface UniOracleFactory {\n', '    function update(address tokenA, address tokenB) external;\n', '}\n', '\n', 'interface Keep3r {\n', '    function isKeeper(address) external view returns (bool);\n', '    function workReceipt(address keeper, uint amount) external;\n', '}\n', '\n', 'contract Keep3rJob {\n', '    UniOracleFactory constant JOB = UniOracleFactory(0x61da8b0808CEA5281A912Cd85421A6D12261D136);\n', '    Keep3r constant KPR = Keep3r(0x9696Fea1121C938C861b94FcBEe98D971de54B32);\n', '    \n', '    function update(address tokenA, address tokenB) external {\n', '        require(KPR.isKeeper(msg.sender), "Keep3rJob::update: not a valid keeper");\n', '        JOB.update(tokenA, tokenB);\n', '        KPR.workReceipt(msg.sender, 1e18);\n', '    }\n', '}']