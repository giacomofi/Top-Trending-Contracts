['// SPDX-License-Identifier: GPL-3.0-or-later\n', 'pragma solidity 0.7.4;\n', '\n', 'interface IERC20balanceOfTransfer { // brief interface for erc20 token tx\n', '    function balanceOf(address account) external view returns (uint256);\n', '    function transfer(address recipient, uint256 amount) external returns (bool);\n', '}\n', '\n', 'contract ClaimLEX {\n', '    address public LEX = 0xA5C5C8Af327248c4c2dce810a3d3Cffb8C4F66ab;\n', '    mapping(address => bool) public claimants;\n', '    \n', '    function claim() external {\n', '        require(!claimants[msg.sender], "claimed");\n', '        require(IERC20balanceOfTransfer(LEX).balanceOf(msg.sender) >= 10000000000000000000, "insufficient LEX");\n', '        IERC20balanceOfTransfer(LEX).transfer(msg.sender, 10000000000000000000);\n', '        claimants[msg.sender] = true;\n', '    }\n', '    \n', '    function remaining() external view returns (uint256) {\n', '        return IERC20balanceOfTransfer(LEX).balanceOf(address(this));\n', '    }\n', '}']