['pragma solidity 0.6.12;\n', 'pragma experimental ABIEncoderV2;\n', '\n', '\n', 'interface DharmaSmartWalletFactoryV1Interface {\n', '  function newSmartWallet(\n', '    address userSigningKey\n', '  ) external returns (address wallet);\n', '  \n', '  function getNextSmartWallet(\n', '    address userSigningKey\n', '  ) external view returns (address wallet);\n', '}\n', '\n', '\n', 'struct Wallet {\n', '    address wallet;\n', '    address initialUserSigningKey;\n', '}\n', '\n', '\n', 'contract BatchDeployer {\n', '    DharmaSmartWalletFactoryV1Interface private _FACTORY = DharmaSmartWalletFactoryV1Interface(\n', '        0xfc00C80b0000007F73004edB00094caD80626d8D\n', '    );\n', '    \n', '    function batchDeploy(Wallet[] calldata wallets) external returns (uint256) {\n', '        uint256 deployed = 0;\n', '        for (uint256 i = 0; i < wallets.length; i++) {\n', '            if (gasleft() < 100000) {\n', '                return deployed;\n', '            }\n', '            \n', '            Wallet memory wallet = wallets[i];\n', '            \n', '            if (_FACTORY.getNextSmartWallet(wallet.initialUserSigningKey) == wallet.wallet) {\n', '                _FACTORY.newSmartWallet(wallet.initialUserSigningKey);\n', '                deployed++;\n', '            }\n', '        }\n', '    }\n', '}']