['pragma solidity=0.7.1;\n', 'pragma experimental ABIEncoderV2;\n', '\n', 'interface Distributor {\n', '    function claim(uint256 index, address account, uint256 amount, bytes32[] calldata proof) external;\n', '}\n', '\n', 'contract MultiClaim {\n', '    \n', '    struct Claim {\n', '        uint256 index;\n', '        address account;\n', '        uint256 amount;\n', '        bytes32[] proof;\n', '    }\n', '\n', '    address constant distributor = 0x090D4613473dEE047c3f2706764f49E0821D256e;\n', '\n', '    function multiClaim(Claim[] calldata claims) external {\n', '        for (uint i = 0; i < claims.length; i++) {\n', '            Claim calldata c = claims[i];\n', '            Distributor(distributor).claim(c.index, c.account, c.amount, c.proof);\n', '        }\n', '    }\n', '\n', '}']