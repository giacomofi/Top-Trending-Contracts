['// SPDX-License-Identifier: MIT\n', 'pragma solidity >=0.5.0 <0.8.0;\n', '\n', 'import "./ERC20.sol";\n', 'import "./ERC20Detailed.sol";\n', 'import "./Owned.sol";\n', 'import "./State.sol";\n', 'import "./Pausable.sol";\n', '\n', 'contract USTPToken is Owned, State, Pausable, ERC20, ERC20Detailed {\n', '    /**\n', '     * @notice Construct a new STableToken\n', '     */\n', '    constructor(address _associatedContract)\n', '        public\n', '        Owned(msg.sender)\n', '        State(_associatedContract)\n', '        ERC20Detailed("USTP", "USTP", 8)\n', '    {}\n', '\n', '    /**\n', '     * @notice Only associatedContract can do it\n', '     * @param receiver The address be sended\n', '     * @param amount The number of token be sended\n', '     */\n', '    function mint(address receiver, uint256 amount)\n', '        external\n', '        notPaused\n', '        onlyAssociatedContract\n', '    {\n', '        _mint(receiver, amount);\n', '    }\n', '\n', '    /**\n', '     * @notice Only associatedContract can do it\n', '     * @param account The address of holder\n', '     * @param amount The number of token be burned\n', '     */\n', '    function burn(address account, uint256 amount)\n', '        external\n', '        notPaused\n', '        onlyAssociatedContract\n', '    {\n', '        _burn(account, amount);\n', '    }\n', '}']