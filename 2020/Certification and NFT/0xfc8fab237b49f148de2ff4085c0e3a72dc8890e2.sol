['// SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity ^0.5.16;\n', '\n', 'interface ULUStake {\n', '    function totalAccumulatedReward() external view returns (uint);\n', '    function stakingPower(address) external view returns (uint);\n', '}\n', '\n', 'contract ULUVoterProxy {\n', '\n', '    ULUStake public constant stakingPool = ULUStake(0xe2A1e9467B5D18F9cD7e7fEbd4D926DC519EcaEE);\n', '\n', '    function decimals() external pure returns (uint8) {\n', '        return uint8(18);\n', '    }\n', '\n', '    function name() external pure returns (string memory) {\n', '        return "ULUPOWAH";\n', '    }\n', '\n', '    function symbol() external pure returns (string memory) {\n', '        return "ULU";\n', '    }\n', '\n', '    function totalSupply() external view returns (uint) {\n', '        return stakingPool.totalAccumulatedReward();\n', '    }\n', '\n', '    function balanceOf(address _voter) external view returns (uint) {\n', '        (uint _votes) = stakingPool.stakingPower(_voter);\n', '        return _votes;\n', '    }\n', '\n', '    constructor() public {}\n', '}']