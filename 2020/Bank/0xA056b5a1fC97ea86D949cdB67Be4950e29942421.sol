['pragma solidity 0.5.17;\n', 'pragma experimental ABIEncoderV2;\n', '\n', '\n', 'interface UniswapRouter {\n', '    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n', '}\n', '\n', 'contract Pricing {\n', '    UniswapRouter public constant unirouter = UniswapRouter(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\n', '\n', '    struct RouteInfo {\n', '        address[] routesList;\n', '    }\n', '\n', '    function getAmountsOutMulti(uint[] memory inAmounts, RouteInfo[] memory routeInfos) public view returns (uint[] memory amountsOut) {\n', '        require(inAmounts.length == routeInfos.length, "wrong size");\n', '        amountsOut = new uint[](inAmounts.length);\n', '        for (uint256 i = 0; i < inAmounts.length; i++) {\n', '            uint[] memory ret = unirouter.getAmountsOut(inAmounts[i], routeInfos[i].routesList);\n', '            amountsOut[i] = ret[ret.length - 1];\n', '        }\n', '    }\n', '}']