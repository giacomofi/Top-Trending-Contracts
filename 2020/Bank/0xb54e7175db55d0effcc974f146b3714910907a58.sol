['// Price Oracle for Stabilize Protocol\n', '// This contract uses Aave Price Oracle\n', '// The main Operator contract can change which Price Oracle it uses\n', '\n', '// Gas used for creation: 172,963 gas\n', '\n', 'pragma solidity ^0.6.0;\n', '\n', '/************\n', 'IPriceOracleGetter interface\n', 'Interface for the Aave price oracle.\n', '*/\n', 'interface IPriceOracleGetter {\n', '    function getAssetPrice(address _asset) external view returns (uint256);\n', '    function getAssetsPrices(address[] calldata _assets) external view returns(uint256[] memory);\n', '    function getSourceOfAsset(address _asset) external view returns(address);\n', '    function getFallbackOracle() external view returns(address);\n', '}\n', '\n', 'interface LendingPoolAddressesProvider {\n', '    function getPriceOracle() external view returns (address);\n', '}\n', '\n', 'interface Aggregator {\n', '    function latestAnswer() external view returns (int256);\n', '}\n', '\n', 'contract StabilizePriceOracle {\n', '\tfunction getPrice(address _address) external view returns (uint256) {\n', '\t    // This version of the price oracle will use Aave contracts\n', '\t    \n', '\t    // First get the Ethereum USD price from Chainlink Aggregator\n', '\t    Aggregator ethOracle = Aggregator(address(0xF79D6aFBb6dA890132F9D7c355e3015f15F3406F)); // Mainlink oracle address\n', '\t    uint256 ethPrice = uint256(ethOracle.latestAnswer());\n', '\t    \n', '        // Retrieve PriceOracle address\n', '        LendingPoolAddressesProvider provider = LendingPoolAddressesProvider(address(0x24a42fD28C976A61Df5D00D0599C34c4f90748c8)); // mainnet address, for other addresses: https://docs.aave.com/developers/developing-on-aave/deployed-contract-instances\n', '        address priceOracleAddress = provider.getPriceOracle();\n', '        IPriceOracleGetter priceOracle = IPriceOracleGetter(priceOracleAddress);\n', '\n', '        uint256 price = priceOracle.getAssetPrice(_address); // This is relative to Ethereum, need to convert to USD\n', '        ethPrice = ethPrice / 10000; // We only care about 4 decimal places from Chainlink priceOracleAddress\n', '        price = price * ethPrice / 10000; // Convert to Wei format\n', '        return price;\n', '\t}\n', '}']