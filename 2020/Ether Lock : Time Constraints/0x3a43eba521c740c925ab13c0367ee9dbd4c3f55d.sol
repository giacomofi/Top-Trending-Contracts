['/**\n', ' *Submitted for verification at Etherscan.io on 2020-09-11\n', '*/\n', '\n', 'pragma solidity ^0.4.13;\n', '\n', 'contract ERC20Basic {\n', '  function balanceOf(address _owner) public returns (uint256 balance);\n', '  function transfer(address to, uint256 value) public returns (bool);\n', '}\n', '\n', '\n', 'contract A_Locker {\n', '    address owner;\n', '    \n', '    address tokenAddress = 0xd03B6ae96CaE26b743A6207DceE7Cbe60a425c70;\n', '    uint256 unlockUnix = now + 31 days;\n', '    \n', '    ERC20Basic token = ERC20Basic(tokenAddress);\n', '    \n', '    constructor() public {\n', '        owner = msg.sender;\n', '    }\n', '    \n', '    function unlockTeamTokens() public {\n', '        require(owner == msg.sender, "You is not owner");\n', '        require( now > unlockUnix, "Is not unlock time now");\n', '        token.transfer(owner, token.balanceOf(address(this)));\n', '    }\n', '    \n', '    //Control\n', '    function getLockAmount() public view returns (uint256){\n', '        return token.balanceOf(address(this));\n', '    }\n', '    \n', '    function getTokenAddress()  public view returns (address){\n', '        return tokenAddress;\n', '    }\n', '    \n', '    function getUnlockTimeLeft() public view returns (uint){\n', '        return unlockUnix - now;\n', '    }\n', '}']