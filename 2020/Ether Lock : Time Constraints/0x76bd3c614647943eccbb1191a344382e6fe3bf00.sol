['pragma solidity ^0.6.0;\n', '\n', 'interface JUL{\n', ' function balanceOf(address who) external view returns (uint256);\n', '  function allowance(address owner, address spender) external  view returns (uint);\n', '  function transfer(address to, uint value) external  returns (bool ok);\n', '  function transferFrom(address from, address to, uint value) external returns (bool ok);\n', '  function approve(address spender, uint value)external returns (bool ok);\n', '\n', '}\n', '\n', 'contract TimeLock{\n', '    address payable public owner;\n', '    uint public endDate;\n', '  \n', '    JUL public Token;\n', '    \n', '    modifier onlyOwner(){\n', '        require(msg.sender==owner,"You aren\'t owner");\n', '        _;\n', '    }\n', '    constructor(address _JUL) public{\n', '        owner=msg.sender;\n', '        Token=JUL(_JUL);\n', '        endDate=1601366400; // 29th of september 2020, 8:00 AM UTC\n', '    }\n', '    \n', '    \n', '    //function to withdraw deposited JUL\n', '    //only owner can call this function\n', '    function withdrawJUL()onlyOwner public{\n', '        require(endDate<=now);\n', '        require(availableJUL()>0);\n', '        Token.transfer(owner,availableJUL());\n', '    }\n', '    \n', '    //returns JUL token balance of this contract\n', '    function availableJUL()public view returns(uint256) {\n', '        return Token.balanceOf(address(this));\n', '    }\n', '    \n', '  \n', '}']