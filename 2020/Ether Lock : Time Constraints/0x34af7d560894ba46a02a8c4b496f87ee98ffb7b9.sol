['pragma solidity ^0.7.0;\n', '\n', '\n', 'contract ETHRefund {\n', '\n', '    uint256[] public values;\n', '    address[] public receivers;\n', '    uint256 public endTime;\n', '    address payable public avatar = 0x519b70055af55A007110B4Ff99b0eA33071c720a;\n', '\n', '    constructor (address[] memory _receivers, uint256[] memory _values) {\n', '        receivers = _receivers;\n', '        values = _values;\n', '        endTime = block.timestamp + 7890000; // 3 months\n', '    }\n', '    \n', '    receive() payable external {}\n', '\n', '    // Claim function to be called by the receiver\n', '    function claim(uint256 index) public {\n', '        require(block.timestamp < endTime);\n', '        require(msg.sender == receivers[index]);\n', '        msg.sender.transfer(values[index]);\n', '        values[index] = 0;\n', '    }\n', '    \n', '    // Destroy the contract and send back the ETH to the avatar\n', '    function kill() public {\n', '        require(block.timestamp > endTime);\n', '        selfdestruct(avatar);\n', '    }\n', '}']