['pragma solidity ^0.6.7;\n', '\n', 'interface IERC1155 {\n', '    function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory);\n', '    function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external;\n', '    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 value, bytes calldata _data) external;\n', '}\n', '\n', 'interface IERC20 {\n', '    function transfer(address _dst, uint256 _amount) external returns (bool);\n', '}\n', '\n', 'contract SeenClaimer {\n', '\n', '    IERC20   public seen;\n', '    IERC1155 public tokens;\n', '    IERC1155        secret;\n', '    uint256  public amount = 710000000000000000000; \n', '\n', '    uint256[] public batches = [1,2,3,4,5];\n', '\n', '    constructor() public {\n', '        tokens = IERC1155(0xb9341CCa0A5F04b804F7b3a996A74726923359a8);\n', '        seen = IERC20(0xCa3FE04C7Ee111F0bbb02C328c699226aCf9Fd33);\n', '        secret = IERC1155(0x13bAb10a88fc5F6c77b87878d71c9F1707D2688A);\n', '    }\n', '\n', '    function claim(address _user) public {\n', '        address[] memory user = new address[](5);\n', '        user[0] = _user;\n', '        user[1] = _user;\n', '        user[2] = _user;\n', '        user[3] = _user;\n', '        user[4] = _user;\n', '        uint256[] memory balances = tokens.balanceOfBatch(user, batches);\n', '        uint256 sum = 0;\n', '        for (uint i = 0; i < balances.length; i++){\n', '            sum += balances[i];\n', '        }\n', '        require(sum > 0, "no tokens");\n', '        tokens.safeBatchTransferFrom(_user, address(this), batches, balances, new bytes(0x0));\n', '        secret.safeTransferFrom(address(this), _user, 1, 1, new bytes(0x0));\n', '        seen.transfer(_user, sum * amount);\n', '    }\n', '    \n', '    function onERC1155BatchReceived(address _operator, address _from, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external pure returns(bytes4) {\n', '        return bytes4(keccak256("onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"));\n', '    }\n', '\n', '}']