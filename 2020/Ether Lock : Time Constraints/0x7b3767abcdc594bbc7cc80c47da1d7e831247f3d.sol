['pragma solidity ^0.6.8;\n', 'pragma experimental ABIEncoderV2;\n', '\n', 'interface TokenInterface {\n', '    function balanceOf(address) external view returns (uint);\n', '    function delegates(address) external view returns (address);\n', '}\n', '\n', '\n', 'contract InstaAtlasBatchResolver {\n', '    struct Balances {\n', '        address owner;\n', '        uint balance;\n', '        address delegates;\n', '    }\n', '\n', '    function getBalances(address token, address[] memory holders) public view returns (Balances[] memory) {\n', '        Balances[] memory tokensBal = new Balances[](holders.length);\n', '        TokenInterface tokenContract = TokenInterface(token);\n', '        for (uint i = 0; i < holders.length; i++) {\n', '            address holder = holders[i];\n', '            tokensBal[i] = Balances({\n', '                owner: holder,\n', '                balance: tokenContract.balanceOf(holder),\n', '                delegates: tokenContract.delegates(holder)\n', '            });\n', '        }\n', '        return tokensBal;\n', '    }\n', '}']