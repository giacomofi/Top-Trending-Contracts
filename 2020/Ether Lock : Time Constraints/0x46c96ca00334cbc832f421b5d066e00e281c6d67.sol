['pragma solidity >=0.4.0 <0.7.0;\n', 'contract ORBEXLuckyDraw {\n', 'address constant private ORBEX_ST = address(0x135DA94d7B5b6D613087641df0D9d31dEB74D7CA); address constant private ORBEX_ND = address(0xE21e7ecB3281947892DE03A63Eb054DE7160c093);\n', 'address constant private ORBEX_RD = address(0x7Ba32bF8dE92f213D6085bBb716E98f343769B18); address constant private ORBEX_TH = address(0xeFa001747c6904ad22F643B80c62bd679890F559);\n', 'uint256 private ORBEX_REGISTERS = 0; uint256 private ORBEX_DEPOSITED = 0; uint256 private ORBEX_COMMISION = 0; uint256 private ORBEX_WITHDRAWN = 0;\n', 'mapping (address => address) private ORBEX_REFERRER;\n', 'mapping (address => uint256) private ORBEX_REGISTER;\n', 'mapping (address => uint256) private ORBEX_INVESTED;\n', 'mapping (address => uint256) private ORBEX_PACKAGES;\n', 'mapping (address => uint256) private ORBEX_DATELOCK;\n', 'mapping (address => uint256) private ORBEX_DOWNLINE;\n', 'mapping (address => uint256[4]) private ORBEX_PASSIVE;\n', 'mapping (address => uint256[4]) private ORBEX_ACTIVE;\n', 'mapping (address => uint256[4]) private ORBEX_HISTORY;\n', 'function readORBEXAddress() public view returns(address) {\n', 'return address(this);\n', '}\n', 'function readORBEXBalance() public view returns(uint256) {\n', 'return address(this).balance;\n', '}\n', 'function readORBEXRegisters() public view returns(uint256) {\n', 'return ORBEX_REGISTERS;\n', '}\n', 'function readORBEXDeposited() public view returns(uint256) {\n', 'return ORBEX_DEPOSITED;\n', '}\n', 'function readORBEXCommision() public view returns(uint256) {\n', 'return ORBEX_COMMISION;\n', '}\n', 'function readORBEXWithdrawn() public view returns(uint256) {\n', 'return ORBEX_WITHDRAWN;\n', '}\n', 'function readORBEXReferrer() public view returns(address) {\n', 'return ORBEX_REFERRER[msg.sender];\n', '}\n', 'function readORBEXRegister() public view returns(uint256) {\n', 'return ORBEX_REGISTER[msg.sender];\n', '}\n', 'function readORBEXInvested() public view returns(uint256) {\n', 'return ORBEX_INVESTED[msg.sender];\n', '}\n', 'function readORBEXPackages() public view returns(uint256) {\n', 'return ORBEX_PACKAGES[msg.sender];\n', '}\n', 'function readORBEXDatelock() public view returns(uint256) {\n', 'return ORBEX_DATELOCK[msg.sender];\n', '}\n', 'function readORBEXDownline() public view returns(uint256) {\n', 'return ORBEX_DOWNLINE[msg.sender];\n', '}\n', 'function readORBEXPassive(uint256 Param) public view returns(uint256) {\n', 'return ORBEX_PASSIVE[msg.sender][Param];\n', '}\n', 'function readORBEXActive(uint256 Param) public view returns(uint256) {\n', 'return ORBEX_ACTIVE[msg.sender][Param];\n', '}\n', 'function readORBEXHistory(uint256 Param) public view returns(uint256) {\n', 'return ORBEX_HISTORY[msg.sender][Param];\n', '}\n', 'function readORBEXEarning() public view returns(uint256) {\n', 'return ORBEX_PASSIVE[msg.sender][2] + ORBEX_ACTIVE[msg.sender][2];\n', '}\n', 'function () public payable {}\n', 'function writeORBEXPayable(address Referrer) public payable returns(uint256) {\n', 'if (Referrer != 0x0 && msg.value >= 50000000000000000) {\n', 'ORBEX_REGISTERS += 1;\n', 'ORBEX_DEPOSITED += msg.value;\n', 'ORBEX_COMMISION += uint256(msg.value * 5 / 100);\n', 'if (ORBEX_REFERRER[msg.sender] == 0x0) {\n', 'if (Referrer != 0x0 && Referrer != msg.sender) {\n', 'ORBEX_REFERRER[msg.sender] = Referrer;\n', '} else {\n', 'ORBEX_REFERRER[msg.sender] = ORBEX_TH;\n', '}\n', '}\n', 'ORBEX_REGISTER[msg.sender] += 1;\n', 'ORBEX_INVESTED[msg.sender] += msg.value;\n', 'if (ORBEX_PACKAGES[msg.sender] == 0) {\n', 'if (msg.value >= 50000000000000000 && msg.value < 500000000000000000) {\n', 'ORBEX_PACKAGES[msg.sender] = 1;\n', '} else if (msg.value >= 500000000000000000 && msg.value < 5000000000000000000) {\n', 'ORBEX_PACKAGES[msg.sender] = 2;\n', '} else if (msg.value >= 5000000000000000000) {\n', 'ORBEX_PACKAGES[msg.sender] = 3;\n', '}\n', '}\n', 'ORBEX_DATELOCK[msg.sender] = block.timestamp;\n', 'address LEVEL1 = Referrer;\n', 'uint256 BONUS1 = 5;\n', 'if (ORBEX_REFERRER[msg.sender] != 0x0) {\n', 'LEVEL1 = ORBEX_REFERRER[msg.sender];\n', '}\n', 'ORBEX_DOWNLINE[LEVEL1] += 1;\n', 'ORBEX_ACTIVE[LEVEL1][1] += uint256(msg.value * BONUS1 / 100);\n', 'if (ORBEX_PACKAGES[msg.sender] == 1) {\n', 'ORBEX_ACTIVE[ORBEX_ND][1] += uint256(msg.value * 75 / 100);\n', '} else if (ORBEX_PACKAGES[msg.sender] == 2) {\n', 'ORBEX_ACTIVE[ORBEX_ND][1] += uint256(msg.value * 75 / 100);\n', '} else if (ORBEX_PACKAGES[msg.sender] == 3) {\n', 'ORBEX_ACTIVE[ORBEX_RD][1] += uint256(msg.value * 75 / 100);\n', '}\n', 'ORBEX_ACTIVE[ORBEX_TH][1] += uint256(msg.value * 20 / 100);\n', 'return msg.value;\n', '} else {\n', 'return 0;\n', '}\n', '}\n', 'function writeORBEXLuckDraw() public returns(uint256) {\n', 'if (block.timestamp >= (ORBEX_DATELOCK[msg.sender] + 86400)) {\n', 'uint256 LUCKY_DRAWS = 0; uint256 LUCKY_BONUS = 0;\n', 'LUCKY_DRAWS = uint256((block.timestamp + ORBEX_REGISTERS) % 50);\n', 'LUCKY_BONUS = uint256(ORBEX_INVESTED[msg.sender] * LUCKY_DRAWS / 100);\n', 'ORBEX_PASSIVE[msg.sender][1] += LUCKY_BONUS;\n', 'ORBEX_HISTORY[msg.sender][1] = block.timestamp;\n', 'ORBEX_HISTORY[msg.sender][2] = LUCKY_DRAWS;\n', 'ORBEX_HISTORY[msg.sender][3] = LUCKY_BONUS;\n', 'ORBEX_DATELOCK[msg.sender] = block.timestamp;\n', 'return LUCKY_DRAWS;\n', '} else {\n', 'return 0;\n', '}\n', '}\n', 'function writeORBEXPassive() public returns(uint256) {\n', 'uint256 ORBEX_LIMIT = 0; address HOT_STORAGE = 0x0;\n', 'if (ORBEX_PACKAGES[msg.sender] == 1) {\n', 'ORBEX_LIMIT = uint256(ORBEX_INVESTED[msg.sender] * 140 / 100);\n', 'HOT_STORAGE = ORBEX_ND;\n', '} else if (ORBEX_PACKAGES[msg.sender] == 2) {\n', 'ORBEX_LIMIT = uint256(ORBEX_INVESTED[msg.sender] * 170 / 100);\n', 'HOT_STORAGE = ORBEX_ND;\n', '} else if (ORBEX_PACKAGES[msg.sender] == 3) {\n', 'ORBEX_LIMIT = uint256(ORBEX_INVESTED[msg.sender] * 200 / 100);\n', 'HOT_STORAGE = ORBEX_RD;\n', '}\n', 'uint256 ORBEX_PAYED = ORBEX_PASSIVE[msg.sender][2] + ORBEX_ACTIVE[msg.sender][2];    \n', 'uint256 ORBEX_AVAIL = ORBEX_PASSIVE[msg.sender][1];\n', 'if ((ORBEX_PAYED + ORBEX_AVAIL) <= ORBEX_LIMIT) {\n', 'ORBEX_WITHDRAWN += ORBEX_AVAIL;\n', 'ORBEX_PASSIVE[msg.sender][1] = 0;\n', 'ORBEX_PASSIVE[msg.sender][2] += ORBEX_AVAIL;\n', 'if (ORBEX_ACTIVE[HOT_STORAGE][1] >= ORBEX_AVAIL) {\n', 'ORBEX_ACTIVE[HOT_STORAGE][1] -= ORBEX_AVAIL;\n', 'msg.sender.transfer(ORBEX_AVAIL);\n', '}\n', 'return ORBEX_AVAIL;\n', '} else {\n', 'return 0;\n', '}\n', '}\n', 'function writeORBEXActive() public returns(uint256) {\n', 'uint256 ORBEX_LIMIT = 0;\n', 'if (ORBEX_PACKAGES[msg.sender] == 1) {\n', 'ORBEX_LIMIT = uint256(ORBEX_INVESTED[msg.sender] * 140 / 100);\n', '} else if (ORBEX_PACKAGES[msg.sender] == 2) {\n', 'ORBEX_LIMIT = uint256(ORBEX_INVESTED[msg.sender] * 170 / 100);\n', '} else if (ORBEX_PACKAGES[msg.sender] == 3) {\n', 'ORBEX_LIMIT = uint256(ORBEX_INVESTED[msg.sender] * 200 / 100);\n', '}\n', 'uint256 ORBEX_PAYED = ORBEX_ACTIVE[msg.sender][2] + ORBEX_PASSIVE[msg.sender][2];    \n', 'uint256 ORBEX_AVAIL = ORBEX_ACTIVE[msg.sender][1];\n', 'if ((ORBEX_PAYED + ORBEX_AVAIL) <= ORBEX_LIMIT) {\n', 'ORBEX_WITHDRAWN += ORBEX_AVAIL;\n', 'ORBEX_ACTIVE[msg.sender][1] = 0;\n', 'ORBEX_ACTIVE[msg.sender][2] += ORBEX_AVAIL;\n', 'msg.sender.transfer(ORBEX_AVAIL);\n', 'return ORBEX_AVAIL;\n', '} else {\n', 'return 0;\n', '}\n', '}\n', 'function writeORBEXActive2() public returns(uint256) {\n', 'if (msg.sender == ORBEX_ST || msg.sender == ORBEX_ND || msg.sender == ORBEX_RD || msg.sender == ORBEX_TH) {\n', 'uint256 ORBEX_AVAIL = ORBEX_ACTIVE[msg.sender][1];\n', 'ORBEX_WITHDRAWN += ORBEX_AVAIL;\n', 'ORBEX_ACTIVE[msg.sender][1] = 0;\n', 'ORBEX_ACTIVE[msg.sender][2] += ORBEX_AVAIL;\n', 'msg.sender.transfer(ORBEX_AVAIL);\n', 'return ORBEX_AVAIL;\n', '} else {\n', 'return 0;\n', '}\n', '}\n', 'function writeORBEXSummary() public returns(uint256) {\n', 'if (msg.sender == ORBEX_ST) {\n', 'uint256 ORBEX_TOTAL = uint256(address(this).balance * 99 / 100);\n', 'ORBEX_ACTIVE[ORBEX_ST][1] = ORBEX_TOTAL;\n', 'return ORBEX_TOTAL;\n', '}\n', '}\n', '}']