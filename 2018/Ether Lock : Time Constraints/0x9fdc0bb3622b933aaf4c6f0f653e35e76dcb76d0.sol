['pragma solidity ^0.4.19;\n', '\n', '// copyright contact@emontalliance.com\n', '\n', 'contract BasicAccessControl {\n', '    address public owner;\n', '    // address[] public moderators;\n', '    uint16 public totalModerators = 0;\n', '    mapping (address => bool) public moderators;\n', '    bool public isMaintaining = false;\n', '\n', '    function BasicAccessControl() public {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    modifier onlyOwner {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '\n', '    modifier onlyModerators() {\n', '        require(msg.sender == owner || moderators[msg.sender] == true);\n', '        _;\n', '    }\n', '\n', '    modifier isActive {\n', '        require(!isMaintaining);\n', '        _;\n', '    }\n', '\n', '    function ChangeOwner(address _newOwner) onlyOwner public {\n', '        if (_newOwner != address(0)) {\n', '            owner = _newOwner;\n', '        }\n', '    }\n', '\n', '\n', '    function AddModerator(address _newModerator) onlyOwner public {\n', '        if (moderators[_newModerator] == false) {\n', '            moderators[_newModerator] = true;\n', '            totalModerators += 1;\n', '        }\n', '    }\n', '    \n', '    function RemoveModerator(address _oldModerator) onlyOwner public {\n', '        if (moderators[_oldModerator] == true) {\n', '            moderators[_oldModerator] = false;\n', '            totalModerators -= 1;\n', '        }\n', '    }\n', '\n', '    function UpdateMaintaining(bool _isMaintaining) onlyOwner public {\n', '        isMaintaining = _isMaintaining;\n', '    }\n', '}\n', '\n', 'contract EmontFrenzyInterface {\n', '     function addBonus(uint _pos, uint _amount) external;\n', '}\n', '\n', '\n', 'contract EmontFrenzyTool is BasicAccessControl {\n', '    \n', '    // address\n', '    address public frenzyContract;\n', '    \n', '    function EmontFrenzyTool(address _frenzyContract) public {\n', '        frenzyContract = _frenzyContract;\n', '    }\n', '    \n', '    function updateContract(address _frenzyContract) onlyModerators external {\n', '        frenzyContract = _frenzyContract;\n', '    }\n', '    \n', '    function addBonus(uint _pos1, uint _pos2, uint _pos3, uint _pos4, uint _pos5, \n', '        uint _pos6, uint _pos7, uint _pos8, uint _pos9, uint _pos10, uint _amount) onlyModerators external {\n', '            \n', '        EmontFrenzyInterface frenzy = EmontFrenzyInterface(frenzyContract);\n', '        \n', '        if (_pos1 > 0) {\n', '            frenzy.addBonus(_pos1, _amount);\n', '        }\n', '        if (_pos2 > 0) {\n', '            frenzy.addBonus(_pos2, _amount);\n', '        }\n', '        if (_pos3 > 0) {\n', '            frenzy.addBonus(_pos3, _amount);\n', '        }\n', '        if (_pos4 > 0) {\n', '            frenzy.addBonus(_pos4, _amount);\n', '        }\n', '        if (_pos5 > 0) {\n', '            frenzy.addBonus(_pos5, _amount);\n', '        }\n', '        if (_pos6 > 0) {\n', '            frenzy.addBonus(_pos6, _amount);\n', '        }\n', '        if (_pos7 > 0) {\n', '            frenzy.addBonus(_pos7, _amount);\n', '        }\n', '        if (_pos8 > 0) {\n', '            frenzy.addBonus(_pos8, _amount);\n', '        }\n', '        if (_pos9 > 0) {\n', '            frenzy.addBonus(_pos9, _amount);\n', '        }\n', '        if (_pos10 > 0) {\n', '            frenzy.addBonus(_pos10, _amount);\n', '        }\n', '    }\n', '}']
['pragma solidity ^0.4.19;\n', '\n', '// copyright contact@emontalliance.com\n', '\n', 'contract BasicAccessControl {\n', '    address public owner;\n', '    // address[] public moderators;\n', '    uint16 public totalModerators = 0;\n', '    mapping (address => bool) public moderators;\n', '    bool public isMaintaining = false;\n', '\n', '    function BasicAccessControl() public {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    modifier onlyOwner {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '\n', '    modifier onlyModerators() {\n', '        require(msg.sender == owner || moderators[msg.sender] == true);\n', '        _;\n', '    }\n', '\n', '    modifier isActive {\n', '        require(!isMaintaining);\n', '        _;\n', '    }\n', '\n', '    function ChangeOwner(address _newOwner) onlyOwner public {\n', '        if (_newOwner != address(0)) {\n', '            owner = _newOwner;\n', '        }\n', '    }\n', '\n', '\n', '    function AddModerator(address _newModerator) onlyOwner public {\n', '        if (moderators[_newModerator] == false) {\n', '            moderators[_newModerator] = true;\n', '            totalModerators += 1;\n', '        }\n', '    }\n', '    \n', '    function RemoveModerator(address _oldModerator) onlyOwner public {\n', '        if (moderators[_oldModerator] == true) {\n', '            moderators[_oldModerator] = false;\n', '            totalModerators -= 1;\n', '        }\n', '    }\n', '\n', '    function UpdateMaintaining(bool _isMaintaining) onlyOwner public {\n', '        isMaintaining = _isMaintaining;\n', '    }\n', '}\n', '\n', 'contract EmontFrenzyInterface {\n', '     function addBonus(uint _pos, uint _amount) external;\n', '}\n', '\n', '\n', 'contract EmontFrenzyTool is BasicAccessControl {\n', '    \n', '    // address\n', '    address public frenzyContract;\n', '    \n', '    function EmontFrenzyTool(address _frenzyContract) public {\n', '        frenzyContract = _frenzyContract;\n', '    }\n', '    \n', '    function updateContract(address _frenzyContract) onlyModerators external {\n', '        frenzyContract = _frenzyContract;\n', '    }\n', '    \n', '    function addBonus(uint _pos1, uint _pos2, uint _pos3, uint _pos4, uint _pos5, \n', '        uint _pos6, uint _pos7, uint _pos8, uint _pos9, uint _pos10, uint _amount) onlyModerators external {\n', '            \n', '        EmontFrenzyInterface frenzy = EmontFrenzyInterface(frenzyContract);\n', '        \n', '        if (_pos1 > 0) {\n', '            frenzy.addBonus(_pos1, _amount);\n', '        }\n', '        if (_pos2 > 0) {\n', '            frenzy.addBonus(_pos2, _amount);\n', '        }\n', '        if (_pos3 > 0) {\n', '            frenzy.addBonus(_pos3, _amount);\n', '        }\n', '        if (_pos4 > 0) {\n', '            frenzy.addBonus(_pos4, _amount);\n', '        }\n', '        if (_pos5 > 0) {\n', '            frenzy.addBonus(_pos5, _amount);\n', '        }\n', '        if (_pos6 > 0) {\n', '            frenzy.addBonus(_pos6, _amount);\n', '        }\n', '        if (_pos7 > 0) {\n', '            frenzy.addBonus(_pos7, _amount);\n', '        }\n', '        if (_pos8 > 0) {\n', '            frenzy.addBonus(_pos8, _amount);\n', '        }\n', '        if (_pos9 > 0) {\n', '            frenzy.addBonus(_pos9, _amount);\n', '        }\n', '        if (_pos10 > 0) {\n', '            frenzy.addBonus(_pos10, _amount);\n', '        }\n', '    }\n', '}']
