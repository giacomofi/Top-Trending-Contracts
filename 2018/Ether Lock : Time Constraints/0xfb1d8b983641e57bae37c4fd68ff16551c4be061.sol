['pragma solidity ^0.4.21;\n', '\n', 'contract WinchainInterface {\n', '    function balanceOf(address _owner) public constant returns (uint256 balance);\n', '}\n', '\n', 'contract WinTokenLock {\n', '    string public name = "WinTokenLock";\n', '    string public symbol = "WINLOCK";\n', '\n', '    // 2020-09-28 00:00:00\n', '    uint256 constant deadlineToFreedTeamPool = 1601222400;\n', '\n', '    address winToken;\n', '\n', '    //\n', '    event Withdraw(address indexed from, uint256 value);\n', '\n', '    // 接收方的地址\n', '    address receiverAddress = 0xbAfeDa001a601e872c2e1d1263530D8fd8F3F61A;\n', '\n', '    function WinTokenLock() public {\n', '        // winToken的合约地址\n', '        winToken = 0xbfaa8cf522136c6fafc1d53fe4b85b4603c765b8;\n', '    }\n', '\n', '    function() public {\n', '    }\n', '\n', '    function withdraw() public returns (bool success) {\n', '        uint value = WinchainInterface(winToken).balanceOf(address(this));\n', '        bytes4 methodId = bytes4(keccak256("transfer(address,uint256)"));\n', '\n', '        require(value > 0);\n', '        require(block.timestamp >= deadlineToFreedTeamPool);\n', '        require(winToken.call(methodId, receiverAddress, value));\n', '\n', '        emit Withdraw(receiverAddress, value);\n', '        return true;\n', '    }\n', '\n', '    function balanceOf(address _owner) public constant returns (uint256 balance) {\n', '        return WinchainInterface(winToken).balanceOf(_owner);\n', '    }\n', '\n', '    function balanceOf() public constant returns (uint256 balance) {\n', '        return WinchainInterface(winToken).balanceOf(address(this));\n', '    }\n', '}']