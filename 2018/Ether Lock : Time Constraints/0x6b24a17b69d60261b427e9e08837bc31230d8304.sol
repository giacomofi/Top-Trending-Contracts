['pragma solidity ^0.4.18;\n', '\n', '\n', 'contract TEMTicket {\n', '    uint256 constant public FEE = 0.015 ether;\n', '\n', '    mapping (uint256 => address) public id2Addr;\n', '    mapping (address => uint256) public userId;\n', '    address public TEMWallet;\n', '    uint256 public userAmount;\n', '    uint256 public maxAttendees;\n', '    uint256 public startTime;\n', '\n', '    function TEMTicket(address _TEMWallet, uint256 _maxAttendees, uint256 _startTime) public {\n', '        TEMWallet = _TEMWallet;\n', '        maxAttendees = _maxAttendees;\n', '        userAmount = 0;\n', '        startTime = _startTime;\n', '    }\n', '\n', '    function () payable external {\n', '        getTicket(msg.sender);\n', '    }\n', '\n', '    function getTicket (address _attendee) payable public {\n', '        require(now >= startTime && msg.value >= FEE && userId[_attendee] == 0);\n', '        userAmount ++;\n', '        require(userAmount <= maxAttendees);\n', '        userId[_attendee] = userAmount;\n', '        id2Addr[userAmount] = _attendee;\n', '    }\n', '\n', '    function withdraw () public {\n', '        TEMWallet.transfer(this.balance);\n', '    }\n', '}']