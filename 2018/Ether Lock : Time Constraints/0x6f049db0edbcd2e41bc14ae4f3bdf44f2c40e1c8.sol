['pragma solidity ^0.4.16;\n', '\n', 'interface Token {\n', '    function transferFrom(address _from, address _to, uint256 _value) external;\n', '}\n', '\n', 'contract RXPSale {\n', '\n', '    Token public tokenReward;\n', '    address public creator;\n', '    address public owner = 0xec1f70fBfC7ae52fe6Bcb66D3e227e516743F0a6;\n', '\n', '    uint256 public startDate;\n', '    uint256 public endDate;\n', '    uint256 public price;\n', '\n', '    modifier isCreator() {\n', '        require(msg.sender == creator);\n', '        _;\n', '    }\n', '\n', '    event FundTransfer(address backer, uint amount, bool isContribution);\n', '\n', '    function RXPSale() public {\n', '        creator = msg.sender;\n', '        startDate = 1532131200;\n', '        price = 11250;\n', '        tokenReward = Token(0xc35924a3661BbADaBbba4f1823fa74FcafCb08Ef);\n', '    }\n', '\n', '    function setOwner(address _owner) isCreator public {\n', '        owner = _owner;\n', '    }\n', '\n', '    function setCreator(address _creator) isCreator public {\n', '        creator = _creator;\n', '    }\n', '\n', '    function setStartDate(uint256 _startDate) isCreator public {\n', '        startDate = _startDate;\n', '    }\n', '\n', '    function setEndtDate(uint256 _endDate) isCreator public {\n', '        endDate = _endDate;\n', '    }\n', '\n', '    function setPrice(uint256 _price) isCreator public {\n', '        price = _price;\n', '    }\n', '\n', '    function setToken(address _token) isCreator public {\n', '        tokenReward = Token(_token);\n', '    }\n', '\n', '    function kill() isCreator public {\n', '        selfdestruct(owner);\n', '    }\n', '\n', '    function () payable public {\n', '        require(msg.value > 1 ether);\n', '        require(now > startDate);\n', '\t    uint amount = msg.value * price;\n', '\t    amount += amount / 4;\n', '        tokenReward.transferFrom(owner, msg.sender, amount);\n', '        FundTransfer(msg.sender, amount, true);\n', '        owner.transfer(msg.value);\n', '    }\n', '}']