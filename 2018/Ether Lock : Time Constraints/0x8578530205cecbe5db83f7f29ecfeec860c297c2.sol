['pragma solidity ^0.4.15;\n', '\n', 'contract ERC20Basic {\n', '  function totalSupply() public view returns (uint256);\n', '  function balanceOf(address who) public view returns (uint256);\n', '  function transfer(address to, uint256 value) public returns (bool);\n', '  event Transfer(address indexed from, address indexed to, uint256 value);\n', '}\n', '\n', 'contract ERC20 is ERC20Basic {\n', '  function allowance(address owner, address spender) public view returns (uint256);\n', '  function transferFrom(address from, address to, uint256 value) public returns (bool);\n', '  function approve(address spender, uint256 value) public returns (bool);\n', '  event Approval(address indexed owner, address indexed spender, uint256 value);\n', '}\n', '\n', 'library SafeMath {\n', '\n', '  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    if (a == 0) {\n', '      return 0;\n', '    }\n', '    uint256 c = a * b;\n', '    assert(c / a == b);\n', '    return c;\n', '  }\n', '\n', ' \n', '  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    // assert(b > 0); // Solidity automatically throws when dividing by 0\n', '    uint256 c = a / b;\n', '    // assert(a == b * c + a % b); // There is no case in which this doesn&#39;t hold\n', '    return c;\n', '  }\n', '\n', ' \n', '  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    assert(b <= a);\n', '    return a - b;\n', '  }\n', '\n', '  \n', '  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    uint256 c = a + b;\n', '    assert(c >= a);\n', '    return c;\n', '  }\n', '}\n', '\n', 'contract BasicToken is ERC20Basic {\n', '  using SafeMath for uint256;\n', '\n', '  mapping(address => uint256) balances;\n', '\n', '  uint256 totalSupply_;\n', '\n', '  \n', '  function totalSupply() public view returns (uint256) {\n', '    return totalSupply_;\n', '  }\n', '\n', ' \n', '  function transfer(address _to, uint256 _value) public returns (bool) {\n', '    require(_to != address(0));\n', '    require(_value <= balances[msg.sender]);\n', '\n', '    // SafeMath.sub will throw if there is not enough balance.\n', '    balances[msg.sender] = balances[msg.sender].sub(_value);\n', '    balances[_to] = balances[_to].add(_value);\n', '    Transfer(msg.sender, _to, _value);\n', '    return true;\n', '  }\n', '\n', ' \n', '  function balanceOf(address _owner) public view returns (uint256 balance) {\n', '    return balances[_owner];\n', '  }\n', '\n', '}\n', '\n', '//-------------StandardToken.sol--------------\n', '\n', 'contract StandardToken is ERC20, BasicToken {\n', '\n', '  mapping (address => mapping (address => uint256)) internal allowed;\n', '\n', '  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n', '    require(_to != address(0));\n', '    require(_value <= balances[_from]);\n', '    require(_value <= allowed[_from][msg.sender]);\n', '\n', '    balances[_from] = balances[_from].sub(_value);\n', '    balances[_to] = balances[_to].add(_value);\n', '    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n', '    Transfer(_from, _to, _value);\n', '    return true;\n', '  }\n', '\n', '\n', '  function approve(address _spender, uint256 _value) public returns (bool) {\n', '    allowed[msg.sender][_spender] = _value;\n', '    Approval(msg.sender, _spender, _value);\n', '    return true;\n', '  }\n', '\n', '\n', '  function allowance(address _owner, address _spender) public view returns (uint256) {\n', '    return allowed[_owner][_spender];\n', '  }\n', '\n', '\n', '  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n', '    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n', '    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n', '    return true;\n', '  }\n', '\n', '\n', '  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n', '    uint oldValue = allowed[msg.sender][_spender];\n', '    if (_subtractedValue > oldValue) {\n', '      allowed[msg.sender][_spender] = 0;\n', '    } else {\n', '      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n', '    }\n', '    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n', '    return true;\n', '  }\n', '\n', '}\n', '\n', '\n', 'contract AOG is StandardToken {\n', '    \n', '    using SafeMath for uint256;\n', '\n', '    string public name = "AOG";\n', '    string public symbol = "AOG";\n', '    uint256 public decimals = 18;\n', '\n', '    uint256 public totalSupply = 2700000000 * (uint256(10) ** decimals);\n', '    \n', '    uint256 public constant PreIcoSupply                  = 135000000 * (10 ** uint256(18));\n', '    uint256 public constant IcoSupply                     = 675000000  * (10 ** uint256(18));\n', '    uint256 public constant CharityInProgressSupply       = 54000000 * (10 ** uint256(18));\n', '    uint256 public constant CharityReservesSupply         = 1296000000 * (10 ** uint256(18));\n', '    uint256 public constant CoreTeamAndFoundersSupply     = 270000000 * (10 ** uint256(18));\n', '    uint256 public constant DevPromotionsMarketingSupply  = 270000000 * (10 ** uint256(18));\n', '    \n', '    bool public PRE_ICO_ON;\n', '    bool public ICO_ON;\n', '    \n', '    string public PreIcoMessage = "Coming Soon";\n', '    string public IcoMessage    = "Not Started";\n', '    \n', '    uint256 public totalRaised; // total ether raised (in wei)\n', '    uint256 public totalRaisedIco; // total ether raised (in wei)\n', '\n', '    uint256 public startTimestamp; // timestamp after which ICO will start\n', '    uint256 public durationSeconds = 31 * 24 * 60 * 60; // 31 Days pre ico\n', '\n', '    uint256 public minCap; // the ICO ether goal (in wei)\n', '    uint256 public maxCap; // the ICO ether max cap (in wei)\n', '    \n', '    uint256 public startTimestampIco; // timestamp after which ICO will start\n', '    uint256 public durationSecondsIco = 6 * 7 * 24 * 60 * 60; // 6 weeks ico\n', '\n', '    uint256 public minCapIco; // the ICO ether goal (in wei)\n', '    uint256 public maxCapIco; // the ICO ether max cap (in wei)\n', '    \n', '     address public owner;\n', '   \n', '   event Burn(address indexed from, uint256 value);\n', '   \n', '    /**\n', '     * Address which will receive raised funds \n', '     * and owns the total supply of tokens\n', '     */\n', '    address public fundsWallet;\n', '    \n', '    /* Token Distribution Wallets Address */\n', '    \n', '    address public PreIcoWallet;\n', '    address public IcoWallet;\n', '    address public CharityInProgressWallet;\n', '    address public CharityReservesWallet;\n', '    address public CoreTeamAndFoundersWallet;\n', '    address public DevPromotionsMarketingWallet;\n', '\n', '    function AOG (\n', '        address _fundsWallet,\n', '        address _PreIcoWallet,\n', '        address _IcoWallet,\n', '        address _CharityWallet,\n', '        address _CharityReservesWallet,\n', '        address _CoreTeamFoundersWallet,\n', '        address _DevPromotionsMarketingWallet\n', '        ) {\n', '            \n', '        fundsWallet = _fundsWallet;\n', '        PreIcoWallet = _PreIcoWallet;\n', '        IcoWallet = _IcoWallet;\n', '        CharityInProgressWallet = _CharityWallet;\n', '        CharityReservesWallet = _CharityReservesWallet;\n', '        CoreTeamAndFoundersWallet = _CoreTeamFoundersWallet;\n', '        DevPromotionsMarketingWallet = _DevPromotionsMarketingWallet;\n', '        owner = msg.sender;\n', '        // initially assign all tokens to the fundsWallet\n', '        balances[fundsWallet] = totalSupply;\n', '        \n', '        balances[PreIcoWallet]                  = PreIcoSupply;\n', '        balances[IcoWallet]                     = IcoSupply;\n', '        balances[CharityInProgressWallet]       = CharityInProgressSupply;\n', '        balances[CharityReservesWallet]         = CharityReservesSupply;\n', '        balances[CoreTeamAndFoundersWallet]     = CoreTeamAndFoundersSupply;\n', '        balances[DevPromotionsMarketingWallet]  = DevPromotionsMarketingSupply;\n', '        \n', '        Transfer(0x0, PreIcoWallet, PreIcoSupply);\n', '        Transfer(0x0, IcoWallet, IcoSupply);\n', '        Transfer(0x0, CharityInProgressWallet, CharityInProgressSupply);\n', '        Transfer(0x0, CharityReservesWallet, CharityReservesSupply);\n', '        Transfer(0x0, CoreTeamAndFoundersWallet, CoreTeamAndFoundersSupply);\n', '        Transfer(0x0, DevPromotionsMarketingWallet, DevPromotionsMarketingSupply);\n', '        \n', '    }\n', '    \n', '\n', ' function startPreIco(uint256 _startTimestamp,uint256 _minCap,uint256 _maxCap) external returns(bool)\n', '    {\n', '        require(owner == msg.sender);\n', '        require(PRE_ICO_ON == false);\n', '        PRE_ICO_ON = true;\n', '        PreIcoMessage = "PRE ICO RUNNING";\n', '        startTimestamp = _startTimestamp;\n', '        minCap = _minCap;\n', '        maxCap = _maxCap;\n', '        return true;\n', '    }\n', '    \n', '    function stopPreIoc() external returns(bool)\n', '    {\n', '        require(owner == msg.sender);\n', '        require(PRE_ICO_ON == true);\n', '        PRE_ICO_ON = false;\n', '        PreIcoMessage = "Finish";\n', '        \n', '        return true;\n', '    }\n', '    \n', '    function startIco(uint256 _startTimestampIco,uint256 _minCapIco,uint256 _maxCapIco) external returns(bool)\n', '    {\n', '        require(owner == msg.sender);\n', '        require(ICO_ON == false);\n', '        ICO_ON = true;\n', '        PRE_ICO_ON = false;\n', '        PreIcoMessage = "Finish";\n', '        IcoMessage = "ICO RUNNING";\n', '        \n', '        startTimestampIco = _startTimestampIco;\n', '        minCapIco = _minCapIco;\n', '        maxCapIco = _maxCapIco;\n', '        \n', '         return true;\n', '    }\n', '    \n', '\n', '    function() isPreIcoAndIcoOpen payable {\n', '      \n', '      uint256 tokenPreAmount;\n', '      uint256 tokenIcoAmount;\n', '      \n', '      // during Pre ICO   \n', '      \n', '        if(PRE_ICO_ON == true)\n', '        {\n', '            totalRaised = totalRaised.add(msg.value);\n', '        \n', '        if(totalRaised >= maxCap || (now >= (startTimestamp + durationSeconds) && totalRaised >= minCap))\n', '            {\n', '                PRE_ICO_ON = false;\n', '                PreIcoMessage = "Finish";\n', '            }\n', '            \n', '        }\n', '    \n', '    // during ICO   \n', '    \n', '         if(ICO_ON == true)\n', '        {\n', '            totalRaisedIco = totalRaisedIco.add(msg.value);\n', '           \n', '            if(totalRaisedIco >= maxCapIco || (now >= (startTimestampIco + durationSecondsIco) && totalRaisedIco >= minCapIco))\n', '            {\n', '                ICO_ON = false;\n', '                IcoMessage = "Finish";\n', '            }\n', '        } \n', '        \n', '        // immediately transfer ether to fundsWallet\n', '        fundsWallet.transfer(msg.value);\n', '    }\n', '    \n', '     modifier isPreIcoAndIcoOpen() {\n', '        \n', '        if(PRE_ICO_ON == true)\n', '        {\n', '             require(now >= startTimestamp);\n', '             require(now <= (startTimestamp + durationSeconds) || totalRaised < minCap);\n', '             require(totalRaised <= maxCap);\n', '             _;\n', '        }\n', '        \n', '        if(ICO_ON == true)\n', '        {\n', '            require(now >= startTimestampIco);\n', '            require(now <= (startTimestampIco + durationSecondsIco) || totalRaisedIco < minCapIco);\n', '            require(totalRaisedIco <= maxCapIco);\n', '            _;\n', '        }\n', '        \n', '    }\n', '    \n', '    /****** Pre Ico Token Calculation ******/\n', '\n', '    function calculatePreTokenAmount(uint256 weiAmount) constant returns(uint256) {\n', '       \n', '   \n', '        uint256 tokenAmount;\n', '        uint256 standardRateDaysWise;\n', '        \n', '        standardRateDaysWise = calculatePreBonus(weiAmount); // Rate\n', '        tokenAmount = weiAmount.mul(standardRateDaysWise);       // Number of coin\n', '              \n', '        return tokenAmount;\n', '    \n', '    }\n', '    \n', '      /************ ICO Token Calculation ***********/\n', '\n', '    function calculateIcoTokenAmount(uint256 weiAmount) constant returns(uint256) {\n', '     \n', '        uint256 tokenAmount;\n', '        uint256 standardRateDaysWise;\n', '        \n', '        if (now <= startTimestampIco + 7 days) {\n', '             \n', '            standardRateDaysWise = calculateIcoBonus(weiAmount,1,1); // Rate\n', '            return tokenAmount = weiAmount.mul(standardRateDaysWise);  // Number of coin\n', '             \n', '         } else if (now >= startTimestampIco + 7 days && now <= startTimestampIco + 14 days) {\n', '              \n', '              standardRateDaysWise = calculateIcoBonus(weiAmount,1,2); // Rate \n', '               \n', '              return tokenAmount = weiAmount.mul(standardRateDaysWise);\n', '             \n', '         } else if (now >= startTimestampIco + 14 days) {\n', '             \n', '               standardRateDaysWise = calculateIcoBonus(weiAmount,1,3);\n', '              \n', '               return tokenAmount = weiAmount.mul(standardRateDaysWise);\n', '             \n', '         } else {\n', '            return tokenAmount;\n', '        }\n', '    }\n', '        \n', '    function calculatePreBonus(uint256 userAmount) returns(uint256)\n', '    {\n', '     \n', '    // 0.1 to 4.99 eth\n', '    \n', '        if(userAmount >= 100000000000000000 && userAmount < 5000000000000000000)\n', '        {\n', '                return 7000;\n', '        } \n', '        else if(userAmount >= 5000000000000000000 && userAmount < 15000000000000000000)\n', '        {\n', '                return 8000;\n', '        }\n', '        else if(userAmount >= 15000000000000000000 && userAmount < 30000000000000000000)\n', '        {\n', '               return 9000;\n', '        }\n', '        else if(userAmount >= 30000000000000000000 && userAmount < 60000000000000000000)\n', '        {\n', '                return 10000;\n', '        }\n', '        else if(userAmount >= 60000000000000000000 && userAmount < 100000000000000000000)\n', '        {\n', '               return 11250;\n', '        }\n', '        else if(userAmount >= 100000000000000000000)\n', '        {\n', '                return 12500;\n', '        }\n', '    }\n', '    \n', '    \n', '    function calculateIcoBonus(uint256 userAmount,uint _calculationType, uint _sno) returns(uint256)\n', '    {\n', '            // 0.1 to 4.99 eth \n', '    \n', '        if(userAmount >= 100000000000000000 && userAmount < 5000000000000000000)\n', '        {\n', '                if(_sno == 1) // 1-7 Days\n', '                {\n', '                    return 6000;\n', '                    \n', '                } else if(_sno == 2)  // 8-14 Days\n', '                {\n', '                    return 5500;\n', '                    \n', '                } else if(_sno == 3) // 15+ Days\n', '                {\n', '                    return 5000;\n', '                }\n', '            \n', '        } \n', '        else if(userAmount >= 5000000000000000000 && userAmount < 15000000000000000000)\n', '        {\n', '                if(_sno == 1) // 1-7 Days\n', '                {\n', '                    return 6600;\n', '                    \n', '                } else if(_sno == 2)  //8-14 Days\n', '                {\n', '                    return 6050;\n', '                    \n', '                } else if(_sno == 3) // 15+ Days\n', '                {\n', '                    return 5500;\n', '                }\n', '            \n', '        }\n', '        else if(userAmount >= 15000000000000000000 && userAmount < 30000000000000000000)\n', '        {\n', '                if(_sno == 1) // 1-7 Days\n', '                {\n', '                    return 7200;\n', '                    \n', '                } else if(_sno == 2)  // 8-14 Days\n', '                {\n', '                    return 6600;\n', '                    \n', '                } else if(_sno == 3) // 15+ Days\n', '                {\n', '                    return 6000;\n', '                }\n', '            \n', '        }\n', '        else if(userAmount >= 30000000000000000000 && userAmount < 60000000000000000000)\n', '        {\n', '                if(_sno == 1) // 1-7 Days\n', '                {\n', '                    return 7500;\n', '                    \n', '                } else if(_sno == 2)  // 8-14 Days\n', '                {\n', '                    return 6875;\n', '                    \n', '                } else if(_sno == 3) // 15+ Days\n', '                {\n', '                    return 6250;\n', '                }\n', '            \n', '        }\n', '        else if(userAmount >= 60000000000000000000 && userAmount < 100000000000000000000)\n', '        {\n', '                if(_sno == 1) // 1-7 Days\n', '                {\n', '                    return 7800;\n', '                    \n', '                } else if(_sno == 2)  // 8-14 Days\n', '                {\n', '                    return 7150;\n', '                    \n', '                } else if(_sno == 3) // 15+ Days\n', '                {\n', '                    return 6500;\n', '                }\n', '            \n', '        }\n', '        else if(userAmount >= 100000000000000000000)\n', '        {\n', '                if(_sno == 1) // 1-7 Days\n', '                {\n', '                    return 8400;\n', '                    \n', '                } else if(_sno == 2)  // 8-14 Days\n', '                {\n', '                    return 7700;\n', '                    \n', '                } else if(_sno == 3) // 15+ Days\n', '                {\n', '                    return 7000;\n', '                }\n', '        }\n', '    }\n', '    \n', '     // AOG GAME   \n', ' \n', '   function TokenGameTransfer(address _to, uint _gamevalue) returns (bool)\n', '    {\n', '        return super.transfer(_to, _gamevalue);\n', '    } \n', '          \n', ' \n', '   function TokenTransferFrom(address _from, address _to, uint _value) returns (bool)\n', '    {\n', '            return super.transferFrom(_from, _to, _value);\n', '    } \n', '    \n', '     function TokenTransferTo(address _to, uint _value) returns (bool)\n', '    {\n', '           return super.transfer(_to, _value);\n', '    } \n', '    \n', '    function BurnToken(address _from) public returns(bool success)\n', '    {\n', '        require(owner == msg.sender);\n', '        require(balances[_from] > 0);   // Check if the sender has enough\n', '        uint _value = balances[_from];\n', '        balances[_from] -= _value;            // Subtract from the sender\n', '        totalSupply -= _value;                      // Updates totalSupply\n', '        Burn(_from, _value);\n', '        return true;\n', '    }\n', '    \n', '// Add off chain Pre Ico and Ico contribution for BTC users transparency\n', '         \n', '    function addOffChainRaisedContribution(address _to, uint _value,uint weiAmount)  returns(bool) {\n', '            \n', '        if(PRE_ICO_ON == true)\n', '        {\n', '            totalRaised = totalRaised.add(weiAmount);  \n', '            return super.transfer(_to, _value);\n', '        } \n', '        \n', '        if(ICO_ON == true)\n', '        {\n', '            totalRaisedIco = totalRaisedIco.add(weiAmount);\n', '            return super.transfer(_to, _value);\n', '        }\n', '            \n', '    }\n', '    \n', '    function changeOwner(address _addr) external returns (bool){\n', '        require(owner == msg.sender);\n', '        owner = _addr;\n', '        return true;\n', '    }\n', '   \n', '}']
['pragma solidity ^0.4.15;\n', '\n', 'contract ERC20Basic {\n', '  function totalSupply() public view returns (uint256);\n', '  function balanceOf(address who) public view returns (uint256);\n', '  function transfer(address to, uint256 value) public returns (bool);\n', '  event Transfer(address indexed from, address indexed to, uint256 value);\n', '}\n', '\n', 'contract ERC20 is ERC20Basic {\n', '  function allowance(address owner, address spender) public view returns (uint256);\n', '  function transferFrom(address from, address to, uint256 value) public returns (bool);\n', '  function approve(address spender, uint256 value) public returns (bool);\n', '  event Approval(address indexed owner, address indexed spender, uint256 value);\n', '}\n', '\n', 'library SafeMath {\n', '\n', '  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    if (a == 0) {\n', '      return 0;\n', '    }\n', '    uint256 c = a * b;\n', '    assert(c / a == b);\n', '    return c;\n', '  }\n', '\n', ' \n', '  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    // assert(b > 0); // Solidity automatically throws when dividing by 0\n', '    uint256 c = a / b;\n', "    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n", '    return c;\n', '  }\n', '\n', ' \n', '  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    assert(b <= a);\n', '    return a - b;\n', '  }\n', '\n', '  \n', '  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    uint256 c = a + b;\n', '    assert(c >= a);\n', '    return c;\n', '  }\n', '}\n', '\n', 'contract BasicToken is ERC20Basic {\n', '  using SafeMath for uint256;\n', '\n', '  mapping(address => uint256) balances;\n', '\n', '  uint256 totalSupply_;\n', '\n', '  \n', '  function totalSupply() public view returns (uint256) {\n', '    return totalSupply_;\n', '  }\n', '\n', ' \n', '  function transfer(address _to, uint256 _value) public returns (bool) {\n', '    require(_to != address(0));\n', '    require(_value <= balances[msg.sender]);\n', '\n', '    // SafeMath.sub will throw if there is not enough balance.\n', '    balances[msg.sender] = balances[msg.sender].sub(_value);\n', '    balances[_to] = balances[_to].add(_value);\n', '    Transfer(msg.sender, _to, _value);\n', '    return true;\n', '  }\n', '\n', ' \n', '  function balanceOf(address _owner) public view returns (uint256 balance) {\n', '    return balances[_owner];\n', '  }\n', '\n', '}\n', '\n', '//-------------StandardToken.sol--------------\n', '\n', 'contract StandardToken is ERC20, BasicToken {\n', '\n', '  mapping (address => mapping (address => uint256)) internal allowed;\n', '\n', '  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n', '    require(_to != address(0));\n', '    require(_value <= balances[_from]);\n', '    require(_value <= allowed[_from][msg.sender]);\n', '\n', '    balances[_from] = balances[_from].sub(_value);\n', '    balances[_to] = balances[_to].add(_value);\n', '    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n', '    Transfer(_from, _to, _value);\n', '    return true;\n', '  }\n', '\n', '\n', '  function approve(address _spender, uint256 _value) public returns (bool) {\n', '    allowed[msg.sender][_spender] = _value;\n', '    Approval(msg.sender, _spender, _value);\n', '    return true;\n', '  }\n', '\n', '\n', '  function allowance(address _owner, address _spender) public view returns (uint256) {\n', '    return allowed[_owner][_spender];\n', '  }\n', '\n', '\n', '  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n', '    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n', '    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n', '    return true;\n', '  }\n', '\n', '\n', '  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n', '    uint oldValue = allowed[msg.sender][_spender];\n', '    if (_subtractedValue > oldValue) {\n', '      allowed[msg.sender][_spender] = 0;\n', '    } else {\n', '      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n', '    }\n', '    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n', '    return true;\n', '  }\n', '\n', '}\n', '\n', '\n', 'contract AOG is StandardToken {\n', '    \n', '    using SafeMath for uint256;\n', '\n', '    string public name = "AOG";\n', '    string public symbol = "AOG";\n', '    uint256 public decimals = 18;\n', '\n', '    uint256 public totalSupply = 2700000000 * (uint256(10) ** decimals);\n', '    \n', '    uint256 public constant PreIcoSupply                  = 135000000 * (10 ** uint256(18));\n', '    uint256 public constant IcoSupply                     = 675000000  * (10 ** uint256(18));\n', '    uint256 public constant CharityInProgressSupply       = 54000000 * (10 ** uint256(18));\n', '    uint256 public constant CharityReservesSupply         = 1296000000 * (10 ** uint256(18));\n', '    uint256 public constant CoreTeamAndFoundersSupply     = 270000000 * (10 ** uint256(18));\n', '    uint256 public constant DevPromotionsMarketingSupply  = 270000000 * (10 ** uint256(18));\n', '    \n', '    bool public PRE_ICO_ON;\n', '    bool public ICO_ON;\n', '    \n', '    string public PreIcoMessage = "Coming Soon";\n', '    string public IcoMessage    = "Not Started";\n', '    \n', '    uint256 public totalRaised; // total ether raised (in wei)\n', '    uint256 public totalRaisedIco; // total ether raised (in wei)\n', '\n', '    uint256 public startTimestamp; // timestamp after which ICO will start\n', '    uint256 public durationSeconds = 31 * 24 * 60 * 60; // 31 Days pre ico\n', '\n', '    uint256 public minCap; // the ICO ether goal (in wei)\n', '    uint256 public maxCap; // the ICO ether max cap (in wei)\n', '    \n', '    uint256 public startTimestampIco; // timestamp after which ICO will start\n', '    uint256 public durationSecondsIco = 6 * 7 * 24 * 60 * 60; // 6 weeks ico\n', '\n', '    uint256 public minCapIco; // the ICO ether goal (in wei)\n', '    uint256 public maxCapIco; // the ICO ether max cap (in wei)\n', '    \n', '     address public owner;\n', '   \n', '   event Burn(address indexed from, uint256 value);\n', '   \n', '    /**\n', '     * Address which will receive raised funds \n', '     * and owns the total supply of tokens\n', '     */\n', '    address public fundsWallet;\n', '    \n', '    /* Token Distribution Wallets Address */\n', '    \n', '    address public PreIcoWallet;\n', '    address public IcoWallet;\n', '    address public CharityInProgressWallet;\n', '    address public CharityReservesWallet;\n', '    address public CoreTeamAndFoundersWallet;\n', '    address public DevPromotionsMarketingWallet;\n', '\n', '    function AOG (\n', '        address _fundsWallet,\n', '        address _PreIcoWallet,\n', '        address _IcoWallet,\n', '        address _CharityWallet,\n', '        address _CharityReservesWallet,\n', '        address _CoreTeamFoundersWallet,\n', '        address _DevPromotionsMarketingWallet\n', '        ) {\n', '            \n', '        fundsWallet = _fundsWallet;\n', '        PreIcoWallet = _PreIcoWallet;\n', '        IcoWallet = _IcoWallet;\n', '        CharityInProgressWallet = _CharityWallet;\n', '        CharityReservesWallet = _CharityReservesWallet;\n', '        CoreTeamAndFoundersWallet = _CoreTeamFoundersWallet;\n', '        DevPromotionsMarketingWallet = _DevPromotionsMarketingWallet;\n', '        owner = msg.sender;\n', '        // initially assign all tokens to the fundsWallet\n', '        balances[fundsWallet] = totalSupply;\n', '        \n', '        balances[PreIcoWallet]                  = PreIcoSupply;\n', '        balances[IcoWallet]                     = IcoSupply;\n', '        balances[CharityInProgressWallet]       = CharityInProgressSupply;\n', '        balances[CharityReservesWallet]         = CharityReservesSupply;\n', '        balances[CoreTeamAndFoundersWallet]     = CoreTeamAndFoundersSupply;\n', '        balances[DevPromotionsMarketingWallet]  = DevPromotionsMarketingSupply;\n', '        \n', '        Transfer(0x0, PreIcoWallet, PreIcoSupply);\n', '        Transfer(0x0, IcoWallet, IcoSupply);\n', '        Transfer(0x0, CharityInProgressWallet, CharityInProgressSupply);\n', '        Transfer(0x0, CharityReservesWallet, CharityReservesSupply);\n', '        Transfer(0x0, CoreTeamAndFoundersWallet, CoreTeamAndFoundersSupply);\n', '        Transfer(0x0, DevPromotionsMarketingWallet, DevPromotionsMarketingSupply);\n', '        \n', '    }\n', '    \n', '\n', ' function startPreIco(uint256 _startTimestamp,uint256 _minCap,uint256 _maxCap) external returns(bool)\n', '    {\n', '        require(owner == msg.sender);\n', '        require(PRE_ICO_ON == false);\n', '        PRE_ICO_ON = true;\n', '        PreIcoMessage = "PRE ICO RUNNING";\n', '        startTimestamp = _startTimestamp;\n', '        minCap = _minCap;\n', '        maxCap = _maxCap;\n', '        return true;\n', '    }\n', '    \n', '    function stopPreIoc() external returns(bool)\n', '    {\n', '        require(owner == msg.sender);\n', '        require(PRE_ICO_ON == true);\n', '        PRE_ICO_ON = false;\n', '        PreIcoMessage = "Finish";\n', '        \n', '        return true;\n', '    }\n', '    \n', '    function startIco(uint256 _startTimestampIco,uint256 _minCapIco,uint256 _maxCapIco) external returns(bool)\n', '    {\n', '        require(owner == msg.sender);\n', '        require(ICO_ON == false);\n', '        ICO_ON = true;\n', '        PRE_ICO_ON = false;\n', '        PreIcoMessage = "Finish";\n', '        IcoMessage = "ICO RUNNING";\n', '        \n', '        startTimestampIco = _startTimestampIco;\n', '        minCapIco = _minCapIco;\n', '        maxCapIco = _maxCapIco;\n', '        \n', '         return true;\n', '    }\n', '    \n', '\n', '    function() isPreIcoAndIcoOpen payable {\n', '      \n', '      uint256 tokenPreAmount;\n', '      uint256 tokenIcoAmount;\n', '      \n', '      // during Pre ICO   \n', '      \n', '        if(PRE_ICO_ON == true)\n', '        {\n', '            totalRaised = totalRaised.add(msg.value);\n', '        \n', '        if(totalRaised >= maxCap || (now >= (startTimestamp + durationSeconds) && totalRaised >= minCap))\n', '            {\n', '                PRE_ICO_ON = false;\n', '                PreIcoMessage = "Finish";\n', '            }\n', '            \n', '        }\n', '    \n', '    // during ICO   \n', '    \n', '         if(ICO_ON == true)\n', '        {\n', '            totalRaisedIco = totalRaisedIco.add(msg.value);\n', '           \n', '            if(totalRaisedIco >= maxCapIco || (now >= (startTimestampIco + durationSecondsIco) && totalRaisedIco >= minCapIco))\n', '            {\n', '                ICO_ON = false;\n', '                IcoMessage = "Finish";\n', '            }\n', '        } \n', '        \n', '        // immediately transfer ether to fundsWallet\n', '        fundsWallet.transfer(msg.value);\n', '    }\n', '    \n', '     modifier isPreIcoAndIcoOpen() {\n', '        \n', '        if(PRE_ICO_ON == true)\n', '        {\n', '             require(now >= startTimestamp);\n', '             require(now <= (startTimestamp + durationSeconds) || totalRaised < minCap);\n', '             require(totalRaised <= maxCap);\n', '             _;\n', '        }\n', '        \n', '        if(ICO_ON == true)\n', '        {\n', '            require(now >= startTimestampIco);\n', '            require(now <= (startTimestampIco + durationSecondsIco) || totalRaisedIco < minCapIco);\n', '            require(totalRaisedIco <= maxCapIco);\n', '            _;\n', '        }\n', '        \n', '    }\n', '    \n', '    /****** Pre Ico Token Calculation ******/\n', '\n', '    function calculatePreTokenAmount(uint256 weiAmount) constant returns(uint256) {\n', '       \n', '   \n', '        uint256 tokenAmount;\n', '        uint256 standardRateDaysWise;\n', '        \n', '        standardRateDaysWise = calculatePreBonus(weiAmount); // Rate\n', '        tokenAmount = weiAmount.mul(standardRateDaysWise);       // Number of coin\n', '              \n', '        return tokenAmount;\n', '    \n', '    }\n', '    \n', '      /************ ICO Token Calculation ***********/\n', '\n', '    function calculateIcoTokenAmount(uint256 weiAmount) constant returns(uint256) {\n', '     \n', '        uint256 tokenAmount;\n', '        uint256 standardRateDaysWise;\n', '        \n', '        if (now <= startTimestampIco + 7 days) {\n', '             \n', '            standardRateDaysWise = calculateIcoBonus(weiAmount,1,1); // Rate\n', '            return tokenAmount = weiAmount.mul(standardRateDaysWise);  // Number of coin\n', '             \n', '         } else if (now >= startTimestampIco + 7 days && now <= startTimestampIco + 14 days) {\n', '              \n', '              standardRateDaysWise = calculateIcoBonus(weiAmount,1,2); // Rate \n', '               \n', '              return tokenAmount = weiAmount.mul(standardRateDaysWise);\n', '             \n', '         } else if (now >= startTimestampIco + 14 days) {\n', '             \n', '               standardRateDaysWise = calculateIcoBonus(weiAmount,1,3);\n', '              \n', '               return tokenAmount = weiAmount.mul(standardRateDaysWise);\n', '             \n', '         } else {\n', '            return tokenAmount;\n', '        }\n', '    }\n', '        \n', '    function calculatePreBonus(uint256 userAmount) returns(uint256)\n', '    {\n', '     \n', '    // 0.1 to 4.99 eth\n', '    \n', '        if(userAmount >= 100000000000000000 && userAmount < 5000000000000000000)\n', '        {\n', '                return 7000;\n', '        } \n', '        else if(userAmount >= 5000000000000000000 && userAmount < 15000000000000000000)\n', '        {\n', '                return 8000;\n', '        }\n', '        else if(userAmount >= 15000000000000000000 && userAmount < 30000000000000000000)\n', '        {\n', '               return 9000;\n', '        }\n', '        else if(userAmount >= 30000000000000000000 && userAmount < 60000000000000000000)\n', '        {\n', '                return 10000;\n', '        }\n', '        else if(userAmount >= 60000000000000000000 && userAmount < 100000000000000000000)\n', '        {\n', '               return 11250;\n', '        }\n', '        else if(userAmount >= 100000000000000000000)\n', '        {\n', '                return 12500;\n', '        }\n', '    }\n', '    \n', '    \n', '    function calculateIcoBonus(uint256 userAmount,uint _calculationType, uint _sno) returns(uint256)\n', '    {\n', '            // 0.1 to 4.99 eth \n', '    \n', '        if(userAmount >= 100000000000000000 && userAmount < 5000000000000000000)\n', '        {\n', '                if(_sno == 1) // 1-7 Days\n', '                {\n', '                    return 6000;\n', '                    \n', '                } else if(_sno == 2)  // 8-14 Days\n', '                {\n', '                    return 5500;\n', '                    \n', '                } else if(_sno == 3) // 15+ Days\n', '                {\n', '                    return 5000;\n', '                }\n', '            \n', '        } \n', '        else if(userAmount >= 5000000000000000000 && userAmount < 15000000000000000000)\n', '        {\n', '                if(_sno == 1) // 1-7 Days\n', '                {\n', '                    return 6600;\n', '                    \n', '                } else if(_sno == 2)  //8-14 Days\n', '                {\n', '                    return 6050;\n', '                    \n', '                } else if(_sno == 3) // 15+ Days\n', '                {\n', '                    return 5500;\n', '                }\n', '            \n', '        }\n', '        else if(userAmount >= 15000000000000000000 && userAmount < 30000000000000000000)\n', '        {\n', '                if(_sno == 1) // 1-7 Days\n', '                {\n', '                    return 7200;\n', '                    \n', '                } else if(_sno == 2)  // 8-14 Days\n', '                {\n', '                    return 6600;\n', '                    \n', '                } else if(_sno == 3) // 15+ Days\n', '                {\n', '                    return 6000;\n', '                }\n', '            \n', '        }\n', '        else if(userAmount >= 30000000000000000000 && userAmount < 60000000000000000000)\n', '        {\n', '                if(_sno == 1) // 1-7 Days\n', '                {\n', '                    return 7500;\n', '                    \n', '                } else if(_sno == 2)  // 8-14 Days\n', '                {\n', '                    return 6875;\n', '                    \n', '                } else if(_sno == 3) // 15+ Days\n', '                {\n', '                    return 6250;\n', '                }\n', '            \n', '        }\n', '        else if(userAmount >= 60000000000000000000 && userAmount < 100000000000000000000)\n', '        {\n', '                if(_sno == 1) // 1-7 Days\n', '                {\n', '                    return 7800;\n', '                    \n', '                } else if(_sno == 2)  // 8-14 Days\n', '                {\n', '                    return 7150;\n', '                    \n', '                } else if(_sno == 3) // 15+ Days\n', '                {\n', '                    return 6500;\n', '                }\n', '            \n', '        }\n', '        else if(userAmount >= 100000000000000000000)\n', '        {\n', '                if(_sno == 1) // 1-7 Days\n', '                {\n', '                    return 8400;\n', '                    \n', '                } else if(_sno == 2)  // 8-14 Days\n', '                {\n', '                    return 7700;\n', '                    \n', '                } else if(_sno == 3) // 15+ Days\n', '                {\n', '                    return 7000;\n', '                }\n', '        }\n', '    }\n', '    \n', '     // AOG GAME   \n', ' \n', '   function TokenGameTransfer(address _to, uint _gamevalue) returns (bool)\n', '    {\n', '        return super.transfer(_to, _gamevalue);\n', '    } \n', '          \n', ' \n', '   function TokenTransferFrom(address _from, address _to, uint _value) returns (bool)\n', '    {\n', '            return super.transferFrom(_from, _to, _value);\n', '    } \n', '    \n', '     function TokenTransferTo(address _to, uint _value) returns (bool)\n', '    {\n', '           return super.transfer(_to, _value);\n', '    } \n', '    \n', '    function BurnToken(address _from) public returns(bool success)\n', '    {\n', '        require(owner == msg.sender);\n', '        require(balances[_from] > 0);   // Check if the sender has enough\n', '        uint _value = balances[_from];\n', '        balances[_from] -= _value;            // Subtract from the sender\n', '        totalSupply -= _value;                      // Updates totalSupply\n', '        Burn(_from, _value);\n', '        return true;\n', '    }\n', '    \n', '// Add off chain Pre Ico and Ico contribution for BTC users transparency\n', '         \n', '    function addOffChainRaisedContribution(address _to, uint _value,uint weiAmount)  returns(bool) {\n', '            \n', '        if(PRE_ICO_ON == true)\n', '        {\n', '            totalRaised = totalRaised.add(weiAmount);  \n', '            return super.transfer(_to, _value);\n', '        } \n', '        \n', '        if(ICO_ON == true)\n', '        {\n', '            totalRaisedIco = totalRaisedIco.add(weiAmount);\n', '            return super.transfer(_to, _value);\n', '        }\n', '            \n', '    }\n', '    \n', '    function changeOwner(address _addr) external returns (bool){\n', '        require(owner == msg.sender);\n', '        owner = _addr;\n', '        return true;\n', '    }\n', '   \n', '}']
