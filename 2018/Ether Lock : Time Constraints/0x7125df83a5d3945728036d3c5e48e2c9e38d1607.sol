['pragma solidity ^0.4.25;\n', '\n', '/**\n', ' * Smartolution.org!\n', ' *\n', ' * Hey, \n', ' * \n', ' * You know the rules of ponzi already,\n', ' * but let me briefly explain how this one works ;)\n', ' * \n', ' * This is your personal 45 days magic piggy bank!\n', ' * \n', ' * 1. Send fixed amount of ether every 24 hours (5900 blocks).\n', ' * 2. With every new transaction collect exponentially greater return!\n', " * 3. Keep sending the same amount of ether! (can't trick the code, bro)\n", " * 4. Don't send too often (early transactions will be rejected, uh oh)\n", " * 5. Don't be late, you won't loose your %, but who wants to be the last?\n", ' *  \n', ' * Play by the rules and save up to 170%!\n', ' *\n', ' * Gas limit: 150 000 (only the first time, average ~ 50 000)\n', ' * Gas price: https://ethgasstation.info/\n', ' *\n', ' */\n', 'contract Smartolution {\n', '\n', '    struct User {\n', '        uint value;\n', '        uint index;\n', '        uint atBlock;\n', '    }\n', '\n', '    mapping (address => User) public users;\n', '    \n', '    uint public total;\n', '    uint public advertisement;\n', '    uint public team;\n', '   \n', '    address public teamAddress;\n', '    address public advertisementAddress;\n', '\n', '    constructor(address _advertisementAddress, address _teamAddress) public {\n', '        advertisementAddress = _advertisementAddress;\n', '        teamAddress = _teamAddress;\n', '    }\n', '\n', '    function () public payable {\n', '        require(msg.value == 0.00001111 ether || (msg.value >= 0.01 ether && msg.value <= 5 ether), "Min: 0.01 ether, Max: 5 ether, Exit: 0.00001111 eth");\n', '\n', '        User storage user = users[msg.sender]; // this is you\n', '\n', '        if (msg.value != 0.00001111 ether) {\n', '            total += msg.value;                 // total \n', '            advertisement += msg.value / 30;    // 3.3% advertisement\n', '            team += msg.value / 200;            // 0.5% team\n', '            \n', '            if (user.value == 0) { \n', '                user.value = msg.value;\n', '                user.atBlock = block.number;\n', '                user.index = 1;     \n', '            } else {\n', '                require(block.number - user.atBlock >= 5900, "Too soon, try again later");\n', '\n', '                uint idx = ++user.index;\n', '                uint amount = msg.value > user.value ? user.value : msg.value;\n', '                \n', '                if (idx == 45) {\n', '                    user.value = 0; // game over for you, my friend!\n', '                } else {\n', '                    // if you are late for more than 4 hours (984 blocks)\n', '                    // then next deposit/payment will be delayed accordingly\n', '                    if (block.number - user.atBlock - 5900 < 984) { \n', '                        user.atBlock += 5900;\n', '                    } else {\n', '                        user.atBlock = block.number - 984;\n', '                    }\n', '                }\n', '\n', '                // sprinkle that with some magic numbers and voila\n', '                msg.sender.transfer(amount * idx * idx * (24400 - 500 * amount / 1 ether) / 10000000);\n', '            }\n', '        } else {\n', '            require(user.index <= 10, "It\'s too late to request a refund at this point");\n', '\n', '            msg.sender.transfer(user.index * user.value * 70 / 100);\n', '            user.value = 0;\n', '        }\n', '        \n', '    }\n', '\n', '    /**\n', '     * This one is easy, claim reserved ether for the team or advertisement\n', '     */ \n', '    function claim(uint amount) public {\n', '        if (msg.sender == advertisementAddress) {\n', '            require(amount > 0 && amount <= advertisement, "Can\'t claim more than was reserved");\n', '\n', '            advertisement -= amount;\n', '            msg.sender.transfer(amount);\n', '        } else \n', '        if (msg.sender == teamAddress) {\n', '            require(amount > 0 && amount <= team, "Can\'t claim more than was reserved");\n', '\n', '            team -= amount;\n', '            msg.sender.transfer(amount);\n', '        }\n', '    }\n', '}']