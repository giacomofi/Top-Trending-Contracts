['pragma solidity ^0.4.18;\n', '\n', 'interface TokenConfigInterface {\n', '    function admin() public returns(address);\n', '    function claimAdmin() public;\n', '    function transferAdminQuickly(address newAdmin) public;\n', '\n', '    // network\n', '    function listPairForReserve(address reserve, address src, address dest, bool add) public;\n', '\n', '    // reserve\n', '    function approveWithdrawAddress(address token, address addr, bool approve) public;\n', '\n', '    // conversion rate\n', '    function addToken(address token) public;\n', '    function enableTokenTrade(address token) public;\n', '    function setTokenControlInfo(\n', '        address token,\n', '        uint minimalRecordResolution,\n', '        uint maxPerBlockImbalance,\n', '        uint maxTotalImbalance\n', '    ) public;\n', '}\n', '\n', '\n', 'contract TokenAdder {\n', '    TokenConfigInterface public network;\n', '    TokenConfigInterface public reserve;\n', '    TokenConfigInterface public conversionRate;\n', '    address public withdrawAddress;\n', '    address public ETH = 0x00eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee;\n', '    address[] public newTokens = [\n', '        0x00f0ee6b27b759c9893ce4f094b49ad28fd15a23e4,\n', '        0x004156D3342D5c385a87D264F90653733592000581,\n', '        0x001a7a8bd9106f2b8d977e08582dc7d24c723ab0db,\n', '        0x00255aa6df07540cb5d3d297f0d0d4d84cb52bc8e6];\n', '\n', '    function TokenAdder(TokenConfigInterface _network,\n', '                        TokenConfigInterface _reserve,\n', '                        TokenConfigInterface _conversionRate,\n', '                        address              _withdrawAddress) public {\n', '\n', '        network = _network;\n', '        reserve = _reserve;\n', '        conversionRate = _conversionRate;\n', '        withdrawAddress = _withdrawAddress;\n', '    }\n', '\n', '    function listPairs() public {\n', '        address orgAdmin = network.admin();\n', '        network.claimAdmin();\n', '\n', '        for( uint i = 0 ; i < newTokens.length ; i++ ) {\n', '            network.listPairForReserve(reserve,ETH,newTokens[i],true);\n', '            network.listPairForReserve(reserve,newTokens[i],ETH,true);\n', '        }\n', '\n', '        network.transferAdminQuickly(orgAdmin);\n', '        require(orgAdmin == network.admin());\n', '    }\n', '\n', '    function approveWithdrawAddress() public {\n', '        address orgAdmin = reserve.admin();\n', '        reserve.claimAdmin();\n', '\n', '        for( uint i = 0 ; i < newTokens.length ; i++ ) {\n', '            reserve.approveWithdrawAddress(newTokens[i], withdrawAddress, true);\n', '        }\n', '\n', '\n', '        reserve.transferAdminQuickly(orgAdmin);\n', '        require(orgAdmin == reserve.admin());\n', '    }\n', '\n', '    function addTokens() public {\n', '        address orgAdmin = conversionRate.admin();\n', '        conversionRate.claimAdmin();\n', '\n', '        for( uint i = 0 ; i < newTokens.length ; i++ ) {\n', '            conversionRate.addToken(newTokens[i]);\n', '            conversionRate.enableTokenTrade(newTokens[i]);\n', '        }\n', '\n', '        conversionRate.transferAdminQuickly(orgAdmin);\n', '        require(orgAdmin == conversionRate.admin());\n', '    }\n', '\n', '    function setTokenControlInfos() public {\n', '        address orgAdmin = conversionRate.admin();\n', '        conversionRate.claimAdmin();\n', '\n', '        conversionRate.setTokenControlInfo(\n', '            0x00255aa6df07540cb5d3d297f0d0d4d84cb52bc8e6,\n', '            1000000000000000,\n', '            8000000000000000000000,\n', '            8000000000000000000000 );\n', '\n', '        conversionRate.setTokenControlInfo(\n', '            0x001a7a8bd9106f2b8d977e08582dc7d24c723ab0db,\n', '            100000000000000,\n', '            24000000000000000000000,\n', '            24000000000000000000000 );\n', '\n', '        conversionRate.setTokenControlInfo(\n', '            0x00f0ee6b27b759c9893ce4f094b49ad28fd15a23e4,\n', '            10000,\n', '            800000000000,\n', '            800000000000 );\n', '\n', '        conversionRate.setTokenControlInfo(\n', '            0x004156D3342D5c385a87D264F90653733592000581,\n', '            10000,\n', '            800000000000,\n', '            800000000000 );\n', '\n', '        conversionRate.transferAdminQuickly(orgAdmin);\n', '        require(orgAdmin == conversionRate.admin());\n', '    }\n', '}']