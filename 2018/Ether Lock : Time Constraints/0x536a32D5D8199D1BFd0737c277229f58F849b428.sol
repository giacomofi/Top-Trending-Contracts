['pragma solidity ^0.4.23;\n', '\n', 'contract TimeCard {\n', '    string public suicaId;\n', '    uint[] public timeList;\n', '    uint[] public workTimeList;\n', '    \n', '    constructor(string mySuicaId) public {\n', '        suicaId = mySuicaId;\n', '    }\n', '    \n', '    function setTimeStamp(string mySuicaId, uint timeStamp) public {\n', '        require(keccak256(abi.encodePacked(suicaId)) == keccak256(abi.encodePacked(mySuicaId)));\n', '        timeList.push(timeStamp);\n', '        if((timeList.length % 2 ) == 0 ) {\n', '            uint startTime = timeList[timeList.length -2];\n', '            uint endTime = timeList[timeList.length -1];\n', '            uint workTime = getWorkTime(startTime, endTime);\n', '            workTimeList.push(workTime);\n', '        }\n', '    }\n', '\n', '    function getWorkTime(uint startTime, uint endTime) internal pure returns(uint){\n', '        uint workTime = endTime - startTime;\n', '        return workTime;\n', '    }\n', '}']