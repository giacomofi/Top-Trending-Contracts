['pragma solidity ^0.4.16;\n', '\n', 'contract owned {\n', '    address public owner;\n', '\n', '    constructor() public {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    modifier onlyOwner {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '\n', '    function transferOwnership(address newOwner) onlyOwner public {\n', '        owner = newOwner;\n', '    }\n', '}\n', '\n', '\n', '\n', 'contract RTDReward is owned {\n', '    address public token;\n', '    string public detail;\n', '    string public website;\n', '\n', '    event Reward(address target, uint256 amount);\n', '\n', '    constructor() public {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    function setContract(address _token,string _website, string _detail) onlyOwner public {\n', '        token = _token;\n', '        website = _website;\n', '        detail = _detail;\n', '    }\n', '\n', '    function() payable public {}\n', '\n', '    function withdrawEther() onlyOwner public {\n', '        owner.transfer(address(this).balance);\n', '    }\n', '\n', '    function sendReward(address _user, uint256 _value)  onlyOwner public {\n', '            _user.transfer(_value);\n', '            emit Reward(_user, _value);\n', '    }\n', '}']