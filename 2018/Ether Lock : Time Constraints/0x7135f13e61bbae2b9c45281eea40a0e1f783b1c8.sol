['// version 0.8\n', '\n', 'pragma solidity ^0.4.24;\n', '\n', '//abstract of token interface\n', 'contract ERC20Basic {\n', '    uint256 public totalSupply;\n', '    function balanceOf(address who) public view returns (uint256);\n', '    function transfer(address to, uint256 value) public returns (bool);\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '}\n', '\n', 'contract Dist{\n', '\n', '    // public    \n', '    address public owner;\n', '    address public tokenAddress; // 0x6781a0F84c7E9e846DCb84A9a5bd49333067b104 ZAP token mainnet address\n', '    uint public unlockTime;\n', '\n', '    // internal\n', '    ERC20Basic token;\n', '\n', '    modifier onlyOwner{\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '\n', '    // 01/01/2019 @ 12:00am (UTC) = 1546300800\n', '    // ex.\n', '    // "0xca35b7d915458ef540ade6068dfe2f44e8fa733c",1514411898,"0x6781a0F84c7E9e846DCb84A9a5bd49333067b104"\n', '\n', '    constructor(address _owner, uint _unlockTime, address _tokenAddress){\n', '        owner = _owner;\n', '        tokenAddress = _tokenAddress;\n', '        token = ERC20Basic(_tokenAddress);\n', '        unlockTime = _unlockTime;\n', '    }\n', '\n', '    function balance() public view returns(uint _balance){\n', '\n', '        return token.balanceOf(this);\n', '    }\n', '\n', '    function isLocked() public view returns(bool) {\n', '\n', '        return (now < unlockTime);\n', '    }\n', '\n', '    function withdraw() onlyOwner {\n', '\n', '        if(!isLocked()){\n', '            token.transfer(owner, balance());\n', '        }\n', '    }\n', '\n', '}']