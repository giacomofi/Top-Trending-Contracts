['pragma solidity ^0.4.18;\n', '\n', '/**\n', ' * @title ERC721 interface\n', ' * @dev see https://github.com/ethereum/eips/issues/721\n', ' */\n', '\n', '\n', 'contract AccessControl {\n', '    address public creatorAddress;\n', '    uint16 public totalSeraphims = 0;\n', '    mapping (address => bool) public seraphims;\n', '\n', '    bool public isMaintenanceMode = true;\n', ' \n', '    modifier onlyCREATOR() {\n', '        require(msg.sender == creatorAddress);\n', '        _;\n', '    }\n', '\n', '    modifier onlySERAPHIM() {\n', '        require(seraphims[msg.sender] == true);\n', '        _;\n', '    }\n', '    \n', '    modifier isContractActive {\n', '        require(!isMaintenanceMode);\n', '        _;\n', '    }\n', '    \n', '    // Constructor\n', '    function AccessControl() public {\n', '        creatorAddress = msg.sender;\n', '    }\n', '    \n', '\n', '    function addSERAPHIM(address _newSeraphim) onlyCREATOR public {\n', '        if (seraphims[_newSeraphim] == false) {\n', '            seraphims[_newSeraphim] = true;\n', '            totalSeraphims += 1;\n', '        }\n', '    }\n', '    \n', '    function removeSERAPHIM(address _oldSeraphim) onlyCREATOR public {\n', '        if (seraphims[_oldSeraphim] == true) {\n', '            seraphims[_oldSeraphim] = false;\n', '            totalSeraphims -= 1;\n', '        }\n', '    }\n', '\n', '    function updateMaintenanceMode(bool _isMaintaining) onlyCREATOR public {\n', '        isMaintenanceMode = _isMaintaining;\n', '    }\n', '\n', '  \n', '} \n', '\n', 'contract SafeMath {\n', '    function safeAdd(uint x, uint y) pure internal returns(uint) {\n', '      uint z = x + y;\n', '      assert((z >= x) && (z >= y));\n', '      return z;\n', '    }\n', '\n', '    function safeSubtract(uint x, uint y) pure internal returns(uint) {\n', '      assert(x >= y);\n', '      uint z = x - y;\n', '      return z;\n', '    }\n', '\n', '    function safeMult(uint x, uint y) pure internal returns(uint) {\n', '      uint z = x * y;\n', '      assert((x == 0)||(z/x == y));\n', '      return z;\n', '    }\n', '\n', '    function getRandomNumber(uint16 maxRandom, uint8 min, address privateAddress) constant public returns(uint8) {\n', '        uint256 genNum = uint256(block.blockhash(block.number-1)) + uint256(privateAddress);\n', '        return uint8(genNum % (maxRandom - min + 1)+min);\n', '    }\n', '}\n', '\n', 'contract Enums {\n', '    enum ResultCode {\n', '        SUCCESS,\n', '        ERROR_CLASS_NOT_FOUND,\n', '        ERROR_LOW_BALANCE,\n', '        ERROR_SEND_FAIL,\n', '        ERROR_NOT_OWNER,\n', '        ERROR_NOT_ENOUGH_MONEY,\n', '        ERROR_INVALID_AMOUNT\n', '    }\n', '\n', '    enum AngelAura { \n', '        Blue, \n', '        Yellow, \n', '        Purple, \n', '        Orange, \n', '        Red, \n', '        Green \n', '    }\n', '}\n', '\n', 'contract IAngelCardData is AccessControl, Enums {\n', '    uint8 public totalAngelCardSeries;\n', '    uint64 public totalAngels;\n', '\n', '    \n', '    // write\n', '    // angels\n', '    function createAngelCardSeries(uint8 _angelCardSeriesId, uint _basePrice,  uint64 _maxTotal, uint8 _baseAura, uint16 _baseBattlePower, uint64 _liveTime) onlyCREATOR external returns(uint8);\n', '    function updateAngelCardSeries(uint8 _angelCardSeriesId, uint64 _newPrice, uint64 _newMaxTotal) onlyCREATOR external;\n', '    function setAngel(uint8 _angelCardSeriesId, address _owner, uint _price, uint16 _battlePower) onlySERAPHIM external returns(uint64);\n', '    function addToAngelExperienceLevel(uint64 _angelId, uint _value) onlySERAPHIM external;\n', '    function setAngelLastBattleTime(uint64 _angelId) onlySERAPHIM external;\n', '    function setAngelLastVsBattleTime(uint64 _angelId) onlySERAPHIM external;\n', '    function setLastBattleResult(uint64 _angelId, uint16 _value) onlySERAPHIM external;\n', '    function addAngelIdMapping(address _owner, uint64 _angelId) private;\n', '    function transferAngel(address _from, address _to, uint64 _angelId) onlySERAPHIM public returns(ResultCode);\n', '    function ownerAngelTransfer (address _to, uint64 _angelId)  public;\n', '    function updateAngelLock (uint64 _angelId, bool newValue) public;\n', '    function removeCreator() onlyCREATOR external;\n', '\n', '    // read\n', '    function getAngelCardSeries(uint8 _angelCardSeriesId) constant public returns(uint8 angelCardSeriesId, uint64 currentAngelTotal, uint basePrice, uint64 maxAngelTotal, uint8 baseAura, uint baseBattlePower, uint64 lastSellTime, uint64 liveTime);\n', '    function getAngel(uint64 _angelId) constant public returns(uint64 angelId, uint8 angelCardSeriesId, uint16 battlePower, uint8 aura, uint16 experience, uint price, uint64 createdTime, uint64 lastBattleTime, uint64 lastVsBattleTime, uint16 lastBattleResult, address owner);\n', '    function getOwnerAngelCount(address _owner) constant public returns(uint);\n', '    function getAngelByIndex(address _owner, uint _index) constant public returns(uint64);\n', '    function getTotalAngelCardSeries() constant public returns (uint8);\n', '    function getTotalAngels() constant public returns (uint64);\n', '    function getAngelLockStatus(uint64 _angelId) constant public returns (bool);\n', '}\n', ' \n', 'contract AngelWrapper721 is AccessControl, Enums {\n', '  //Events\n', '  event Transfer(address indexed _from, address indexed _to, uint256 _tokenId);\n', '  event MarketplaceTransfer(address indexed _from, address indexed _to, uint256 _tokenId, address _marketplace);\n', '  event Approval(address indexed _owner, address indexed _approved, uint256 _tokenId);\n', '\n', '\n', '//Storage\n', ' \n', '   \n', '    address public angelCardDataContract = 0x6d2e76213615925c5fc436565b5ee788ee0e86dc;\n', '    \n', '    struct Angel {\n', '        uint64 angelId;\n', '        uint8 angelCardSeriesId;\n', '        address owner;\n', '        uint16 battlePower;\n', '        AngelAura aura;\n', '        uint16 experience;\n', '        uint price;\n', '        uint64 createdTime;\n', '        uint64 lastBattleTime;\n', '        uint64 lastVsBattleTime;\n', '        uint16 lastBattleResult;\n', '        bool ownerLock;\n', '    }\n', '\n', '\n', '\n', '\n', '    \n', '    function SetAngelCardDataContact(address _angelCardDataContract) onlyCREATOR external {\n', '       angelCardDataContract = _angelCardDataContract;\n', '    }\n', '\n', '  function balanceOf(address _owner) public view returns (uint256 _balance) {\n', '           IAngelCardData angelCardData = IAngelCardData(angelCardDataContract);\n', '           return angelCardData.getOwnerAngelCount(_owner);\n', '  }\n', '  \n', '  function ownerOf(uint256 _tokenId) public view returns (address _owner) {\n', '            IAngelCardData angelCardData = IAngelCardData(angelCardDataContract);\n', '            address owner;\n', '        (,,,,,,,,,,owner) = angelCardData.getAngel(uint64(_tokenId));\n', '            return owner;\n', '  }\n', '  \n', '  function getTokenByIndex (address _owner, uint index) constant public returns (uint64) {\n', '      //returns the angel number of the index-th item in that addresses angel list. \n', '             IAngelCardData angelCardData = IAngelCardData(angelCardDataContract);\n', '        return uint64(angelCardData.getAngelByIndex(_owner, index));\n', '        \n', '  }\n', '\t\n', '\n', '        \n', '         function getAngel(uint64 _angelId) constant public returns(uint64 angelId, uint8 angelCardSeriesId, uint16 battlePower, uint8 aura, uint16 experience, uint price, address owner) {\n', '        IAngelCardData angelCardData = IAngelCardData(angelCardDataContract);\n', '        (angelId,angelCardSeriesId, battlePower, aura,experience,price,,,,, owner) = angelCardData.getAngel(_angelId);\n', '      \n', '    }\n', '        \n', '        \n', '       \n', '    \n', '    function getTokenLockStatus(uint64 _tokenId) constant public returns (bool) {\n', '       IAngelCardData angelCardData = IAngelCardData(angelCardDataContract);\n', '       return angelCardData.getAngelLockStatus(_tokenId);\n', '       \n', '    }\n', '    \n', '   \n', ' \n', '  function transfer(address _to, uint256 _tokenId) public {\n', '      \n', '        IAngelCardData angelCardData = IAngelCardData(angelCardDataContract);\n', '       address owner;\n', '       (,,,,,,,,, owner) = angelCardData.getAngel(uint64(_tokenId));\n', '      \n', '       if ((seraphims[msg.sender] == true)  || (owner == msg.sender))\n', '       {\n', '         angelCardData.transferAngel(owner,_to, uint64 (_tokenId)) ;\n', '         Transfer(owner, _to, _tokenId);\n', '         MarketplaceTransfer(owner,  _to, _tokenId, msg.sender);\n', '           \n', '       }\n', '      else {revert();}\n', '  }\n', '  function approve(address _to, uint256 _tokenId) public\n', '  {\n', '      //this function should never be called - instead, use updateAccessoryLock from the accessoryData contract;\n', '      revert();\n', '      \n', '  }\n', '  function takeOwnership(uint256 _tokenId) public\n', '  { \n', '     //this function should never be called - instead use transfer\n', '     revert();\n', '  }\n', '    function kill() onlyCREATOR external {\n', '        selfdestruct(creatorAddress);\n', '    }\n', '    }']