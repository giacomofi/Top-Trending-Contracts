['pragma solidity ^0.4.21;\n', '\n', 'contract colors {\n', '    \n', '    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n', '    address public owner;\n', '    \n', '    mapping (uint => string) private messageLog;\n', '    mapping (uint => address) private senderLog;\n', '    mapping (uint => string) private senderColor;\n', '    mapping (address => string) private myColor;\n', '    mapping (address => uint) private colorCount;\n', '    uint private messageCount;\n', '    \n', '    uint private red;\n', '    uint private orange;\n', '    uint private yellow;\n', '    uint private green;\n', '    uint private blue;\n', '    uint private teal;\n', '    uint private purple;\n', '    uint private pink;\n', '    uint private black;\n', '    uint private white;\n', '    \n', '    function colors () public {\n', '        owner = msg.sender;\n', '        messageCount = 20;\n', '    }\n', '      \n', '    modifier onlyOwner() {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '    \n', '    function transferOwnership(address newOwner) public onlyOwner {\n', '        require(newOwner != address(0));\n', '        emit OwnershipTransferred(owner, newOwner);\n', '        owner = newOwner;\n', '    }\n', '    \n', '    function withdraw() external onlyOwner {\n', '\t    owner.transfer(this.balance);\n', '\t}\n', '\t\n', '\tmodifier onlyRegistered () {\n', '\t    require (colorCount[msg.sender] > 0);\n', '\t    _;\n', '\t}\n', '\t\n', '\tfunction sendMessage (string _message) external onlyRegistered {\n', '\t    if (messageCount == 70) {\n', '\t        messageCount = 20;\n', '\t    }\n', '\t    messageCount++;\n', '\t    senderLog[messageCount] = (msg.sender);\n', '\t    senderColor[messageCount] = (myColor[msg.sender]);\n', '\t    messageLog[messageCount] = (_message);\n', '\t}\n', '\t\n', '\t\n', '\tfunction view22 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[21], senderColor[21], messageLog[21], senderLog[22], senderColor[22], messageLog[22]);\n', '\t}\n', '\t\n', '\tfunction view24 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[23], senderColor[23], messageLog[23], senderLog[24], senderColor[24], messageLog[24]);\n', '\t}\n', '\t\n', '\tfunction view26 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[25], senderColor[25], messageLog[25], senderLog[26], senderColor[26], messageLog[26]);\n', '\t}\n', '\t\n', '\tfunction view28 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[27], senderColor[27], messageLog[27], senderLog[28], senderColor[28], messageLog[28]);\n', '\t}\n', '\t\n', '\tfunction view30 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[29], senderColor[29], messageLog[29], senderLog[30], senderColor[30], messageLog[30]);\n', '\t}\n', '\t\n', '\tfunction view32 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[31], senderColor[31], messageLog[31], senderLog[32], senderColor[32], messageLog[32]);\n', '\t}\n', '\t\n', '\tfunction view34 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[33], senderColor[33], messageLog[33], senderLog[34], senderColor[34], messageLog[34]);\n', '\t}\n', '\t\n', '\tfunction view36 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[35], senderColor[35], messageLog[35], senderLog[36], senderColor[36], messageLog[36]);\n', '\t}\n', '\t\n', '\tfunction view38 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[37], senderColor[37], messageLog[37], senderLog[38], senderColor[38], messageLog[38]);\n', '\t}\n', '\t\n', '\tfunction view40 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[39], senderColor[39], messageLog[39], senderLog[40], senderColor[40], messageLog[40]);\n', '\t}\n', '\t\n', '\tfunction view42 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[41], senderColor[41], messageLog[41], senderLog[42], senderColor[42], messageLog[42]);\n', '\t}\n', '\t\n', '\tfunction view44 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[43], senderColor[43], messageLog[43], senderLog[44], senderColor[44], messageLog[44]);\n', '\t}\n', '\t\n', '\tfunction view46 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[45], senderColor[45], messageLog[45], senderLog[46], senderColor[46], messageLog[46]);\n', '\t}\n', '\t\n', '\tfunction view48 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[47], senderColor[47], messageLog[47], senderLog[48], senderColor[48], messageLog[48]);\n', '\t}\n', '\t\n', '\tfunction view50 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[49], senderColor[49], messageLog[49], senderLog[50], senderColor[50], messageLog[50]);\n', '\t}\n', '\t\n', '\tfunction view52 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[51], senderColor[51], messageLog[51], senderLog[52], senderColor[52], messageLog[52]);\n', '\t}\n', '\t\n', '\tfunction view54 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[53], senderColor[53], messageLog[53], senderLog[54], senderColor[54], messageLog[54]);\n', '\t}\n', '\t\n', '\tfunction view56 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[55], senderColor[55], messageLog[55], senderLog[56], senderColor[56], messageLog[56]);\n', '\t}\n', '\t\n', '\tfunction view58 () view public returns (address, string, string, address, string, string) {\n', '\t   return (senderLog[57], senderColor[57], messageLog[57], senderLog[58], senderColor[58], messageLog[58]);\n', '\t}\n', '\t\n', '\tfunction view60 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[59], senderColor[59], messageLog[59], senderLog[60], senderColor[60], messageLog[60]);\n', '\t}\n', '\t\n', '\tfunction view62 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[61], senderColor[61], messageLog[61], senderLog[62], senderColor[62], messageLog[62]);\n', '\t}\n', '\t\n', '\tfunction view64 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[63], senderColor[63], messageLog[63], senderLog[64], senderColor[64], messageLog[64]);\n', '\t}\n', '\t\n', '\tfunction view66 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[65], senderColor[65], messageLog[65], senderLog[66], senderColor[66], messageLog[66]);\n', '\t}\n', '\t\n', '\tfunction view68 () view public returns (address, string, string, address, string, string) {\n', '\t   return (senderLog[67], senderColor[67], messageLog[67], senderLog[68], senderColor[68], messageLog[68]);\n', '\t}\n', '\t\n', '\tfunction view70 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[69], senderColor[69], messageLog[69], senderLog[70], senderColor[70], messageLog[70]);\n', '\t}\n', '\t\n', '\tmodifier noColor () {\n', '\t    require (colorCount[msg.sender] == 0);\n', '\t    require (msg.value == 0.0025 ether);\n', '\t    _;\n', '\t}\n', '\t\n', '\tfunction setColorRed () external payable noColor {\n', '\t    red++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#ff383b";\n', '\t}\n', '\t\n', '\tfunction setColorOrange () external payable noColor {\n', '\t    orange++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#f8ac28";\n', '\t}\n', '\t\n', '\tfunction setColorYellow () external payable noColor {\n', '\t    yellow++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#ead353";\n', '\t}\n', '\t\n', '\tfunction setColorGreen () external payable noColor {\n', '\t    green++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#67d75c";\n', '\t}\n', '\t\n', '\tfunction setColorBlue () external payable noColor {\n', '\t    blue++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#476ef2";\n', '\t}\n', '\t\n', '\tfunction setColorTeal () external payable noColor {\n', '\t    teal++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#86e3db";\n', '\t}\n', '\t\n', '\tfunction setColorPurple () external payable noColor {\n', '\t    purple++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#9b5aea";\n', '\t}\n', '\t\n', '\tfunction setColorPink () external payable noColor {\n', '\t    pink++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#e96de8";\n', '\t}\n', '\t\n', '\tfunction setColorBlack () external payable noColor {\n', '\t    black++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#212121";\n', '\t}\n', '\t\n', '\tfunction setColorWhite () external payable noColor {\n', '\t    white++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#cecece";\n', '\t}\n', '\t\n', '\tmodifier hasColor () {\n', '\t    require (colorCount[msg.sender] > 0);\n', '\t    require (msg.value == 0.00125 ether);\n', '\t    _;\n', '\t}\n', '\t\n', '\tfunction changeColorRed () external payable hasColor {\n', '\t    red++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#ff383b";\n', '\t}\n', '\t\n', '\tfunction changeColorOrange () external payable hasColor {\n', '\t    orange++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#f8ac28";\n', '\t}\n', '\t\n', '\tfunction changeColorYellow () external payable hasColor {\n', '\t    yellow++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#ead353";\n', '\t}\n', '\t\n', '\tfunction changeColorGreen () external payable hasColor {\n', '\t    green++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#67d75c";\n', '\t}\n', '\t\n', '\tfunction changeColorBlue () external payable hasColor {\n', '\t    blue++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#476ef2";\n', '\t}\n', '\t\n', '\tfunction changeColorTeal () external payable hasColor {\n', '\t    teal++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#86e3db";\n', '\t}\n', '\t\n', '\tfunction changeColorPurple () external payable hasColor {\n', '\t    purple++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#9b5aea";\n', '\t}\n', '\t\n', '\tfunction changeColorPink () external payable hasColor {\n', '\t    pink++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#e96de8";\n', '\t}\n', '\t\n', '\tfunction changeColorBlack () external payable hasColor {\n', '\t    black++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#212121";\n', '\t}\n', '\t\n', '\tfunction changeColorWhite () external payable hasColor {\n', '\t    white++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#cecece";\n', '\t}\n', '\t\n', '\tfunction myColorIs () public view returns (string) {\n', '        return myColor[msg.sender];\n', '    }\n', '    \n', '    function colorLeaderboard () public view returns (uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint) {\n', '        return (colorCount[msg.sender], red, orange, yellow, green, blue, teal, purple, pink, black, white, messageCount);\n', '    }\n', '}']
['pragma solidity ^0.4.21;\n', '\n', 'contract colors {\n', '    \n', '    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n', '    address public owner;\n', '    \n', '    mapping (uint => string) private messageLog;\n', '    mapping (uint => address) private senderLog;\n', '    mapping (uint => string) private senderColor;\n', '    mapping (address => string) private myColor;\n', '    mapping (address => uint) private colorCount;\n', '    uint private messageCount;\n', '    \n', '    uint private red;\n', '    uint private orange;\n', '    uint private yellow;\n', '    uint private green;\n', '    uint private blue;\n', '    uint private teal;\n', '    uint private purple;\n', '    uint private pink;\n', '    uint private black;\n', '    uint private white;\n', '    \n', '    function colors () public {\n', '        owner = msg.sender;\n', '        messageCount = 20;\n', '    }\n', '      \n', '    modifier onlyOwner() {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '    \n', '    function transferOwnership(address newOwner) public onlyOwner {\n', '        require(newOwner != address(0));\n', '        emit OwnershipTransferred(owner, newOwner);\n', '        owner = newOwner;\n', '    }\n', '    \n', '    function withdraw() external onlyOwner {\n', '\t    owner.transfer(this.balance);\n', '\t}\n', '\t\n', '\tmodifier onlyRegistered () {\n', '\t    require (colorCount[msg.sender] > 0);\n', '\t    _;\n', '\t}\n', '\t\n', '\tfunction sendMessage (string _message) external onlyRegistered {\n', '\t    if (messageCount == 70) {\n', '\t        messageCount = 20;\n', '\t    }\n', '\t    messageCount++;\n', '\t    senderLog[messageCount] = (msg.sender);\n', '\t    senderColor[messageCount] = (myColor[msg.sender]);\n', '\t    messageLog[messageCount] = (_message);\n', '\t}\n', '\t\n', '\t\n', '\tfunction view22 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[21], senderColor[21], messageLog[21], senderLog[22], senderColor[22], messageLog[22]);\n', '\t}\n', '\t\n', '\tfunction view24 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[23], senderColor[23], messageLog[23], senderLog[24], senderColor[24], messageLog[24]);\n', '\t}\n', '\t\n', '\tfunction view26 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[25], senderColor[25], messageLog[25], senderLog[26], senderColor[26], messageLog[26]);\n', '\t}\n', '\t\n', '\tfunction view28 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[27], senderColor[27], messageLog[27], senderLog[28], senderColor[28], messageLog[28]);\n', '\t}\n', '\t\n', '\tfunction view30 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[29], senderColor[29], messageLog[29], senderLog[30], senderColor[30], messageLog[30]);\n', '\t}\n', '\t\n', '\tfunction view32 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[31], senderColor[31], messageLog[31], senderLog[32], senderColor[32], messageLog[32]);\n', '\t}\n', '\t\n', '\tfunction view34 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[33], senderColor[33], messageLog[33], senderLog[34], senderColor[34], messageLog[34]);\n', '\t}\n', '\t\n', '\tfunction view36 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[35], senderColor[35], messageLog[35], senderLog[36], senderColor[36], messageLog[36]);\n', '\t}\n', '\t\n', '\tfunction view38 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[37], senderColor[37], messageLog[37], senderLog[38], senderColor[38], messageLog[38]);\n', '\t}\n', '\t\n', '\tfunction view40 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[39], senderColor[39], messageLog[39], senderLog[40], senderColor[40], messageLog[40]);\n', '\t}\n', '\t\n', '\tfunction view42 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[41], senderColor[41], messageLog[41], senderLog[42], senderColor[42], messageLog[42]);\n', '\t}\n', '\t\n', '\tfunction view44 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[43], senderColor[43], messageLog[43], senderLog[44], senderColor[44], messageLog[44]);\n', '\t}\n', '\t\n', '\tfunction view46 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[45], senderColor[45], messageLog[45], senderLog[46], senderColor[46], messageLog[46]);\n', '\t}\n', '\t\n', '\tfunction view48 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[47], senderColor[47], messageLog[47], senderLog[48], senderColor[48], messageLog[48]);\n', '\t}\n', '\t\n', '\tfunction view50 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[49], senderColor[49], messageLog[49], senderLog[50], senderColor[50], messageLog[50]);\n', '\t}\n', '\t\n', '\tfunction view52 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[51], senderColor[51], messageLog[51], senderLog[52], senderColor[52], messageLog[52]);\n', '\t}\n', '\t\n', '\tfunction view54 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[53], senderColor[53], messageLog[53], senderLog[54], senderColor[54], messageLog[54]);\n', '\t}\n', '\t\n', '\tfunction view56 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[55], senderColor[55], messageLog[55], senderLog[56], senderColor[56], messageLog[56]);\n', '\t}\n', '\t\n', '\tfunction view58 () view public returns (address, string, string, address, string, string) {\n', '\t   return (senderLog[57], senderColor[57], messageLog[57], senderLog[58], senderColor[58], messageLog[58]);\n', '\t}\n', '\t\n', '\tfunction view60 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[59], senderColor[59], messageLog[59], senderLog[60], senderColor[60], messageLog[60]);\n', '\t}\n', '\t\n', '\tfunction view62 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[61], senderColor[61], messageLog[61], senderLog[62], senderColor[62], messageLog[62]);\n', '\t}\n', '\t\n', '\tfunction view64 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[63], senderColor[63], messageLog[63], senderLog[64], senderColor[64], messageLog[64]);\n', '\t}\n', '\t\n', '\tfunction view66 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[65], senderColor[65], messageLog[65], senderLog[66], senderColor[66], messageLog[66]);\n', '\t}\n', '\t\n', '\tfunction view68 () view public returns (address, string, string, address, string, string) {\n', '\t   return (senderLog[67], senderColor[67], messageLog[67], senderLog[68], senderColor[68], messageLog[68]);\n', '\t}\n', '\t\n', '\tfunction view70 () view public returns (address, string, string, address, string, string) {\n', '\t    return (senderLog[69], senderColor[69], messageLog[69], senderLog[70], senderColor[70], messageLog[70]);\n', '\t}\n', '\t\n', '\tmodifier noColor () {\n', '\t    require (colorCount[msg.sender] == 0);\n', '\t    require (msg.value == 0.0025 ether);\n', '\t    _;\n', '\t}\n', '\t\n', '\tfunction setColorRed () external payable noColor {\n', '\t    red++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#ff383b";\n', '\t}\n', '\t\n', '\tfunction setColorOrange () external payable noColor {\n', '\t    orange++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#f8ac28";\n', '\t}\n', '\t\n', '\tfunction setColorYellow () external payable noColor {\n', '\t    yellow++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#ead353";\n', '\t}\n', '\t\n', '\tfunction setColorGreen () external payable noColor {\n', '\t    green++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#67d75c";\n', '\t}\n', '\t\n', '\tfunction setColorBlue () external payable noColor {\n', '\t    blue++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#476ef2";\n', '\t}\n', '\t\n', '\tfunction setColorTeal () external payable noColor {\n', '\t    teal++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#86e3db";\n', '\t}\n', '\t\n', '\tfunction setColorPurple () external payable noColor {\n', '\t    purple++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#9b5aea";\n', '\t}\n', '\t\n', '\tfunction setColorPink () external payable noColor {\n', '\t    pink++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#e96de8";\n', '\t}\n', '\t\n', '\tfunction setColorBlack () external payable noColor {\n', '\t    black++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#212121";\n', '\t}\n', '\t\n', '\tfunction setColorWhite () external payable noColor {\n', '\t    white++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#cecece";\n', '\t}\n', '\t\n', '\tmodifier hasColor () {\n', '\t    require (colorCount[msg.sender] > 0);\n', '\t    require (msg.value == 0.00125 ether);\n', '\t    _;\n', '\t}\n', '\t\n', '\tfunction changeColorRed () external payable hasColor {\n', '\t    red++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#ff383b";\n', '\t}\n', '\t\n', '\tfunction changeColorOrange () external payable hasColor {\n', '\t    orange++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#f8ac28";\n', '\t}\n', '\t\n', '\tfunction changeColorYellow () external payable hasColor {\n', '\t    yellow++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#ead353";\n', '\t}\n', '\t\n', '\tfunction changeColorGreen () external payable hasColor {\n', '\t    green++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#67d75c";\n', '\t}\n', '\t\n', '\tfunction changeColorBlue () external payable hasColor {\n', '\t    blue++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#476ef2";\n', '\t}\n', '\t\n', '\tfunction changeColorTeal () external payable hasColor {\n', '\t    teal++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#86e3db";\n', '\t}\n', '\t\n', '\tfunction changeColorPurple () external payable hasColor {\n', '\t    purple++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#9b5aea";\n', '\t}\n', '\t\n', '\tfunction changeColorPink () external payable hasColor {\n', '\t    pink++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#e96de8";\n', '\t}\n', '\t\n', '\tfunction changeColorBlack () external payable hasColor {\n', '\t    black++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#212121";\n', '\t}\n', '\t\n', '\tfunction changeColorWhite () external payable hasColor {\n', '\t    white++;\n', '\t    colorCount[msg.sender]++;\n', '\t    myColor[msg.sender] = "#cecece";\n', '\t}\n', '\t\n', '\tfunction myColorIs () public view returns (string) {\n', '        return myColor[msg.sender];\n', '    }\n', '    \n', '    function colorLeaderboard () public view returns (uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint) {\n', '        return (colorCount[msg.sender], red, orange, yellow, green, blue, teal, purple, pink, black, white, messageCount);\n', '    }\n', '}']
