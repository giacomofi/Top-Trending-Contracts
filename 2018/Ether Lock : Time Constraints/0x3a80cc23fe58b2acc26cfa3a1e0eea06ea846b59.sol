['pragma solidity ^0.4.18;\n', '\n', 'library SafeMath {\n', '    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        uint256 c = a + b;\n', '        assert(c >= a);\n', '        return c;\n', '    }\n', '}\n', '\n', 'interface Token {\n', '    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n', '}\n', '\n', 'contract ScicoinsICO {\n', '    \n', '    Token public tokenReward;\n', '    address public creator;\n', '    address public owner = 0xA32289544B9B8de7fB8Dfc83FBCB537745b71Be3;\n', '\n', '    uint256 public price;\n', '    uint256 public startDate;\n', '    uint256 public endDate;\n', '\n', '    event FundTransfer(address backer, uint amount, bool isContribution);\n', '\n', '    function ScicoinsICO() public {\n', '        creator = msg.sender;\n', '        startDate = 1521068400;     // 15/03/2018\n', '        endDate = 1526335200;       // 15/05/2018\n', '        price = 1000;\n', '        tokenReward = Token(0x57E84E2c6dFD300F798794F8B330a2A519114B3d);\n', '    }\n', '\n', '    function setOwner(address _owner) public {\n', '        require(msg.sender == creator);\n', '        owner = _owner;      \n', '    }\n', '\n', '    function setCreator(address _creator) public {\n', '        require(msg.sender == creator);\n', '        creator = _creator;      \n', '    }\n', '\n', '    function setStartDate(uint256 _startDate) public {\n', '        require(msg.sender == creator);\n', '        startDate = _startDate;      \n', '    }\n', '\n', '    function setEndtDate(uint256 _endDate) public {\n', '        require(msg.sender == creator);\n', '        endDate = _endDate;      \n', '    }\n', '    \n', '    function setPrice(uint256 _price) public {\n', '        require(msg.sender == creator);\n', '        price = _price;      \n', '    }\n', '\n', '    function setToken(address _token) public {\n', '        require(msg.sender == creator);\n', '        tokenReward = Token(_token);      \n', '    }\n', '    \n', '    function kill() public {\n', '        require(msg.sender == creator);\n', '        selfdestruct(owner);\n', '    }\n', '\n', '    function () payable public {\n', '        require(msg.value > 0);\n', '        require(now > startDate);\n', '        require(now < endDate);\n', '\t    uint amount = msg.value * price;\n', '        tokenReward.transferFrom(owner, msg.sender, amount);\n', '        FundTransfer(msg.sender, amount, true);\n', '        owner.transfer(msg.value);\n', '    }\n', '}']