['pragma solidity ^0.4.24;\n', '\n', 'contract DiaOracle {\n', '            address owner;\n', '\n', '        struct CoinInfo {\n', '                uint256 price;\n', '                uint256 supply;\n', '                uint256 lastUpdateTimestamp;\n', '                string symbol;\n', '        }\n', '\n', '        mapping(string => CoinInfo) diaOracles;\n', '\n', '        event newCoinInfo(\n', '                string name,\n', '                string symbol,\n', '                uint256 price,\n', '                uint256 supply,\n', '                uint256 lastUpdateTimestamp\n', '        );\n', '    \n', '        constructor() public {\n', '                owner = msg.sender;\n', '        }\n', '\n', '        function changeOwner(address newOwner) public {\n', '                require(msg.sender == owner);\n', '                owner = newOwner;\n', '        }\n', '    \n', '        function updateCoinInfo(string name, string symbol, uint256 newPrice, uint256 newSupply, uint256 newTimestamp) public {\n', '                require(msg.sender == owner);\n', '                diaOracles[name] = (CoinInfo(newPrice, newSupply, newTimestamp, symbol));\n', '                emit newCoinInfo(name, symbol, newPrice, newSupply, newTimestamp);\n', '        }\n', '    \n', '        function getCoinInfo(string name) public view returns (uint256, uint256, uint256, string) {\n', '                return (\n', '                        diaOracles[name].price,\n', '                        diaOracles[name].supply,\n', '                        diaOracles[name].lastUpdateTimestamp,\n', '                        diaOracles[name].symbol\n', '                );\n', '        }\n', '}\n', '\n', 'contract DiaAssetEurOracle {\n', '    DiaOracle oracle;\n', '    address owner;\n', '    \n', '    constructor() public {\n', '        owner = msg.sender;\n', '    }\n', '    \n', '    function setOracleAddress(address _address) public {\n', '        require(msg.sender == owner);\n', '        oracle = DiaOracle(_address);\n', '    }\n', '    \n', '    function getAssetEurRate(string asset) constant public returns (uint256) {\n', '        (uint ethPrice,,,) = oracle.getCoinInfo(asset);\n', '        (uint eurPrice,,,) = oracle.getCoinInfo("EUR");\n', '        return (ethPrice * 100000 / eurPrice);\n', '    }\n', '    \n', '}']