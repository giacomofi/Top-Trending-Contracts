['// by nightman\n', '// winner gets the contract balance\n', '// 0.02 to play\n', '\n', '\n', 'pragma solidity ^0.4.23;\n', '\n', 'contract DrainMe {\n', '\n', '//constants\n', '\n', 'address public winner = 0x0;\n', 'address public owner;\n', 'address public firstTarget = 0x461ec7309F187dd4650EE6b4D25D93c922d7D56b;\n', 'address public secondTarget = 0x1C3E062c77f09fC61550703bDd1D59842C22c766;\n', 'address[] public players;\n', '\n', 'mapping(address=>bool) approvedPlayers;\n', '\n', 'uint256 public secret;\n', 'uint256[] public seed = [951828771,158769871220];\n', 'uint256[] public balance;\n', '\n', '//constructor\n', '\n', 'function DranMe() public payable{\n', '\towner = msg.sender;\n', '}\n', '\n', '//modifiers\n', '\n', 'modifier onlyOwner() {\n', '    require(msg.sender == owner);\n', '    _;\n', '}\n', '\n', 'modifier onlyWinner() {\n', '    require(msg.sender == winner);\n', '    _;\n', '}\n', '\n', 'modifier onlyPlayers() {\n', '    require(approvedPlayers[msg.sender]);\n', '    _;\n', '}\n', '\n', '//functions\n', '\n', 'function getLength() public constant returns(uint256) {\n', '\treturn seed.length;\n', '}\n', '\n', 'function setSecret(uint256 _secret) public payable onlyOwner{\n', '\tsecret = _secret;\n', '}\n', '\n', 'function getPlayerCount() public constant returns(uint256) {\n', '\treturn players.length;\n', '}\n', '\n', 'function getPrize() public constant returns(uint256) {\n', '\treturn address(this).balance;\n', '}\n', '\n', 'function becomePlayer() public payable{\n', '\trequire(msg.value >= 0.02 ether);\n', '\tplayers.push(msg.sender);\n', '\tapprovedPlayers[msg.sender]=true;\n', '}\n', '\n', 'function manipulateSecret() public payable onlyPlayers{\n', '\trequire (msg.value >= 0.01 ether);\n', '\tif(msg.sender!=owner || unlockSecret()){\n', '\t    uint256 amount = 0;\n', '        msg.sender.transfer(amount);\n', '\t}\n', '}\n', '\n', 'function unlockSecret() private returns(bool){\n', '    bytes32 hash = keccak256(blockhash(block.number-1));\n', '    uint256 secret = uint256(hash);\n', '        if(secret%5==0){\n', '            winner = msg.sender;\n', '            return true;\n', '        }\n', '        else{\n', '            return false;\n', '        }\n', '    }\n', '\n', 'function callFirstTarget () public payable onlyPlayers {\n', '\trequire (msg.value >= 0.005 ether);\n', '\tfirstTarget.call.value(msg.value)();\n', '}\n', '\n', 'function callSecondTarget () public payable onlyPlayers {\n', '\trequire (msg.value >= 0.005 ether);\n', '\tsecondTarget.call.value(msg.value)();\n', '}\n', '\n', 'function setSeed (uint256 _index, uint256 _value) public payable onlyPlayers {\n', '\tseed[_index] = _value;\n', '}\n', '\t\n', 'function addSeed (uint256 _add) public payable onlyPlayers {\n', '\tseed.length = _add;\n', '}\n', '\n', 'function guessSeed (uint256 _seed) public payable onlyPlayers returns(uint256) {\n', '\treturn (_seed / (seed[0]*seed[1]));\n', '\tif((_seed / (seed[0]*seed[1])) == secret) {\n', '\t\towner = winner;\n', '\t}\n', '}\n', '\n', 'function checkSecret () public payable onlyPlayers returns(bool) {\n', '    require(msg.value >= 0.01 ether);\n', '    if(msg.value == secret){\n', '        return true;\n', '    }\n', '}\n', '\n', 'function winPrize() public payable onlyOwner {\n', '\towner.call.value(1 wei)();\n', '}\n', '\n', 'function claimPrize() public payable onlyWinner {\n', '\twinner.transfer(address(this).balance);\n', '}\n', '\n', '//fallback function\n', '\n', 'function() public payable{\n', '\t}\n', '}']
['// by nightman\n', '// winner gets the contract balance\n', '// 0.02 to play\n', '\n', '\n', 'pragma solidity ^0.4.23;\n', '\n', 'contract DrainMe {\n', '\n', '//constants\n', '\n', 'address public winner = 0x0;\n', 'address public owner;\n', 'address public firstTarget = 0x461ec7309F187dd4650EE6b4D25D93c922d7D56b;\n', 'address public secondTarget = 0x1C3E062c77f09fC61550703bDd1D59842C22c766;\n', 'address[] public players;\n', '\n', 'mapping(address=>bool) approvedPlayers;\n', '\n', 'uint256 public secret;\n', 'uint256[] public seed = [951828771,158769871220];\n', 'uint256[] public balance;\n', '\n', '//constructor\n', '\n', 'function DranMe() public payable{\n', '\towner = msg.sender;\n', '}\n', '\n', '//modifiers\n', '\n', 'modifier onlyOwner() {\n', '    require(msg.sender == owner);\n', '    _;\n', '}\n', '\n', 'modifier onlyWinner() {\n', '    require(msg.sender == winner);\n', '    _;\n', '}\n', '\n', 'modifier onlyPlayers() {\n', '    require(approvedPlayers[msg.sender]);\n', '    _;\n', '}\n', '\n', '//functions\n', '\n', 'function getLength() public constant returns(uint256) {\n', '\treturn seed.length;\n', '}\n', '\n', 'function setSecret(uint256 _secret) public payable onlyOwner{\n', '\tsecret = _secret;\n', '}\n', '\n', 'function getPlayerCount() public constant returns(uint256) {\n', '\treturn players.length;\n', '}\n', '\n', 'function getPrize() public constant returns(uint256) {\n', '\treturn address(this).balance;\n', '}\n', '\n', 'function becomePlayer() public payable{\n', '\trequire(msg.value >= 0.02 ether);\n', '\tplayers.push(msg.sender);\n', '\tapprovedPlayers[msg.sender]=true;\n', '}\n', '\n', 'function manipulateSecret() public payable onlyPlayers{\n', '\trequire (msg.value >= 0.01 ether);\n', '\tif(msg.sender!=owner || unlockSecret()){\n', '\t    uint256 amount = 0;\n', '        msg.sender.transfer(amount);\n', '\t}\n', '}\n', '\n', 'function unlockSecret() private returns(bool){\n', '    bytes32 hash = keccak256(blockhash(block.number-1));\n', '    uint256 secret = uint256(hash);\n', '        if(secret%5==0){\n', '            winner = msg.sender;\n', '            return true;\n', '        }\n', '        else{\n', '            return false;\n', '        }\n', '    }\n', '\n', 'function callFirstTarget () public payable onlyPlayers {\n', '\trequire (msg.value >= 0.005 ether);\n', '\tfirstTarget.call.value(msg.value)();\n', '}\n', '\n', 'function callSecondTarget () public payable onlyPlayers {\n', '\trequire (msg.value >= 0.005 ether);\n', '\tsecondTarget.call.value(msg.value)();\n', '}\n', '\n', 'function setSeed (uint256 _index, uint256 _value) public payable onlyPlayers {\n', '\tseed[_index] = _value;\n', '}\n', '\t\n', 'function addSeed (uint256 _add) public payable onlyPlayers {\n', '\tseed.length = _add;\n', '}\n', '\n', 'function guessSeed (uint256 _seed) public payable onlyPlayers returns(uint256) {\n', '\treturn (_seed / (seed[0]*seed[1]));\n', '\tif((_seed / (seed[0]*seed[1])) == secret) {\n', '\t\towner = winner;\n', '\t}\n', '}\n', '\n', 'function checkSecret () public payable onlyPlayers returns(bool) {\n', '    require(msg.value >= 0.01 ether);\n', '    if(msg.value == secret){\n', '        return true;\n', '    }\n', '}\n', '\n', 'function winPrize() public payable onlyOwner {\n', '\towner.call.value(1 wei)();\n', '}\n', '\n', 'function claimPrize() public payable onlyWinner {\n', '\twinner.transfer(address(this).balance);\n', '}\n', '\n', '//fallback function\n', '\n', 'function() public payable{\n', '\t}\n', '}']
