['pragma solidity ^0.4.23;\n', '\n', 'library SafeMath {\n', '  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n', '    if (a == 0) {\n', '      return 0;\n', '    }\n', '\n', '    c = a * b;\n', '    assert(c / a == b);\n', '    return c;\n', '  }\n', '\n', '  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    return a / b;\n', '  }\n', '\n', '  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    assert(b <= a);\n', '    return a - b;\n', '  }\n', '\n', '  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n', '    c = a + b;\n', '    assert(c >= a);\n', '    return c;\n', '  }\n', '}\n', '\n', 'interface Token {\n', '    function transfer(address _to, uint256 _value) external;\n', '}\n', '\n', 'contract NerotokenSale{\n', '\n', '    using SafeMath for uint256;\n', '    \n', '    Token public tokenReward;\n', '    address public creator;\n', '    address public owner = 0x99C4EF0a180C19e929452e94972AA60cAc1b0B7D;\n', '\n', '    uint256 public price;\n', '    uint256 public startDate;\n', '    uint256 public endDate;\n', '\n', '    modifier isCreator() {\n', '        require(msg.sender == creator);\n', '        _;\n', '    }\n', '\n', '    event FundTransfer(address backer, uint amount, bool isContribution);\n', '\n', '    constructor() public {\n', '        creator = msg.sender;\n', '        startDate = 1532943398;\n', '        endDate = 1538351999;\n', '        price = 10000;\n', '        tokenReward = Token(0xecea1d051a5c3339983ecc2dbdc3f38a7f52c636);\n', '    }\n', '\n', '    function setOwner(address _owner) isCreator public {\n', '        owner = _owner;      \n', '    }\n', '\n', '    function setCreator(address _creator) isCreator public {\n', '        creator = _creator;      \n', '    }\n', '\n', '    function setStartDate(uint256 _startDate) isCreator public {\n', '        startDate = _startDate;      \n', '    }\n', '\n', '    function setEndtDate(uint256 _endDate) isCreator public {\n', '        endDate = _endDate;      \n', '    }\n', '    \n', '    function setPrice(uint256 _price) isCreator public {\n', '        price = _price;      \n', '    }\n', '\n', '    function setToken(address _token) isCreator public {\n', '        tokenReward = Token(_token);      \n', '    }\n', '\n', '    function sendToken(address _to, uint256 _value) isCreator public {\n', '        tokenReward.transfer(_to, _value);      \n', '    }\n', '\n', '    function kill() isCreator public {\n', '        selfdestruct(owner);\n', '    }\n', '\n', '    function () public payable {\n', '        require(msg.value > 70000000000000000);\n', '        require(now > startDate);\n', '        require(now < endDate);\n', '        uint256 amount = msg.value.mul(price); \n', '       \n', '        tokenReward.transfer(msg.sender, amount);\n', '        emit FundTransfer(msg.sender, amount, true);\n', '        owner.transfer(msg.value);\n', '    }\n', '}']