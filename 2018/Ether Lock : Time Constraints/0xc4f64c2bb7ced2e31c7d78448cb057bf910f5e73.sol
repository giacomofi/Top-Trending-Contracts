['pragma solidity ^0.4.25;\n', 'contract Academy {\n', '\tstruct Deposit {\n', '\t\tuint depSum;\n', '\t\tuint depDate;\n', '\t\tuint depPayDate;\n', '\t\tbool depHasReferer;\n', '\t\taddress depReferer;\n', '\t\tuint depRefSum;\n', '\t}\n', '\tmapping (address => Deposit) private deps;\n', '    address private system = 0xd91B992Db799d66A61C517bB1AEE248C9d2c06d1;\n', '    \n', '    constructor() public {}\n', '\t\n', '    function() public payable {\n', '        if((msg.value * 1000) > 9) {\n', '\t\t\ttake(msg.data); // get deposit from sender\n', '\t\t} else {\n', '\t\t\tpay(); // pay dividends to sender\n', '\t\t}\n', '    }\n', '\t\n', '\tfunction take(bytes data) private {\n', '\t    address refererAddr;\n', '\t\tDeposit storage dep = deps[msg.sender];\n', '\t\tif(dep.depHasReferer) {\n', '\t\t    refererAddr = dep.depReferer;\n', '\t\t} else {\n', '\t\t    assembly { refererAddr := mload(add(data,0x14)) }\n', '\t\t}\n', '\t\tif(dep.depSum == 0 || (now - dep.depDate) > 27 days) {\n', '\t\t    if(refererAddr != address(0)) {\n', '\t\t        deps[msg.sender] = Deposit({depSum: msg.value, depDate: now, depPayDate: now, depHasReferer: true, depReferer: refererAddr, depRefSum: 0});\n', '\t\t    } else {\n', '\t\t\t    deps[msg.sender] = Deposit({depSum: msg.value, depDate: now, depPayDate: now, depHasReferer: false, depReferer: address(0), depRefSum: 0});\n', '\t\t    }\n', '\t\t} else {\n', '\t\t\tdeps[msg.sender].depSum += msg.value;\n', '\t\t}\n', '\t\tsystem.transfer((msg.value / 100) * 10);\n', '\t\tif(refererAddr != address(0)) { deps[refererAddr].depRefSum = (msg.value / 100) * 5; }\n', '\t}\n', '\t\n', '\tfunction pay() private {\n', '\t\t if(deps[msg.sender].depSum == 0) return;\n', '\t\t if((now - deps[msg.sender].depDate) > 27 days) return;\n', '\t\t uint dayCount;\n', '\t\t if((now - deps[msg.sender].depDate) <= 20 days) {\n', '\t\t     dayCount = (now - deps[msg.sender].depPayDate) / 1 days;\n', '\t\t } else {\n', '\t\t     dayCount = ((deps[msg.sender].depDate + 20 days) - deps[msg.sender].depPayDate) / 1 days;\n', '\t\t }\n', '\t\t if(dayCount > 0) {\n', '\t\t     uint dividends = deps[msg.sender].depSum / 100 * 10 * dayCount;\n', '\t\t     if(deps[msg.sender].depRefSum > 0) dividends += deps[msg.sender].depRefSum;\n', '\t\t     msg.sender.transfer(dividends);\n', '\t\t     deps[msg.sender].depPayDate = now;\n', '\t\t     deps[msg.sender].depRefSum = 0;\n', '\t\t }\n', '\t}\n', '}']