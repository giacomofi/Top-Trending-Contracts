['pragma solidity ^0.4.21;\n', '\n', 'contract iWhitelist {\n', '    mapping(address => bool) public isWhitelisted;\n', '}\n', '\n', 'contract iDeposit {\n', '    struct Deposit {\n', '        uint256 amount;         // 32 byte\n', '        address beneficiary;    // 20 byte\n', '        uint64 time;            // 8 byte\n', '        bool cleared;           // 1 bit\n', '    }\n', '    uint256 public transactionCount;\n', '    mapping (uint256 => Deposit) public transactions;\n', '    iWhitelist public whitelist;\n', '}\n', '\n', '/**\n', ' * @title EthealHelper\n', ' * @author thesved, viktor.tabori at etheal.com\n', ' * @notice Helper to forward transactions\n', ' */\n', 'contract EthealHelper {\n', '    function getTx(address _deposit, uint256 i) view public returns (uint256 amount, address beneficiary, uint64 time, bool cleared) {\n', '        return iDeposit(_deposit).transactions(i);\n', '    }\n', '    \n', '    function forwardable(address _deposit) view external returns (uint256[] ids) {\n', '        iDeposit deposit = iDeposit(_deposit);\n', '        uint256 _a = 0;\n', '        address _b = 0x0;\n', '        uint256 _t = 0;\n', '        bool _c = false;\n', '        uint256 i = 0;\n', '        uint256 results = 0;\n', '        uint256 txs = deposit.transactionCount();\n', '        uint256[] memory _ids = new uint256[](txs);\n', '\n', '        // search in contributors\n', '        for (i = 0; i < txs; i++) {\n', '            (_a, _b, _t, _c) = getTx(_deposit, i);\n', '            if (!_c && deposit.whitelist().isWhitelisted(_b)) {\n', '                _ids[results] = i;\n', '                results++;\n', '            }\n', '        }\n', '\n', '        ids = new uint256[](results);\n', '        for (i = 0; i < results; i++) {\n', '            ids[i] = _ids[i];\n', '        }\n', '\n', '        return ids;\n', '    }\n', '}']