['pragma solidity ^0.4.14;\n', '\n', 'contract WONO_ICO {\n', '    uint closed;\n', '    struct Deposit { address buyer; uint amount; }\n', '    uint refundDate;\n', '    address fiduciary = msg.sender;\n', '    Deposit[] Deposits;\n', '    mapping (address => uint) total;\n', '\n', '    function() public payable { }\n', '    \n', '    function init(uint date)\n', '    {\n', '        refundDate = date;\n', '    }\n', '\n', '    function deposit()\n', '    public payable {\n', '        if (msg.value >= 0.5 ether && msg.sender == tx.origin)\n', '        {\n', '            Deposit newDeposit;\n', '            newDeposit.buyer = msg.sender;\n', '            newDeposit.amount = msg.value;\n', '            Deposits.push(newDeposit);\n', '            total[msg.sender] += msg.value;\n', '        }\n', '        if (this.balance >= 50 ether)\n', '        {\n', '            closed = now;\n', '        }\n', '    }\n', '\n', '    function refund(uint amount)\n', '    public {\n', '        if (total[msg.sender] >= amount && amount > 0)\n', '        {\n', '            if (now >= refundDate && closed == 0)\n', '            {\n', '                msg.sender.transfer(amount);\n', '            }\n', '        }\n', '    }\n', '    \n', '    function close()\n', '    public {\n', '        if (msg.sender == fiduciary)\n', '        {\n', '            closed = now;\n', '            msg.sender.transfer(this.balance);\n', '        }\n', '    }\n', '}']