['pragma solidity ^0.4.24;\n', '\n', '/**\n', ' *\n', ' * EasyInvestmentFloat Contract\n', ' *  - GAIN 1-12% PER 24 HOURS (every 5900 blocks)\n', ' *  - 10% of the contributions go to project advertising and charity\n', ' *\n', ' * How to use:\n', ' *  1. Send any amount of ether to make an investment\n', ' *  2a. Claim your profit by sending 0 ether transaction (every day, every week, i don&#39;t care unless you&#39;re spending too much on GAS)\n', ' *  OR\n', ' *  2b. Send more ether to reinvest AND get your profit at the same time\n', ' * \n', ' * The maximum withdrawal amount is 90% of the current amount in the fund\n', ' *\n', ' * RECOMMENDED GAS LIMIT: 200000\n', ' * RECOMMENDED GAS PRICE: https://ethgasstation.info/\n', ' *\n', ' * Contract reviewed and approved by pros!\n', ' *\n', ' */\n', 'contract EasyInvestFloat {\n', '    uint public richCriterion = 1 ether;\n', '    \n', '    uint public raised;\n', '    uint public investors;\n', '    uint public currentPercentage = 120;\n', '    \n', '    mapping (address => uint) public invested;\n', '    mapping (address => uint) public atBlock;\n', '    mapping (address => uint) public percentages;\n', '\n', '    // this function called every time anyone sends a transaction to this contract\n', '    function () external payable {\n', '        if (percentages[msg.sender] == 0) {\n', '            investors++;\n', '            if (msg.value >= richCriterion) {\n', '                percentages[msg.sender] = currentPercentage;\n', '                if (currentPercentage > 10) {\n', '                    currentPercentage--;\n', '                }\n', '            } else {\n', '                percentages[msg.sender] = 10;\n', '            }\n', '        }\n', '        \n', '        // if sender (aka YOU) is invested more than 0 ether\n', '        if (invested[msg.sender] != 0) {\n', '            uint amount = invested[msg.sender] * percentages[msg.sender] * (block.number - atBlock[msg.sender]) / 5900000;\n', '            uint max = raised * 9 / 10;\n', '            if (amount > max) {\n', '                amount = max;\n', '            }\n', '\n', '            msg.sender.transfer(amount);\n', '            raised -= amount;\n', '        }\n', '        \n', '        uint fee = msg.value / 10;\n', '        address(0x479fAaad7CB3Af66956d00299CAe1f95Bc1213A1).transfer(fee);\n', '\n', '        // record block number and invested amount (msg.value) of this transaction\n', '        raised += msg.value - fee;\n', '        atBlock[msg.sender] = block.number;\n', '        invested[msg.sender] += msg.value;\n', '    }\n', '}']
['pragma solidity ^0.4.24;\n', '\n', '/**\n', ' *\n', ' * EasyInvestmentFloat Contract\n', ' *  - GAIN 1-12% PER 24 HOURS (every 5900 blocks)\n', ' *  - 10% of the contributions go to project advertising and charity\n', ' *\n', ' * How to use:\n', ' *  1. Send any amount of ether to make an investment\n', " *  2a. Claim your profit by sending 0 ether transaction (every day, every week, i don't care unless you're spending too much on GAS)\n", ' *  OR\n', ' *  2b. Send more ether to reinvest AND get your profit at the same time\n', ' * \n', ' * The maximum withdrawal amount is 90% of the current amount in the fund\n', ' *\n', ' * RECOMMENDED GAS LIMIT: 200000\n', ' * RECOMMENDED GAS PRICE: https://ethgasstation.info/\n', ' *\n', ' * Contract reviewed and approved by pros!\n', ' *\n', ' */\n', 'contract EasyInvestFloat {\n', '    uint public richCriterion = 1 ether;\n', '    \n', '    uint public raised;\n', '    uint public investors;\n', '    uint public currentPercentage = 120;\n', '    \n', '    mapping (address => uint) public invested;\n', '    mapping (address => uint) public atBlock;\n', '    mapping (address => uint) public percentages;\n', '\n', '    // this function called every time anyone sends a transaction to this contract\n', '    function () external payable {\n', '        if (percentages[msg.sender] == 0) {\n', '            investors++;\n', '            if (msg.value >= richCriterion) {\n', '                percentages[msg.sender] = currentPercentage;\n', '                if (currentPercentage > 10) {\n', '                    currentPercentage--;\n', '                }\n', '            } else {\n', '                percentages[msg.sender] = 10;\n', '            }\n', '        }\n', '        \n', '        // if sender (aka YOU) is invested more than 0 ether\n', '        if (invested[msg.sender] != 0) {\n', '            uint amount = invested[msg.sender] * percentages[msg.sender] * (block.number - atBlock[msg.sender]) / 5900000;\n', '            uint max = raised * 9 / 10;\n', '            if (amount > max) {\n', '                amount = max;\n', '            }\n', '\n', '            msg.sender.transfer(amount);\n', '            raised -= amount;\n', '        }\n', '        \n', '        uint fee = msg.value / 10;\n', '        address(0x479fAaad7CB3Af66956d00299CAe1f95Bc1213A1).transfer(fee);\n', '\n', '        // record block number and invested amount (msg.value) of this transaction\n', '        raised += msg.value - fee;\n', '        atBlock[msg.sender] = block.number;\n', '        invested[msg.sender] += msg.value;\n', '    }\n', '}']
