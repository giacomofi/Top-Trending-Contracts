['pragma solidity ^0.4.11;\n', '\n', 'library SafeMath {\n', '    \n', '  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    if (a == 0) {\n', '      return 0;\n', '    }\n', '    uint256 c = a * b;\n', '    assert(c / a == b);\n', '    return c;\n', '  }\n', '\n', '  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    uint256 c = a / b;\n', '    return c;\n', '  }\n', '\n', '  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    assert(b <= a);\n', '    return a - b;\n', '  }\n', '\n', '  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    uint256 c = a + b;\n', '    assert(c >= a);\n', '    return c;\n', '  }\n', '}\n', '\n', '\n', 'interface SKWInterface {\n', '     \n', '    function transfer(address _to, uint256 _value) external returns (bool success);\n', '\n', '}\n', '\n', 'contract SKWVesting3 {\n', '    \n', '    using SafeMath for uint256;\n', '    \n', '    address public _beneficiary = 0x0;//受益地址\n', '    \n', '    uint256 public unLockTime_1;\n', '    \n', '    uint256 public unLockTime_2;\n', '    \n', '    uint256 public unLockTime_3;\n', '    \n', '    uint256 public unLockTime_4;\n', '    \n', '    uint256 public unLockTime_5;\n', '    \n', '    uint256 public unLockTime_6;\n', '    \n', '    uint256 public released;//释放数量 \n', '    \n', '    uint256 public totalBalance;//所有数量 \n', '    \n', '    bool public test = false;\n', '    \n', '    SKWInterface constant _token = SKWInterface(0x007ac2F589eb9d4Fe1cEA9f46B5f4f52DaB73dd4);\n', '    \n', '    event Released(uint256 amount);\n', '    \n', '    event TsetReleased(uint256 amount);\n', '    \n', '    constructor() public {\n', '       _beneficiary = 0x5CcB3AD9Cc3dcc7D8Bda0F1BF21f273F498F645A;\n', '       unLockTime_1 = 1543075200;//2018-11-25 00:00:00\n', '       unLockTime_2 = 1545667200;//2018-12-25 00:00:00\n', '       unLockTime_3 = 1548345600;//2019-1-25 00:00:00\n', '       unLockTime_4 = 1551024000;//2019-2-25 00:00:00\n', '       unLockTime_5 = 1553443200;//2019-3-25 00:00:00\n', '       unLockTime_6 = 1556121600;//2019-4-25 00:00:00\n', '       totalBalance = 5000000000000000;// 50000000.00000000 8个0\n', '       released = 0;\n', '    }\n', '    \n', '    function release() public {//释放\n', '        uint256 unreleased = releasableAmount();\n', '        require(unreleased > 0);\n', '        released = released.add(unreleased);\n', '        _token.transfer(_beneficiary, unreleased);\n', '        emit Released(unreleased);\n', '    }\n', '    \n', '    function releasableAmount() public view returns (uint256){\n', '        uint num = getUnLockNum();\n', '        if(num > 0 ){\n', '            uint256 currentBalance = totalBalance.div(6).mul(num) - released;\n', '            return currentBalance;\n', '        }else{\n', '            return 0;\n', '        }\n', '    }\n', '    \n', '    function getUnLockNum() public view returns (uint){\n', '        uint256 n = now;\n', '        if(n < unLockTime_1){\n', '            return 0;\n', '        }else if(n >= unLockTime_1 && n < unLockTime_2){\n', '            return 1;\n', '        }else if(n >= unLockTime_2 && n < unLockTime_3){\n', '            return 2;\n', '        }else if(n >= unLockTime_3 && n < unLockTime_4){\n', '            return 3;\n', '        }else if(n >= unLockTime_4 && n < unLockTime_5){\n', '            return 4;\n', '        }else if(n >= unLockTime_5 && n < unLockTime_6){\n', '            return 5;\n', '        }else {\n', '            return 6;\n', '        }\n', '    }\n', '    \n', '    function testRelease() public {//释放\n', '        require(!test);\n', '        uint256 unreleased = 1000000;\n', '        test = true;\n', '        _token.transfer(_beneficiary, unreleased);\n', '        emit TsetReleased(unreleased);\n', '    }\n', '    \n', '}']