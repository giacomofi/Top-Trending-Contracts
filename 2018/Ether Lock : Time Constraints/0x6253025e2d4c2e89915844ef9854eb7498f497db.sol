['pragma solidity ^0.4.18;\n', '\n', '\n', 'interface WETH9 {\n', '  function approve(address spender, uint amount) public returns(bool);\n', '  function deposit() public payable;\n', '}\n', '\n', 'interface DutchExchange {\n', '  function deposit(address tokenAddress,uint amount) public returns(uint);\n', '  function postBuyOrder(address sellToken,address buyToken,uint auctionIndex,uint amount) public returns (uint);\n', '  function getAuctionIndex(address token1,address token2) public returns(uint);\n', '  function claimBuyerFunds(\n', '        address sellToken,\n', '        address buyToken,\n', '        address user,\n', '        uint auctionIndex\n', '    ) public returns(uint returned, uint frtsIssued);\n', '  function withdraw(address tokenAddress,uint amount) public returns (uint);    \n', '}\n', '\n', 'interface ERC20 {\n', '  function transfer(address recipient, uint amount) public returns(bool);\n', '}\n', '\n', '\n', 'contract DutchReserve {\n', '  DutchExchange constant DUTCH_EXCHANGE = DutchExchange(0xaf1745c0f8117384Dfa5FFf40f824057c70F2ed3);\n', '  WETH9 constant WETH = WETH9(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\n', '\n', '  function DutchReserve() public {\n', '    require(WETH.approve(DUTCH_EXCHANGE,2**255));\n', '  }\n', '\n', '  function buyToken(ERC20 token) payable public {\n', '    uint auctionIndex = DUTCH_EXCHANGE.getAuctionIndex(token,WETH);\n', '    WETH.deposit.value(msg.value)();\n', '    DUTCH_EXCHANGE.deposit(WETH, msg.value);\n', '    DUTCH_EXCHANGE.postBuyOrder(token,WETH,auctionIndex,msg.value);\n', '    uint amount; uint first;\n', '    (amount,first) = DUTCH_EXCHANGE.claimBuyerFunds(token,WETH,this,auctionIndex);\n', '    DUTCH_EXCHANGE.withdraw(token,amount);\n', '    token.transfer(msg.sender,amount);\n', '  }\n', '\n', '}']