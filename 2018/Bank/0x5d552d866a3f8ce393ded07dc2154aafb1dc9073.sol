['pragma solidity 0.4.19;\n', '\n', 'contract ERC20Interface {\n', '    function balanceOf(address _owner) public view returns (uint256 balance);\n', '    function transfer(address _to, uint256 _value) public returns (bool success);\n', '}\n', '\n', 'contract FaceterPoolTokensLock {\n', '    address constant RECEIVER = 0x4365e5d6e48bb0a4db93555363aad7989caa9b05;\n', '    ERC20Interface constant FaceterToken = ERC20Interface(0x1ccaa0f2a7210d76e1fdec740d5f323e2e1b1672);\n', '    uint8 public unlockStep;\n', '\n', '    function unlock() public returns(bool) {\n', '        uint unlockAmount = 0;\n', '        // Jan 1, 2019\n', '        if (unlockStep == 0 && now >= 1546300800) {\n', '            unlockAmount = FaceterToken.balanceOf(this);\n', '        }\n', '        if (unlockAmount == 0) {\n', '            return false;\n', '        }\n', '        unlockStep++;\n', '        require(FaceterToken.transfer(RECEIVER, unlockAmount));\n', '        return true;\n', '    }\n', '\n', '    function () public {\n', '        unlock();\n', '    }\n', '\n', '    function recoverTokens(ERC20Interface _token) public returns(bool) {\n', '        // Don&#39;t allow recovering Faceter Token till the end of lock.\n', '        if (_token == FaceterToken && now < 1546300800 && unlockStep != 1) {\n', '            return false;\n', '        }\n', '        return _token.transfer(RECEIVER, _token.balanceOf(this));\n', '    }\n', '}']