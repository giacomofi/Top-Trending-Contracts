['pragma solidity ^0.4.13;\n', '\n', 'interface EtherShare {\n', '    function NewShare(string nickname, bool AllowUpdated, string content);\n', '}\n', '\n', '//Enable user to share information for free (using donation) on Ethereum\n', 'contract EtherShareDonation {\n', '\n', '    EtherShare ES = EtherShare(0xc86bdf9661c62646194ef29b1b8f5fe226e8c97e);\n', '    \n', '    struct oneDonation {\n', '        address donator;\n', '        string nickname;\n', '        uint amount;\n', '    }\n', '    oneDonation[] public donations;\n', '\n', '    function Donate(string nickname) payable public {\n', '        donations.push(oneDonation(msg.sender, nickname, msg.value));\t//record the donation\n', '    }\n', '\n', '    function FreeShare(string nickname, string content) public {\n', '        uint startGasLeft = gasleft();\n', '        ES.NewShare(nickname, false, content); \n', '        uint endGasLeft = gasleft();\n', '        msg.sender.send( tx.gasprice*(startGasLeft-endGasLeft+35000) );\t//return the fee of NewShare, 35000 gas for other transaction fee.\n', '    }\n', '\n', '    //TODO: SenderRecord(), FreeReply(), FreeUpdate()\n', '}']