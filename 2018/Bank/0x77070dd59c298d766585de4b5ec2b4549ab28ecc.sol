['pragma solidity ^0.4.16;\n', '\n', 'interface Token {\n', '    function transfer(address _to, uint256 _value) external;\n', '}\n', '\n', 'contract SealPrivateCrowdsale {\n', '    \n', '    Token public tokenReward;\n', '    address public creator;\n', '    address public owner = 0xD2d67e716D09dCB27F85F0ffa6661E1cd569eC7F;\n', '\n', '    uint256 private price;\n', '\n', '    modifier isCreator() {\n', '        require(msg.sender == creator);\n', '        _;\n', '    }\n', '\n', '    event FundTransfer(address backer, uint amount, bool isContribution);\n', '\n', '    function SealPrivateCrowdsale() public {\n', '        creator = msg.sender;\n', '        price = 10000;\n', '        tokenReward = Token(0xc2B9E65174264159677520d951E543f9235af946);\n', '    }\n', '\n', '    function setOwner(address _owner) isCreator public {\n', '        owner = _owner;      \n', '    }\n', '\n', '    function setCreator(address _creator) isCreator public {\n', '        creator = _creator;      \n', '    }\n', '\n', '    function setPrice(uint256 _price) isCreator public {\n', '        price = _price;      \n', '    }\n', '\n', '    function setToken(address _token) isCreator public {\n', '        tokenReward = Token(_token);      \n', '    }\n', '\n', '    function sendToken(address _to, uint256 _value) isCreator public {\n', '        tokenReward.transfer(_to, _value);      \n', '    }\n', '\n', '    function kill() isCreator public {\n', '        selfdestruct(owner);\n', '    }\n', '\n', '    function () payable public {\n', '        require(msg.value > 0);\n', '        require(now > 1517443200);\n', '        uint256 amount = msg.value * price;\n', '        tokenReward.transfer(msg.sender, amount);\n', '        FundTransfer(msg.sender, amount, true);\n', '        owner.transfer(msg.value);\n', '    }\n', '}']