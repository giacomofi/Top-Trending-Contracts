['pragma solidity ^0.4.25;\n', '\n', 'contract Splitter {\n', '    address[] public addrs;\n', '    uint256[] public shares;\n', '    uint256 public denom;\n', '\n', '    constructor(address[] _addrs, uint256[] _shares, uint256 _denom) public {\n', '        addrs = _addrs;\n', '        shares = _shares;\n', '        denom = _denom;\n', '    }\n', '    \n', '    function () payable public {\n', '        uint256 val = msg.value;\n', '        for (uint i = 0; i < addrs.length; i++) {\n', '            addrs[i].transfer(val * shares[i] / denom);\n', '        }\n', '    }\n', '}']
['pragma solidity ^0.4.25;\n', '\n', 'contract Splitter {\n', '    address[] public addrs;\n', '    uint256[] public shares;\n', '    uint256 public denom;\n', '\n', '    constructor(address[] _addrs, uint256[] _shares, uint256 _denom) public {\n', '        addrs = _addrs;\n', '        shares = _shares;\n', '        denom = _denom;\n', '    }\n', '    \n', '    function () payable public {\n', '        uint256 val = msg.value;\n', '        for (uint i = 0; i < addrs.length; i++) {\n', '            addrs[i].transfer(val * shares[i] / denom);\n', '        }\n', '    }\n', '}']
