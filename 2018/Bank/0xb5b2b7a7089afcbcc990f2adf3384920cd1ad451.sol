['pragma solidity ^0.4.23;\n', '\n', 'contract Ownable {\n', '    address public owner;\n', '\n', '    constructor() public {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    modifier onlyOwner() {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '    \n', '    function withdraw() public onlyOwner{\n', '        owner.transfer(address(this).balance);\n', '    }\n', '\n', '}\n', '\n', '\n', 'contract MagicBox is Ownable {\n', '    uint256 public cancelFee = 10 finney;\n', '\n', '    function setCancelFee(uint256 _fee) public onlyOwner{\n', '        cancelFee = _fee;\n', '    }\n', '    \n', '    function transfer(address _to,uint256 _amount) public payable{\n', '        require(_to != address(0));\n', '        require(msg.value>=_amount);\n', '        _to.transfer(_amount);\n', '    }\n', '    \n', '    function cancelTx() public payable{\n', '        require(msg.value>=cancelFee);\n', '    }\n', '    \n', '    function plain() public payable{\n', '    }\n', '    \n', '    function() public payable{\n', '    }\n', '\n', '}']
['pragma solidity ^0.4.23;\n', '\n', 'contract Ownable {\n', '    address public owner;\n', '\n', '    constructor() public {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    modifier onlyOwner() {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '    \n', '    function withdraw() public onlyOwner{\n', '        owner.transfer(address(this).balance);\n', '    }\n', '\n', '}\n', '\n', '\n', 'contract MagicBox is Ownable {\n', '    uint256 public cancelFee = 10 finney;\n', '\n', '    function setCancelFee(uint256 _fee) public onlyOwner{\n', '        cancelFee = _fee;\n', '    }\n', '    \n', '    function transfer(address _to,uint256 _amount) public payable{\n', '        require(_to != address(0));\n', '        require(msg.value>=_amount);\n', '        _to.transfer(_amount);\n', '    }\n', '    \n', '    function cancelTx() public payable{\n', '        require(msg.value>=cancelFee);\n', '    }\n', '    \n', '    function plain() public payable{\n', '    }\n', '    \n', '    function() public payable{\n', '    }\n', '\n', '}']
