['pragma solidity ^0.4.19;\n', '\n', 'contract SIMPLE_PIGGY_BANK\n', '{\n', '    address creator = msg.sender;\n', '    \n', '    mapping (address => uint) public Bal;\n', '    \n', '    uint public MinSum = 1 ether;\n', '    \n', '    function() \n', '    public \n', '    payable\n', '    {\n', '        Bal[msg.sender]+=msg.value;\n', '    }  \n', '    \n', '    function Collect(uint _am)\n', '    public\n', '    payable\n', '    {\n', '        if(Bal[msg.sender]>=MinSum && _am<=Bal[msg.sender])\n', '        {\n', '            msg.sender.call.value(_am);\n', '            Bal[msg.sender]-=_am;\n', '        }\n', '    }\n', '    \n', '    function Break()\n', '    public\n', '    payable\n', '    {\n', '        if(msg.sender==creator && this.balance>= MinSum)\n', '        {\n', '            selfdestruct(msg.sender);\n', '        }\n', '    }\n', '}']