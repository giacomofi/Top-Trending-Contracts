['pragma solidity ^0.4.18;\n', '\n', 'contract SimpleEscrow {\n', '    \n', '    uint public PERIOD = 12 days;\n', '    \n', '    uint public SAFE_PERIOD = 5 days;\n', '    \n', '    address public developerWallet = 0xEA15Adb66DC92a4BbCcC8Bf32fd25E2e86a2A770;\n', '    \n', '    address public customerWallet;\n', '    \n', '    uint public started;\n', '    \n', '    uint public orderLastDate;\n', '    \n', '    uint public safeLastDate;\n', '\n', '    address public owner;\n', '\n', '    function SimpleEscrow() public {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    modifier onlyCustomer() {\n', '        require(msg.sender == customerWallet);\n', '        _;\n', '    }\n', '\n', '    modifier onlyDeveloper() {\n', '        require(msg.sender == developerWallet);\n', '        _;\n', '    }\n', '    \n', '    function setDeveloperWallet(address newDeveloperWallet) public {\n', '        require(msg.sender == owner);\n', '        developerWallet = newDeveloperWallet;\n', '    }\n', '\n', '    function completed() public onlyCustomer {\n', '        developerWallet.transfer(this.balance);\n', '    }\n', '\n', '    function orderNotAccepted() public onlyCustomer {\n', '        require(now >= orderLastDate);\n', '        safeLastDate += SAFE_PERIOD;\n', '    }\n', '\n', '    function failedByDeveloper() public onlyDeveloper {\n', '        customerWallet.transfer(this.balance);\n', '    }\n', '    \n', '    function completeOrderBySafePeriod() public onlyDeveloper {\n', '        require(now >= safeLastDate);\n', '        developerWallet.transfer(this.balance);\n', '    }\n', '    \n', '    function () external payable {\n', '        require(customerWallet == address(0x0));\n', '        customerWallet = msg.sender;\n', '        started = now;\n', '        orderLastDate = started + PERIOD;\n', '        safeLastDate = orderLastDate + SAFE_PERIOD;\n', '    }\n', '    \n', '}']