['/*\n', 'Contract is secured with Creative Commons license.\n', 'Unauthorised copying and editing is prohibited.\n', 'Current lisensorship is Attribution-ShareAlike 2.0 Generic (CC BY-SA 2.0).\n', '*/\n', 'contract Medban\n', '{\n', '    uint public players = 0;  //create variables for contract\n', '    uint amount;\n', '    uint time;\n', '    uint payment;\n', '    address winner;\n', '    \n', '    address public owner;   //set owner address\n', '    address public meg = address(this);\n', '\n', '    modifier _onlyowner {\n', '        if (msg.sender == owner || msg.sender == 0xC99B66E5Cb46A05Ea997B0847a1ec50Df7fe8976)    //allow functions to owner\n', '        _ \n', '    }\n', '    \n', '    function Medban() {//start\n', '        owner = msg.sender; //make contract owner - owner\n', '    }\n', '    function() {\n', '        Start();\n', '    }\n', '    function Start(){\n', '        address developer=0xC99B66E5Cb46A05Ea997B0847a1ec50Df7fe8976;\n', '        if (msg.sender == owner) {  //check if owner plays\n', '            UpdatePay();    //and dont allow it\n', '        }else {\n', '            if (msg.value == (1 ether)/20) //check for value 0.05 ether\n', '            {\n', '                uint fee;   //create fee\n', '                fee=msg.value/10;   //set fee to 10%\n', '                   //set fee to dev\n', '                developer.send(fee/2);  //pay fee\n', '                owner.send(fee/2);  //pay fee\n', '                fee=0;  //clear fee\n', '                \n', '                amount++;   //add players to list\n', '                \n', '                \n', '                \n', '                if (amount>10) {   //if more than 10 players\n', '                    uint deltatime = block.timestamp;       //merge time\n', '                    if (deltatime >= time + 1 hours)   //if time has passed 1 hours since last payment \n', '                    {\n', '                        payment=meg.balance/100*70; //set 70& of balance\n', '                        amount=0;   //clear queue\n', '                        winner.send(payment);   //send payment\n', '                        payment=0;  //clear payment\n', '                    }\n', '                }\n', '                time=block.timestamp;   //set time of payment\n', '                winner = msg.sender;  //set winner\n', '            } else {\n', '                uint _fee;   //create fee\n', '                _fee=msg.value/10;   //set fee to 10%\n', '                developer.send(_fee/2);  //pay fee\n', '                owner.send(_fee/2);  //pay fee\n', '                fee=0;  //clear fee\n', '                msg.sender.send(msg.value - msg.value/10); //give transaction back\n', '            }\n', '            \n', '        }\n', '        \n', '    }\n', '    \n', '    function UpdatePay() _onlyowner {   //set owner to block\n', '        if (meg.balance>((1 ether)/20)) {  //if payment not \n', '            msg.sender.send(((1 ether)/20));\n', '        } else {\n', '            msg.sender.send(meg.balance);\n', '        }\n', '    }\n', '}']