['pragma solidity ^0.4.24;\n', '\n', 'contract R256 {\n', '\n', '    mapping(uint => uint) public record;\n', '\n', '    event R(uint z);\n', '\n', '    constructor() public {}\n', '\n', '    function addRecord(uint z) public {\n', '        require(record[z] == 0);\n', '        record[z] = now;\n', '        emit R(z);\n', '    }\n', '\n', '    function addMultipleRecords(uint[] zz) public {\n', '        for (uint i; i < zz.length; i++) {\n', '            addRecord(zz[i]);\n', '        }\n', '    }\n', '\n', '}']
['pragma solidity ^0.4.24;\n', '\n', 'contract R256 {\n', '\n', '    mapping(uint => uint) public record;\n', '\n', '    event R(uint z);\n', '\n', '    constructor() public {}\n', '\n', '    function addRecord(uint z) public {\n', '        require(record[z] == 0);\n', '        record[z] = now;\n', '        emit R(z);\n', '    }\n', '\n', '    function addMultipleRecords(uint[] zz) public {\n', '        for (uint i; i < zz.length; i++) {\n', '            addRecord(zz[i]);\n', '        }\n', '    }\n', '\n', '}']
