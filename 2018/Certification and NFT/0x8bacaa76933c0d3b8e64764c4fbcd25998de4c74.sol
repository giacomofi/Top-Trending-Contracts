['pragma solidity ^0.4.20;\n', '\n', 'contract Vault {\n', '    mapping (address=>uint256) public eth_stored;\n', '    address public owner;\n', '    address public primary_wallet;\n', '    \n', '    constructor (address main_wallet) public {\n', '        owner = msg.sender;\n', '        primary_wallet = main_wallet;\n', '    }\n', '    \n', '    function () public payable {\n', '        eth_stored[msg.sender] += msg.value;\n', '    }\n', '    \n', '    modifier owner_only{\n', '        require(msg.sender==owner);\n', '        _;\n', '    }\n', '    \n', '    function withdraw_all () public owner_only {\n', '        primary_wallet.transfer(address(this).balance);\n', '    }\n', '    \n', '    function kill () public owner_only {\n', '        selfdestruct(primary_wallet);\n', '    }\n', '}']