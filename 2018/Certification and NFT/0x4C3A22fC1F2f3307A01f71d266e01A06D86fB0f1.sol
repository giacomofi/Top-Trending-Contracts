['pragma solidity ^0.4.18;\n', '\n', '\n', 'contract Ownable {\n', '  address public owner;\n', '\n', '  constructor() public {\n', '    owner = msg.sender;\n', '  }\n', '\n', '  modifier onlyOwner() {\n', '    require(msg.sender == owner);\n', '    _;\n', '  }\n', '}\n', '\n', '\n', 'contract Hold is Ownable {\n', '    uint public deadline = 1546230000;\n', '    uint public amountRaised;\n', '\n', '    event GoalReached(address recipient, uint totalAmountRaised);\n', '    event FundTransfer(address backer, uint amount, bool isContribution);\n', '\n', '\n', '    function () payable public {\n', '        uint amount = msg.value;\n', '        amountRaised += amount;\n', '    }\n', '\n', '    modifier afterDeadline() { if (now >= deadline) _; }\n', '\n', '    function safeWithdrawal() public afterDeadline {\n', '        if (owner.send(amountRaised)) {\n', '               emit FundTransfer(owner, amountRaised, false);\n', '        }\n', '    }\n', '}']