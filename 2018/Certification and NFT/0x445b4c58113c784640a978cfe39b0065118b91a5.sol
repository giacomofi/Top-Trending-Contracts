['// Created using ICO Wizard https://github.com/poanetwork/ico-wizard by POA Network \n', 'pragma solidity ^0.4.11;\n', '\n', '\n', '/**\n', ' * @title Ownable\n', ' * @dev The Ownable contract has an owner address, and provides basic authorization control\n', ' * functions, this simplifies the implementation of "user permissions".\n', ' */\n', 'contract Ownable {\n', '  address public owner;\n', '\n', '\n', '  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n', '\n', '\n', '  /**\n', '   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n', '   * account.\n', '   */\n', '  function Ownable() {\n', '    owner = msg.sender;\n', '  }\n', '\n', '\n', '  /**\n', '   * @dev Throws if called by any account other than the owner.\n', '   */\n', '  modifier onlyOwner() {\n', '    require(msg.sender == owner);\n', '    _;\n', '  }\n', '\n', '\n', '  /**\n', '   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n', '   * @param newOwner The address to transfer ownership to.\n', '   */\n', '  function transferOwnership(address newOwner) onlyOwner public {\n', '    require(newOwner != address(0));\n', '    OwnershipTransferred(owner, newOwner);\n', '    owner = newOwner;\n', '  }\n', '\n', '}\n', '\n', '\n', '\n', '\n', '/**\n', ' * Registry of contracts deployed from ICO Wizard.\n', ' */\n', 'contract Registry is Ownable {\n', '  mapping (address => address[]) public deployedContracts;\n', '\n', '  event Added(address indexed sender, address indexed deployAddress);\n', '\n', '  function add(address deployAddress) public {\n', '    deployedContracts[msg.sender].push(deployAddress);\n', '    Added(msg.sender, deployAddress);\n', '  }\n', '\n', '  function count(address deployer) constant returns (uint) {\n', '    return deployedContracts[deployer].length;\n', '  }\n', '}']