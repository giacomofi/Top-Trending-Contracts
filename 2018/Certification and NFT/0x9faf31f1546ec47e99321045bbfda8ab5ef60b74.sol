['// ECE 398 SC - Smart Contracts and Blockchain Security\n', '// http://soc1024.ece.illinois.edu/teaching/ece398sc/spring2018/\n', '// March 28, 2018\n', '\n', '// This is an extra credit smart contract Pinata. It contains a puzzle \n', '// involving hash functions (you should be able to solve it pretty easily)\n', '\n', 'pragma solidity ^0.4.21;\n', 'contract TestContract {\n', '    function SHA256(string s) public pure returns(bytes32) {\n', '        return(sha256(s));\n', '    }\n', '\n', '    mapping ( bytes32 => uint ) public amount;\n', '    \n', '    // Pay for a preimage\n', '    function commitTo(bytes32 hash) public payable {\n', '        amount[hash] = msg.value;\n', '    }\n', '    \n', '    // Claim a hash preimage\n', '    \n', '    // On mainnet, for the class Spring 2018,\n', '    // The contract&#39;s address is 0x9faf31f1546ec47e99321045bbfda8ab5ef60b74\n', '    //\n', '    // A value has already been committed to ($10 of ETH)\n', '    // The is the hash of a string, of the form "word1 word2 word3", where\n', '    // word1,2,3 are randomly chosen words from the BIP39 word list.\n', '    // Call the view\n', '    // "amount(0xee67868e1463033b8cf103066b1d476b1698ca9a3e60c068430c520d2725b246)"\n', '    // to check whether it has been taken or not!\n', '    // \n', '    // The first person to solve it wins the prize! The game is not too fun\n', '    // for anyone else unfortunately :(\n', '    \n', '    event BountyClaimed(string note, uint);\n', '    function claim(string s) public payable {\n', '        emit BountyClaimed("bounty claimed for eth amount:", amount[sha256(s)]);\n', '        msg.sender.transfer( amount[sha256(s)] );\n', '    }\n', '\n', '}']
['// ECE 398 SC - Smart Contracts and Blockchain Security\n', '// http://soc1024.ece.illinois.edu/teaching/ece398sc/spring2018/\n', '// March 28, 2018\n', '\n', '// This is an extra credit smart contract Pinata. It contains a puzzle \n', '// involving hash functions (you should be able to solve it pretty easily)\n', '\n', 'pragma solidity ^0.4.21;\n', 'contract TestContract {\n', '    function SHA256(string s) public pure returns(bytes32) {\n', '        return(sha256(s));\n', '    }\n', '\n', '    mapping ( bytes32 => uint ) public amount;\n', '    \n', '    // Pay for a preimage\n', '    function commitTo(bytes32 hash) public payable {\n', '        amount[hash] = msg.value;\n', '    }\n', '    \n', '    // Claim a hash preimage\n', '    \n', '    // On mainnet, for the class Spring 2018,\n', "    // The contract's address is 0x9faf31f1546ec47e99321045bbfda8ab5ef60b74\n", '    //\n', '    // A value has already been committed to ($10 of ETH)\n', '    // The is the hash of a string, of the form "word1 word2 word3", where\n', '    // word1,2,3 are randomly chosen words from the BIP39 word list.\n', '    // Call the view\n', '    // "amount(0xee67868e1463033b8cf103066b1d476b1698ca9a3e60c068430c520d2725b246)"\n', '    // to check whether it has been taken or not!\n', '    // \n', '    // The first person to solve it wins the prize! The game is not too fun\n', '    // for anyone else unfortunately :(\n', '    \n', '    event BountyClaimed(string note, uint);\n', '    function claim(string s) public payable {\n', '        emit BountyClaimed("bounty claimed for eth amount:", amount[sha256(s)]);\n', '        msg.sender.transfer( amount[sha256(s)] );\n', '    }\n', '\n', '}']
