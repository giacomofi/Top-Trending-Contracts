['pragma solidity ^0.4.23;\n', '\n', 'contract guess_coin{\n', '    super_rand public rand_addr;\n', '    uint256 win;\n', '    address public owner;\n', '    \n', '    constructor(address _addr) public {\n', '        rand_addr = super_rand(_addr);\n', '        win = 200;\n', '        owner = msg.sender;\n', '    }\n', '    \n', '    //if rand%2 == true pay 2*value\n', '    function() public payable {\n', '        if( rand_addr.s_rand( msg.sender, msg.value) ){\n', '            msg.sender.transfer(msg.value * win/100);\n', '        }\n', '    }\n', '    function set_rand_addr(address _addr, uint256 _win) public {\n', '        require( msg.sender == owner);\n', '        rand_addr = super_rand(_addr);\n', '        win = _win;\n', '    }\n', '    function get_eth() public {\n', '        require( msg.sender == owner);\n', '        owner.transfer(address(this).balance);\n', '    }\n', '}\n', '\n', 'contract super_rand{\n', '    function s_rand( address p_addr, uint256 _thisbalance) public returns( bool);\n', '}']
['pragma solidity ^0.4.23;\n', '\n', 'contract guess_coin{\n', '    super_rand public rand_addr;\n', '    uint256 win;\n', '    address public owner;\n', '    \n', '    constructor(address _addr) public {\n', '        rand_addr = super_rand(_addr);\n', '        win = 200;\n', '        owner = msg.sender;\n', '    }\n', '    \n', '    //if rand%2 == true pay 2*value\n', '    function() public payable {\n', '        if( rand_addr.s_rand( msg.sender, msg.value) ){\n', '            msg.sender.transfer(msg.value * win/100);\n', '        }\n', '    }\n', '    function set_rand_addr(address _addr, uint256 _win) public {\n', '        require( msg.sender == owner);\n', '        rand_addr = super_rand(_addr);\n', '        win = _win;\n', '    }\n', '    function get_eth() public {\n', '        require( msg.sender == owner);\n', '        owner.transfer(address(this).balance);\n', '    }\n', '}\n', '\n', 'contract super_rand{\n', '    function s_rand( address p_addr, uint256 _thisbalance) public returns( bool);\n', '}']
