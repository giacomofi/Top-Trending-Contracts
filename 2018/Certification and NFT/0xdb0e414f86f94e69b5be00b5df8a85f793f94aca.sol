['pragma solidity ^0.4.13;\n', '\n', 'interface RiskMgmtInterface {\n', '\n', '    // METHODS\n', '    // PUBLIC VIEW METHODS\n', '\n', '    /// @notice Checks if the makeOrder price is reasonable and not manipulative\n', '    /// @param orderPrice Price of Order\n', '    /// @param referencePrice Reference price obtained through PriceFeed contract\n', '    /// @param sellAsset Asset (as registered in Asset registrar) to be sold\n', '    /// @param buyAsset Asset (as registered in Asset registrar) to be bought\n', '    /// @param sellQuantity Quantity of sellAsset to be sold\n', '    /// @param buyQuantity Quantity of buyAsset to be bought\n', '    /// @return If makeOrder is permitted\n', '    function isMakePermitted(\n', '        uint orderPrice,\n', '        uint referencePrice,\n', '        address sellAsset,\n', '        address buyAsset,\n', '        uint sellQuantity,\n', '        uint buyQuantity\n', '    ) view returns (bool);\n', '\n', '    /// @notice Checks if the takeOrder price is reasonable and not manipulative\n', '    /// @param orderPrice Price of Order\n', '    /// @param referencePrice Reference price obtained through PriceFeed contract\n', '    /// @param sellAsset Asset (as registered in Asset registrar) to be sold\n', '    /// @param buyAsset Asset (as registered in Asset registrar) to be bought\n', '    /// @param sellQuantity Quantity of sellAsset to be sold\n', '    /// @param buyQuantity Quantity of buyAsset to be bought\n', '    /// @return If takeOrder is permitted\n', '    function isTakePermitted(\n', '        uint orderPrice,\n', '        uint referencePrice,\n', '        address sellAsset,\n', '        address buyAsset,\n', '        uint sellQuantity,\n', '        uint buyQuantity\n', '    ) view returns (bool);\n', '}\n', '\n', 'contract NoRiskMgmt is RiskMgmtInterface {\n', '\n', '    // PUBLIC VIEW METHODS\n', '\n', '    /// @notice Checks if the makeOrder price is reasonable and not manipulative\n', '    /// @param orderPrice Price of Order\n', '    /// @param referencePrice Reference price obtained through PriceFeed contract\n', '    /// @param sellAsset Asset (as registered in Asset registrar) to be sold\n', '    /// @param buyAsset Asset (as registered in Asset registrar) to be bought\n', '    /// @param sellQuantity Quantity of sellAsset to be sold\n', '    /// @param buyQuantity Quantity of buyAsset to be bought\n', '    /// @return If makeOrder is permitted\n', '    function isMakePermitted(\n', '        uint orderPrice,\n', '        uint referencePrice,\n', '        address sellAsset,\n', '        address buyAsset,\n', '        uint sellQuantity,\n', '        uint buyQuantity\n', '    )\n', '        view\n', '        returns (bool)\n', '    {\n', '        return true; // For testing purposes\n', '    }\n', '\n', '    /// @notice Checks if the makeOrder price is reasonable and not manipulative\n', '    /// @param orderPrice Price of Order\n', '    /// @param referencePrice Reference price obtained through PriceFeed contract\n', '    /// @param sellAsset Asset (as registered in Asset registrar) to be sold\n', '    /// @param buyAsset Asset (as registered in Asset registrar) to be bought\n', '    /// @param sellQuantity Quantity of sellAsset to be sold\n', '    /// @param buyQuantity Quantity of buyAsset to be bought\n', '    /// @return If takeOrder is permitted\n', '    function isTakePermitted(\n', '        uint orderPrice,\n', '        uint referencePrice,\n', '        address sellAsset,\n', '        address buyAsset,\n', '        uint sellQuantity,\n', '        uint buyQuantity\n', '    )\n', '        view\n', '        returns (bool)\n', '    {\n', '        return true; // For testing purposes\n', '    }\n', '}']