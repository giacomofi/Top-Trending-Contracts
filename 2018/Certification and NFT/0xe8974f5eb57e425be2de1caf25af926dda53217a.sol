['pragma solidity ^0.4.16;\n', '\n', 'interface token {\n', '    function transfer(address receiver, uint amount) public;\n', '}\n', '\n', 'contract Crowdsale {\n', '    address public beneficiary;\n', '    uint public price;\n', '    bool crowdsaleClosed = false;\n', '    token public tokenReward;\n', '    mapping(address => uint256) public balanceOf;\n', '\n', '    event FundTransfer(address backer, uint amount, bool isContribution);\n', '\n', '    /**\n', '     * Constrctor function\n', '     *\n', '     * Setup the owner\n', '     */\n', '    function Crowdsale () public {\n', '        beneficiary = 0x3d9285A330A350ae57F466c316716A1Fb4D3773d;\n', '        price = 0.002437 * 1 ether;\n', '        tokenReward = token(0x6278ae7b2954ba53925EA940165214da30AFa261);\n', '    }\n', '\n', '    /**\n', '     * Fallback function\n', '     *\n', '     * The function without name is the default function that is called whenever anyone sends funds to a contract\n', '     */\n', '    function () public payable {\n', '        require(!crowdsaleClosed);\n', '        uint amount = msg.value;\n', '        balanceOf[msg.sender] += amount;\n', '        tokenReward.transfer(msg.sender, (amount  * 1 ether) / price);\n', '        FundTransfer(msg.sender, amount, true);\n', '    }\n', '    \n', '    function changePrice(uint newprice) public {\n', '         if (beneficiary == msg.sender) {\n', '             price = newprice;\n', '         }\n', '    }\n', '\n', '    function safeWithdrawal(uint amount) public {\n', '\n', '        if (beneficiary == msg.sender) {\n', '            if (beneficiary.send(amount)) {\n', '                FundTransfer(beneficiary, amount, false);\n', '            }\n', '        }\n', '    }\n', '    \n', '    function safeTokenWithdrawal(uint amount) public {\n', '         if (beneficiary == msg.sender) {\n', '             tokenReward.transfer(msg.sender, amount);\n', '        }\n', '    }\n', '    \n', '     function crowdsaleStop() public {\n', '         if (beneficiary == msg.sender) {\n', '            crowdsaleClosed = true;\n', '        }\n', '    }\n', '    \n', '    function crowdsaleStart() public {\n', '         if (beneficiary == msg.sender) {\n', '            crowdsaleClosed = false;\n', '        }\n', '    }\n', '}']
['pragma solidity ^0.4.16;\n', '\n', 'interface token {\n', '    function transfer(address receiver, uint amount) public;\n', '}\n', '\n', 'contract Crowdsale {\n', '    address public beneficiary;\n', '    uint public price;\n', '    bool crowdsaleClosed = false;\n', '    token public tokenReward;\n', '    mapping(address => uint256) public balanceOf;\n', '\n', '    event FundTransfer(address backer, uint amount, bool isContribution);\n', '\n', '    /**\n', '     * Constrctor function\n', '     *\n', '     * Setup the owner\n', '     */\n', '    function Crowdsale () public {\n', '        beneficiary = 0x3d9285A330A350ae57F466c316716A1Fb4D3773d;\n', '        price = 0.002437 * 1 ether;\n', '        tokenReward = token(0x6278ae7b2954ba53925EA940165214da30AFa261);\n', '    }\n', '\n', '    /**\n', '     * Fallback function\n', '     *\n', '     * The function without name is the default function that is called whenever anyone sends funds to a contract\n', '     */\n', '    function () public payable {\n', '        require(!crowdsaleClosed);\n', '        uint amount = msg.value;\n', '        balanceOf[msg.sender] += amount;\n', '        tokenReward.transfer(msg.sender, (amount  * 1 ether) / price);\n', '        FundTransfer(msg.sender, amount, true);\n', '    }\n', '    \n', '    function changePrice(uint newprice) public {\n', '         if (beneficiary == msg.sender) {\n', '             price = newprice;\n', '         }\n', '    }\n', '\n', '    function safeWithdrawal(uint amount) public {\n', '\n', '        if (beneficiary == msg.sender) {\n', '            if (beneficiary.send(amount)) {\n', '                FundTransfer(beneficiary, amount, false);\n', '            }\n', '        }\n', '    }\n', '    \n', '    function safeTokenWithdrawal(uint amount) public {\n', '         if (beneficiary == msg.sender) {\n', '             tokenReward.transfer(msg.sender, amount);\n', '        }\n', '    }\n', '    \n', '     function crowdsaleStop() public {\n', '         if (beneficiary == msg.sender) {\n', '            crowdsaleClosed = true;\n', '        }\n', '    }\n', '    \n', '    function crowdsaleStart() public {\n', '         if (beneficiary == msg.sender) {\n', '            crowdsaleClosed = false;\n', '        }\n', '    }\n', '}']
