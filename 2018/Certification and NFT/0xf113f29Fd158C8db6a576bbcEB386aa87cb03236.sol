['pragma solidity ^0.4.18;\n', '\n', 'contract ForeignToken {\n', '    function balanceOf(address _owner) public constant returns (uint256);\n', '}\n', '\n', 'contract Owned {\n', '    address public owner;\n', '    address public newOwner;\n', '\n', '    event OwnershipTransferred(address indexed _from, address indexed _to);\n', '\n', '    function Owned() public {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    modifier onlyOwner {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '\n', '    function transferOwnership(address _newOwner) public onlyOwner {\n', '        newOwner = _newOwner;\n', '    }\n', '\n', '    function acceptOwnership() public {\n', '        require(msg.sender == newOwner);\n', '        emit OwnershipTransferred(owner, newOwner);\n', '        owner = newOwner;\n', '        newOwner = address(0);\n', '    }\n', '}\n', '\n', 'contract AMLOveCoinVoting is Owned {\n', '    address private _tokenAddress;\n', '    bool public votingAllowed = false;\n', '\n', '    mapping (address => bool) yaVoto;\n', '    uint256 public votosTotales;\n', '    uint256 public donacionCruzRoja;\n', '    uint256 public donacionTeleton;\n', '    uint256 public inclusionEnExchange;\n', '\n', '    function AMLOveCoinVoting(address tokenAddress) public {\n', '        _tokenAddress = tokenAddress;\n', '        votingAllowed = true;\n', '    }\n', '\n', '    function enableVoting() onlyOwner public {\n', '        votingAllowed = true;\n', '    }\n', '\n', '    function disableVoting() onlyOwner public {\n', '        votingAllowed = false;\n', '    }\n', '\n', '    function vote(uint option) public {\n', '        require(votingAllowed);\n', '        require(option < 3);\n', '        require(!yaVoto[msg.sender]);\n', '        yaVoto[msg.sender] = true;\n', '        ForeignToken token = ForeignToken(_tokenAddress);\n', '        uint256 amount = token.balanceOf(msg.sender);\n', '        require(amount > 0);\n', '        votosTotales += amount;\n', '        if (option == 0){\n', '            donacionCruzRoja += amount;\n', '        } else if (option == 1) {\n', '            donacionTeleton += amount;\n', '        } else if (option == 2) {\n', '            inclusionEnExchange += amount;\n', '        } else {\n', '            assert(false);\n', '        }        \n', '    }\n', '    \n', '    function getStats() public view returns (\n', '        uint256 _votosTotales,\n', '        uint256 _donacionCruzRoja,\n', '        uint256 _donacionTeleton,\n', '        uint256 _inclusionEnExchange)\n', '    {\n', '        return (votosTotales, donacionCruzRoja, donacionTeleton, inclusionEnExchange);\n', '    }\n', '}']