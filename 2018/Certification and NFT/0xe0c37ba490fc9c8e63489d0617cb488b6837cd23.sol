['pragma solidity ^0.4.21;\n', '\n', 'contract primoContratto {\n', '    address private proprietario;\n', '    mapping (uint256 => string) private frasi;\n', '    uint256 private frasiTotali = 0;\n', '    \n', '    function primoContratto() public {\n', '        proprietario = msg.sender;\n', '    }\n', '    \n', '    function aggiungiFrase(string _frase) public returns (uint256) {\n', '        frasi[frasiTotali] = _frase;\n', '        frasiTotali++;\n', '        return frasiTotali-1;\n', '    }\n', '    \n', '    function totaleFrasi() public view returns (uint256) {\n', '        return frasiTotali;\n', '    }\n', '    \n', '    function leggiFrase(uint256 _numeroFrase) public view returns (string) {\n', '        return frasi[_numeroFrase];\n', '    }\n', '    \n', '    function kill() public {\n', '        if (proprietario != msg.sender) return;\n', '        selfdestruct(proprietario);\n', '    }\n', '}']
['pragma solidity ^0.4.21;\n', '\n', 'contract primoContratto {\n', '    address private proprietario;\n', '    mapping (uint256 => string) private frasi;\n', '    uint256 private frasiTotali = 0;\n', '    \n', '    function primoContratto() public {\n', '        proprietario = msg.sender;\n', '    }\n', '    \n', '    function aggiungiFrase(string _frase) public returns (uint256) {\n', '        frasi[frasiTotali] = _frase;\n', '        frasiTotali++;\n', '        return frasiTotali-1;\n', '    }\n', '    \n', '    function totaleFrasi() public view returns (uint256) {\n', '        return frasiTotali;\n', '    }\n', '    \n', '    function leggiFrase(uint256 _numeroFrase) public view returns (string) {\n', '        return frasi[_numeroFrase];\n', '    }\n', '    \n', '    function kill() public {\n', '        if (proprietario != msg.sender) return;\n', '        selfdestruct(proprietario);\n', '    }\n', '}']
