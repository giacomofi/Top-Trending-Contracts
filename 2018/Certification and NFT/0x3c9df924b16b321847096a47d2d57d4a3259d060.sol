['pragma solidity ^0.4.21;\n', '\n', '\n', 'contract HavvenEscrow {\n', '    function numVestingEntries(address account) public returns (uint);\n', '    function getVestingScheduleEntry(address account, uint index) public returns (uint[2]);\n', '}\n', '\n', '\n', 'contract EscrowChecker {\n', '    HavvenEscrow public havven_escrow;\n', '    function EscrowChecker(HavvenEscrow _esc) public {\n', '        havven_escrow = _esc;\n', '    }\n', '\n', '    function checkAccountSchedule(address account)\n', '        public\n', '        view\n', '        returns (uint[16])\n', '    {\n', '        uint[16] memory _result;\n', '        uint schedules = havven_escrow.numVestingEntries(account);\n', '        for (uint i=0; i < schedules; i++) {\n', '            uint[2] memory pair = havven_escrow.getVestingScheduleEntry(account, i);\n', '            _result[i*2] = pair[0];\n', '            _result[i*2 + 1] = pair[1];\n', '        }\n', '        return _result;\n', '    }\n', '}']