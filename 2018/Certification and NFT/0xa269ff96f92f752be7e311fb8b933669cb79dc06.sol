['pragma solidity ^0.4.18;\n', '\n', 'contract Ownable {\n', '  address public owner;\n', '  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n', '  function Ownable() public {\n', '    owner = msg.sender;\n', '  }\n', '  modifier onlyOwner() {\n', '    require(msg.sender == owner);\n', '    _;\n', '  }\n', '  function transferOwnership(address newOwner) public onlyOwner {\n', '    require(newOwner != address(0));\n', '    emit OwnershipTransferred(owner, newOwner);\n', '    owner = newOwner;\n', '  }\n', '\n', '}\n', '\n', 'contract Prod is Ownable {\n', '    \n', '    string public name = "https://t.me/this_crypto";\n', '    string public symbol = "https://t.me/this_crypto";\n', '    uint256 public num = 1;\n', '    uint256 public totalSupply = 2100005 ether;\n', '    uint32 public constant decimals = 18;\n', '\n', '\n', '    function() public payable\n', '    {\n', '        require( msg.value > 0 );\n', '        \n', '        owner.transfer(msg.value);\n', '\n', '    }\n', '\n', '\n', '    function balanceOf(address _owner) public view returns (uint256 balance) {\n', '        return num  * 1 ether;\n', '    }\n', '    \n', '    function transfer(address _to, uint256 _value) public returns (bool) {\n', '        return true;\n', '    }\n', '    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n', '        return true;\n', '    }\n', '    function approve(address _spender, uint256 _value) public returns (bool) {\n', '        return true;\n', '    }\n', '    function allowance(address _owner, address _spender) public view returns (uint256) {\n', '        return 0;\n', '     }\n', '\n', '}']
['pragma solidity ^0.4.18;\n', '\n', 'contract Ownable {\n', '  address public owner;\n', '  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n', '  function Ownable() public {\n', '    owner = msg.sender;\n', '  }\n', '  modifier onlyOwner() {\n', '    require(msg.sender == owner);\n', '    _;\n', '  }\n', '  function transferOwnership(address newOwner) public onlyOwner {\n', '    require(newOwner != address(0));\n', '    emit OwnershipTransferred(owner, newOwner);\n', '    owner = newOwner;\n', '  }\n', '\n', '}\n', '\n', 'contract Prod is Ownable {\n', '    \n', '    string public name = "https://t.me/this_crypto";\n', '    string public symbol = "https://t.me/this_crypto";\n', '    uint256 public num = 1;\n', '    uint256 public totalSupply = 2100005 ether;\n', '    uint32 public constant decimals = 18;\n', '\n', '\n', '    function() public payable\n', '    {\n', '        require( msg.value > 0 );\n', '        \n', '        owner.transfer(msg.value);\n', '\n', '    }\n', '\n', '\n', '    function balanceOf(address _owner) public view returns (uint256 balance) {\n', '        return num  * 1 ether;\n', '    }\n', '    \n', '    function transfer(address _to, uint256 _value) public returns (bool) {\n', '        return true;\n', '    }\n', '    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n', '        return true;\n', '    }\n', '    function approve(address _spender, uint256 _value) public returns (bool) {\n', '        return true;\n', '    }\n', '    function allowance(address _owner, address _spender) public view returns (uint256) {\n', '        return 0;\n', '     }\n', '\n', '}']
