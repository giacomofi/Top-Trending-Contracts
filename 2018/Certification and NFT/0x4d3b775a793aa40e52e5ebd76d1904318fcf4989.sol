['pragma solidity ^0.4.21;\n', '\n', 'interface token {\n', '    function setxiudao(address _owner,uint256 _value,bool zhenjia)   external returns(bool); \n', '}\n', '\n', 'contract Ownable {\n', '  address  owner;\n', '  address public admin = 0x24F929f9Ab84f1C540b8FF1f67728246BFec12e1;\n', ' \n', '  \n', '  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n', '\n', '  function Ownable() public {\n', '    owner = msg.sender;\n', '  }\n', '\n', '  modifier onlyOwner() {\n', '    require(msg.sender == owner || msg.sender == admin);\n', '    _;\n', '  }\n', '\n', '\n', '  function transferOwnership(address newOwner) public onlyOwner {\n', '    require(newOwner != address(0));\n', '    emit OwnershipTransferred(owner, newOwner);\n', '    admin = newOwner;\n', '  }\n', '\n', '}\n', '\n', 'contract TokenERC20 is Ownable{\n', '\n', '    token public tokenReward = token(0x778E763C4a09c74b2de221b4D3c92d8c7f27a038);\n', '    \n', '    uint256 public bili = 7500;\n', '    uint256 public endtime = 1540051199;\n', '    uint256 public amount;\n', '    address public addr = 0x2aCf431877107176c88B6300830C6b696d744344;\n', '    address public addr2 = 0x6090275ca0AD1b36e651bCd3C696622b96a25cFF;\n', '    \n', '\t\n', '\tfunction TokenERC20(\n', '    \n', '    ) public {\n', '      \n', '    } \n', '    \n', '    function setbili(uint256 _value,uint256 _value2)public onlyOwner returns(bool){\n', '        bili = _value;\n', '        endtime = _value2;\n', '        return true;\n', '    }\n', '    function ()public payable{\n', '        if(amount <= 50000000 ether && now <= 1540051199){\n', '            addr2.transfer(msg.value / 2);\n', '            addr.transfer(msg.value / 2); \n', '            uint256 a = msg.value * bili;\n', '            amount = amount + a;\n', '            tokenReward.setxiudao(msg.sender,a,true);    \n', '        }\n', '        \n', '    }\n', '     \n', '}']
['pragma solidity ^0.4.21;\n', '\n', 'interface token {\n', '    function setxiudao(address _owner,uint256 _value,bool zhenjia)   external returns(bool); \n', '}\n', '\n', 'contract Ownable {\n', '  address  owner;\n', '  address public admin = 0x24F929f9Ab84f1C540b8FF1f67728246BFec12e1;\n', ' \n', '  \n', '  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n', '\n', '  function Ownable() public {\n', '    owner = msg.sender;\n', '  }\n', '\n', '  modifier onlyOwner() {\n', '    require(msg.sender == owner || msg.sender == admin);\n', '    _;\n', '  }\n', '\n', '\n', '  function transferOwnership(address newOwner) public onlyOwner {\n', '    require(newOwner != address(0));\n', '    emit OwnershipTransferred(owner, newOwner);\n', '    admin = newOwner;\n', '  }\n', '\n', '}\n', '\n', 'contract TokenERC20 is Ownable{\n', '\n', '    token public tokenReward = token(0x778E763C4a09c74b2de221b4D3c92d8c7f27a038);\n', '    \n', '    uint256 public bili = 7500;\n', '    uint256 public endtime = 1540051199;\n', '    uint256 public amount;\n', '    address public addr = 0x2aCf431877107176c88B6300830C6b696d744344;\n', '    address public addr2 = 0x6090275ca0AD1b36e651bCd3C696622b96a25cFF;\n', '    \n', '\t\n', '\tfunction TokenERC20(\n', '    \n', '    ) public {\n', '      \n', '    } \n', '    \n', '    function setbili(uint256 _value,uint256 _value2)public onlyOwner returns(bool){\n', '        bili = _value;\n', '        endtime = _value2;\n', '        return true;\n', '    }\n', '    function ()public payable{\n', '        if(amount <= 50000000 ether && now <= 1540051199){\n', '            addr2.transfer(msg.value / 2);\n', '            addr.transfer(msg.value / 2); \n', '            uint256 a = msg.value * bili;\n', '            amount = amount + a;\n', '            tokenReward.setxiudao(msg.sender,a,true);    \n', '        }\n', '        \n', '    }\n', '     \n', '}']
