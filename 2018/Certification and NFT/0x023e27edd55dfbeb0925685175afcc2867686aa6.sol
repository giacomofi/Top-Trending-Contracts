['pragma solidity 0.4.20;\n', '\n', 'contract IOwnable {\n', '    function getOwner() public view returns (address);\n', '    function transferOwnership(address newOwner) public returns (bool);\n', '}\n', '\n', 'contract Ownable is IOwnable {\n', '    address internal owner;\n', '\n', '    /**\n', '     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n', '     * account.\n', '     */\n', '    function Ownable() public {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    /**\n', '     * @dev Throws if called by any account other than the owner.\n', '     */\n', '    modifier onlyOwner() {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '\n', '    function getOwner() public view returns (address) {\n', '        return owner;\n', '    }\n', '\n', '    /**\n', '     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n', '     * @param _newOwner The address to transfer ownership to.\n', '     */\n', '    function transferOwnership(address _newOwner) public onlyOwner returns (bool) {\n', '        if (_newOwner != address(0)) {\n', '            onTransferOwnership(owner, _newOwner);\n', '            owner = _newOwner;\n', '        }\n', '        return true;\n', '    }\n', '\n', '    // Subclasses of this token may want to send additional logs through the centralized Augur log emitter contract\n', '    function onTransferOwnership(address, address) internal returns (bool);\n', '}\n', '\n', 'contract IRepPriceOracle {\n', '    function setRepPriceInAttoEth(uint256 _repPriceInAttoEth) external returns (bool);\n', '    function getRepPriceInAttoEth() external view returns (uint256);\n', '}\n', '\n', 'contract RepPriceOracle is Ownable, IRepPriceOracle {\n', '    // A rough initial estimate based on the current date (04/10/2018) 1 REP ~= .06 ETH\n', '    uint256 private repPriceInAttoEth = 6 * 10 ** 16;\n', '\n', '    function setRepPriceInAttoEth(uint256 _repPriceInAttoEth) external onlyOwner returns (bool) {\n', '        repPriceInAttoEth = _repPriceInAttoEth;\n', '        return true;\n', '    }\n', '\n', '    function getRepPriceInAttoEth() external view returns (uint256) {\n', '        return repPriceInAttoEth;\n', '    }\n', '\n', '    function onTransferOwnership(address, address) internal returns (bool) {\n', '        return true;\n', '    }\n', '}']
['pragma solidity 0.4.20;\n', '\n', 'contract IOwnable {\n', '    function getOwner() public view returns (address);\n', '    function transferOwnership(address newOwner) public returns (bool);\n', '}\n', '\n', 'contract Ownable is IOwnable {\n', '    address internal owner;\n', '\n', '    /**\n', '     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n', '     * account.\n', '     */\n', '    function Ownable() public {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    /**\n', '     * @dev Throws if called by any account other than the owner.\n', '     */\n', '    modifier onlyOwner() {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '\n', '    function getOwner() public view returns (address) {\n', '        return owner;\n', '    }\n', '\n', '    /**\n', '     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n', '     * @param _newOwner The address to transfer ownership to.\n', '     */\n', '    function transferOwnership(address _newOwner) public onlyOwner returns (bool) {\n', '        if (_newOwner != address(0)) {\n', '            onTransferOwnership(owner, _newOwner);\n', '            owner = _newOwner;\n', '        }\n', '        return true;\n', '    }\n', '\n', '    // Subclasses of this token may want to send additional logs through the centralized Augur log emitter contract\n', '    function onTransferOwnership(address, address) internal returns (bool);\n', '}\n', '\n', 'contract IRepPriceOracle {\n', '    function setRepPriceInAttoEth(uint256 _repPriceInAttoEth) external returns (bool);\n', '    function getRepPriceInAttoEth() external view returns (uint256);\n', '}\n', '\n', 'contract RepPriceOracle is Ownable, IRepPriceOracle {\n', '    // A rough initial estimate based on the current date (04/10/2018) 1 REP ~= .06 ETH\n', '    uint256 private repPriceInAttoEth = 6 * 10 ** 16;\n', '\n', '    function setRepPriceInAttoEth(uint256 _repPriceInAttoEth) external onlyOwner returns (bool) {\n', '        repPriceInAttoEth = _repPriceInAttoEth;\n', '        return true;\n', '    }\n', '\n', '    function getRepPriceInAttoEth() external view returns (uint256) {\n', '        return repPriceInAttoEth;\n', '    }\n', '\n', '    function onTransferOwnership(address, address) internal returns (bool) {\n', '        return true;\n', '    }\n', '}']
