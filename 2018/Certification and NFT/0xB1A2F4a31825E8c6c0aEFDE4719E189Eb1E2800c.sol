['pragma solidity ^ 0.4.16;\n', '\n', 'contract owned {\n', '    address public owner;\n', '    \n', '    function owned() payable {\n', '        owner = msg.sender;\n', '    }\n', '    modifier onlyOwner {\n', '        require(owner == msg.sender);\n', '        _;\n', '    }\n', '    \n', '    function changeOwner(address _owner) onlyOwner public {\n', '        owner = _owner;\n', '    }\n', '}\n', 'contract Crowdsale is owned {\n', '    \n', '    uint256 public totalSupply;\n', '    mapping (address => uint256) public balanceOf;\n', '    \n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '    \n', '    function Crowdsale() payable owned() {\n', '        totalSupply = 900000000000000000000000000000;\n', '        balanceOf[this] = 1000000000000000000000000;\n', '        balanceOf[owner] = totalSupply - balanceOf[this];\n', '        Transfer(this, owner, balanceOf[owner]);\n', '    }\n', '    \n', '    function () payable {\n', '        require(balanceOf[this] > 0);\n', '        uint256 tokens = 5000000000000000000000 * msg.value / 1000000000000000000;\n', '        if (tokens > balanceOf[this]) {\n', '            tokens = balanceOf[this];\n', '            uint valueWei = tokens * 1000000000000000000 / 5000000000000000000000;\n', '            msg.sender.transfer(msg.value - valueWei);\n', '        }\n', '        require(tokens > 0);\n', '        balanceOf[msg.sender] += tokens;\n', '        balanceOf[this] -= tokens;\n', '        Transfer(this, msg.sender, tokens);\n', '    }\n', '}\n', 'contract Token is Crowdsale {\n', '    \n', "    string  public standard    = 'Token 0.1';\n", "    string  public name        = 'SocCoin';\n", "    string  public symbol      = 'SCN';\n", '    uint8   public decimals    = 18;\n', '    \n', '    function Token() payable Crowdsale() {}\n', '    \n', '    function transfer(address _to, uint256 _value) public {\n', '        require(balanceOf[msg.sender] >= _value);\n', '        balanceOf[msg.sender] -= _value;\n', '        balanceOf[_to] += _value;\n', '        Transfer(msg.sender, _to, _value);\n', '    }\n', '}\n', '\n', 'contract SimpleContract is Token {\n', '    \n', '    function SimpleContract() payable Token() {}\n', '    \n', '    function withdraw() public onlyOwner {\n', '        owner.transfer(this.balance);\n', '    }\n', '    function killme() public onlyOwner {\n', '        selfdestruct(owner);\n', '    }\n', '}']