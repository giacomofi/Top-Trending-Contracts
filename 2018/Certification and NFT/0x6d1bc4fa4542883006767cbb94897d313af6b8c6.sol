['pragma solidity ^0.4.18;\n', '\n', '\n', '/**\n', ' * @title Ownable\n', ' * @dev The Ownable contract has an owner address, and provides basic authorization control\n', ' * functions, this simplifies the implementation of "user permissions".\n', ' */\n', 'contract Ownable {\n', '    address public owner;\n', '\n', '\n', '    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n', '\n', '\n', '    /**\n', '     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n', '     * account.\n', '     */\n', '    function Ownable() public {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    /**\n', '     * @dev Throws if called by any account other than the owner.\n', '     */\n', '    modifier onlyOwner() {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '\n', '    /**\n', '     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n', '     * @param newOwner The address to transfer ownership to.\n', '     */\n', '    function transferOwnership(address newOwner) public onlyOwner {\n', '        require(newOwner != address(0));\n', '        emit OwnershipTransferred(owner, newOwner);\n', '        owner = newOwner;\n', '    }\n', '\n', '}\n', '\n', '\n', '/**\n', ' * @title TREON token sale\n', ' * @dev This contract receives money. Redirects money to the wallet. Verifies the correctness of transactions.\n', ' * @dev Does not produce tokens. All tokens are sent manually, after approval.\n', ' */\n', 'contract TXOsale is Ownable {\n', '\n', '    event ReceiveEther(address indexed from, uint256 value);\n', '\n', '    address public TXOtoken = 0xe3e0CfBb19D46DC6909C6830bfb25107f8bE5Cb7;\n', '\n', '    bool public goalAchieved = false;\n', '\n', '    address public constant wallet = 0x8dA7477d56c90CF2C5b78f36F9E39395ADb2Ae63;\n', '    //  Monday, May 21, 2018 12:00:00 AM\n', '    uint public  constant saleStart = 1526860800;\n', '    // Tuesday, July 17, 2018 11:59:59 PM\n', '    uint public constant saleEnd = 1531871999;\n', '\n', '    function TXOsale() public {\n', '    }\n', '\n', '    /**\n', '    * @dev fallback function\n', '    */\n', '    function() public payable {\n', '        require(now >= saleStart && now <= saleEnd);\n', '        require(!goalAchieved);\n', '        require(msg.value >= 0.1 ether);\n', '        require(msg.value <= 65 ether);\n', '        wallet.transfer(msg.value);\n', '        emit ReceiveEther(msg.sender, msg.value);\n', '    }\n', '\n', '    /**\n', '     * @dev The owner can suspend the sale if the HardCap has been achieved.\n', '     */\n', '    function setGoalAchieved(bool _goalAchieved) public onlyOwner {\n', '        goalAchieved = _goalAchieved;\n', '    }\n', '}']