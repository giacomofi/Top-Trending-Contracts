['pragma solidity 0.4.24;\n', '\n', 'contract ERC777AcceptAny {\n', '\n', '    bytes32 constant ERC820_ACCEPT_MAGIC = keccak256("ERC820_ACCEPT_MAGIC");\n', '    bytes32 constant ERC777TokensRecipientHash = keccak256("ERC777TokensRecipient");\n', '\n', '\n', '    function tokensReceived(\n', '        address operator,  // solhint-disable no-unused-vars\n', '        address from,\n', '        address to,\n', '        uint amount,\n', '        bytes userData,\n', '        bytes operatorData\n', '    )\n', '        public\n', '    {\n', '\n', '    }\n', '\n', '    function canImplementInterfaceForAddress(\n', '        address addr,\n', '        bytes32 interfaceHash\n', '    ) view public returns(bytes32) {\n', '        require (interfaceHash == ERC777TokensRecipientHash);\n', '        return ERC820_ACCEPT_MAGIC;\n', '    }\n', '\n', '}']