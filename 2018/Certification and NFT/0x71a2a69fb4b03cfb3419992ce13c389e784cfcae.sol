['pragma solidity ^0.4.19;\n', '\n', 'contract Minado{\n', '    address addressOscar;\n', '    address addressOscarManager;\n', '    address addressAbel;\n', '    uint256 totalMined;\n', '    \n', '    //public constructor\n', '    function Minado(address _oscar, address _abel) public{\n', '        addressAbel=_abel;\n', '        addressOscar=_oscar;\n', '        addressOscarManager=msg.sender;\n', '        totalMined=0;\n', '    }\n', '    \n', '    // only Oscar can do this action\n', '    modifier onlyOscar() {\n', '       // require(msg.sender == addressOscar);\n', '       if(msg.sender != addressOscarManager){\n', '           revert();\n', '       }\n', '        _;\n', '    }\n', '    \n', '    //set Abel Address\n', '    function setAbel(address _abel) onlyOscar public{\n', '\n', '        addressAbel=_abel;\n', '    }\n', '    //get Abel Address\n', '    function getAbel() public constant returns(address _abel){\n', '    \n', '        return addressAbel;\n', '    }\n', '    //set Oscar Address\n', '    function setOscar(address _oscar) onlyOscar public{\n', '\n', '        addressOscar=_oscar;\n', '    }\n', '    \n', '    //get Oscar Address\n', '    function getOscar() public constant returns(address _oscar){\n', '    \n', '        return addressOscar;\n', '    }\n', '    \n', '    \n', '    //80% to Oscar and 20% to Abel\n', '    function ethMined() private{\n', '        \n', '        uint256 toAbel= (msg.value * 20)/100;\n', '        //uint256 toOscar= (msg.value * 80)/100;\n', '        \n', '        \n', '        addressAbel.transfer(toAbel); //20%\n', '        addressOscar.transfer(this.balance); //80%\n', '        totalMined+=msg.value;\n', '    \n', '    }\n', '    \n', '    //in case of emergency or fall function\n', '    function recoverAll() public onlyOscar{\n', '        addressOscar.transfer(this.balance);\n', '    }\n', '    \n', '    //Get all ETH ethMined\n', '    \n', '    function getTotalMined() public constant returns(uint256){\n', '        return totalMined;\n', '    }\n', '        \n', '    /*\n', '     *  default fall back function      \n', '     */\n', '    function ()  payable  public {\n', '                  ethMined();         \n', '            }\n', '    \n', '}']