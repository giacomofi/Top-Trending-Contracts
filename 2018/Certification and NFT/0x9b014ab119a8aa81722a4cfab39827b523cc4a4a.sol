['pragma solidity ^0.4.19;\n', '\n', '/* solhint-disable no-inline-assembly, indent, state-visibility, avoid-low-level-calls */\n', '\n', 'contract ProxyFactory {\n', '    event ProxyDeployed(address proxyAddress, address targetAddress);\n', '    event ProxiesDeployed(address[] proxyAddresses, address targetAddress);\n', '\n', '    function createManyProxies(uint256 _count, address _target, bytes _data)\n', '    public\n', '    {\n', '        address[] memory proxyAddresses = new address[](_count);\n', '\n', '        for (uint256 i = 0; i < _count; ++i) {\n', '            proxyAddresses[i] = createProxyImpl(_target, _data);\n', '        }\n', '\n', '        ProxiesDeployed(proxyAddresses, _target);\n', '    }\n', '\n', '    function createProxy(address _target, bytes _data)\n', '    public\n', '    returns (address proxyContract)\n', '    {\n', '        proxyContract = createProxyImpl(_target, _data);\n', '\n', '        ProxyDeployed(proxyContract, _target);\n', '    }\n', '\n', '    function createProxyImpl(address _target, bytes _data)\n', '    internal\n', '    returns (address proxyContract)\n', '    {\n', '        assembly {\n', '            let contractCode := mload(0x40) // Find empty storage location using "free memory pointer"\n', '\n', '            mstore(add(contractCode, 0x0b), _target) // Add target address, with a 11 bytes [i.e. 23 - (32 - 20)] offset to later accomodate first part of the bytecode\n', '            mstore(sub(contractCode, 0x09), 0x000000000000000000603160008181600b9039f3600080808080368092803773) // First part of the bytecode, shifted left by 9 bytes, overwrites left padding of target address\n', '            mstore(add(contractCode, 0x2b), 0x5af43d828181803e808314602f57f35bfd000000000000000000000000000000) // Final part of bytecode, offset by 43 bytes\n', '\n', '            proxyContract := create(0, contractCode, 60) // total length 60 bytes\n', '            if iszero(extcodesize(proxyContract)) {\n', '                revert(0, 0)\n', '            }\n', '\n', '        // check if the _data.length > 0 and if it is forward it to the newly created contract\n', '            let dataLength := mload(_data)\n', '            if iszero(iszero(dataLength)) {\n', '                if iszero(call(gas, proxyContract, 0, add(_data, 0x20), dataLength, 0, 0)) {\n', '                    revert(0, 0)\n', '                }\n', '            }\n', '        }\n', '    }\n', '}']
['pragma solidity ^0.4.19;\n', '\n', '/* solhint-disable no-inline-assembly, indent, state-visibility, avoid-low-level-calls */\n', '\n', 'contract ProxyFactory {\n', '    event ProxyDeployed(address proxyAddress, address targetAddress);\n', '    event ProxiesDeployed(address[] proxyAddresses, address targetAddress);\n', '\n', '    function createManyProxies(uint256 _count, address _target, bytes _data)\n', '    public\n', '    {\n', '        address[] memory proxyAddresses = new address[](_count);\n', '\n', '        for (uint256 i = 0; i < _count; ++i) {\n', '            proxyAddresses[i] = createProxyImpl(_target, _data);\n', '        }\n', '\n', '        ProxiesDeployed(proxyAddresses, _target);\n', '    }\n', '\n', '    function createProxy(address _target, bytes _data)\n', '    public\n', '    returns (address proxyContract)\n', '    {\n', '        proxyContract = createProxyImpl(_target, _data);\n', '\n', '        ProxyDeployed(proxyContract, _target);\n', '    }\n', '\n', '    function createProxyImpl(address _target, bytes _data)\n', '    internal\n', '    returns (address proxyContract)\n', '    {\n', '        assembly {\n', '            let contractCode := mload(0x40) // Find empty storage location using "free memory pointer"\n', '\n', '            mstore(add(contractCode, 0x0b), _target) // Add target address, with a 11 bytes [i.e. 23 - (32 - 20)] offset to later accomodate first part of the bytecode\n', '            mstore(sub(contractCode, 0x09), 0x000000000000000000603160008181600b9039f3600080808080368092803773) // First part of the bytecode, shifted left by 9 bytes, overwrites left padding of target address\n', '            mstore(add(contractCode, 0x2b), 0x5af43d828181803e808314602f57f35bfd000000000000000000000000000000) // Final part of bytecode, offset by 43 bytes\n', '\n', '            proxyContract := create(0, contractCode, 60) // total length 60 bytes\n', '            if iszero(extcodesize(proxyContract)) {\n', '                revert(0, 0)\n', '            }\n', '\n', '        // check if the _data.length > 0 and if it is forward it to the newly created contract\n', '            let dataLength := mload(_data)\n', '            if iszero(iszero(dataLength)) {\n', '                if iszero(call(gas, proxyContract, 0, add(_data, 0x20), dataLength, 0, 0)) {\n', '                    revert(0, 0)\n', '                }\n', '            }\n', '        }\n', '    }\n', '}']
