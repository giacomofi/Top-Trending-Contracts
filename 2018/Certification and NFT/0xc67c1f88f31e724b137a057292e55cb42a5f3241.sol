['pragma solidity ^0.4.16;\n', '\n', 'interface token {\n', '    function transfer (address receiver, uint amount) public;\n', '}\n', '\n', 'contract Crowdsale {\n', '    address public beneficiary;\n', '    uint public amountRaised;\n', '\tuint public amountLeft;\n', '    uint public deadline;\n', '    token public tokenReward;\n', '    mapping(address => uint256) public balanceOf;\n', '    bool crowdsaleClosed = false;\n', '\n', '    event GoalReached(address recipient, uint totalAmountRaised);\n', '    event FundTransfer(address backer, uint amount, bool isContribution);\n', '\n', '    /**\n', '     * Constrctor function\n', '     *\n', '     * Setup the owner\n', '     */\n', '    function Crowdsale(\n', '        address teamMultisig,\n', '        uint durationInMinutes,\n', '        address addressOfTokenUsedAsReward\n', '    ) public{\n', '        beneficiary = teamMultisig;\n', '        deadline = now + durationInMinutes * 1 minutes;\n', '        tokenReward = token(addressOfTokenUsedAsReward);\n', '    }\n', '\n', '    /**\n', '     * Fallback function\n', '     *\n', '     * The function without name is the default function that is called whenever anyone sends funds to a contract\n', '     */\n', '    function () payable public{\n', '        require(!crowdsaleClosed);\n', '        uint amount = msg.value;\n', '        balanceOf[msg.sender] += amount;\n', '        amountRaised += amount;\n', '        tokenReward.transfer(msg.sender, amount*10000);\n', '        FundTransfer(msg.sender, amount, true);\n', '\t\tif(beneficiary.send(amount)) \n', '\t\t{\n', '\t\t    FundTransfer(beneficiary, amount, false);\n', '\t\t}\n', '\t\telse\n', '\t\t{\n', '\t\t    amountLeft += amountLeft;\n', '\t\t}\n', '    }\n', '\n', '    modifier afterDeadline() { if (now >= deadline) _; }\n', '\n', '    /**\n', '     * Check if goal was reached\n', '     *\n', '     * Checks if the time limit has been reached and ends the campaign\n', '     */\n', '    function closeCrowdSale() afterDeadline public{\n', '\t    if(beneficiary == msg.sender)\n', '\t    {\n', '            crowdsaleClosed = true;\n', '\t\t}\n', '    }\n', '\n', '\n', '    /**\n', '     * Withdraw the funds\n', '     *\n', '     */\n', '    function safeWithdrawal() afterDeadline public{       \n', '        if (beneficiary == msg.sender&& amountLeft > 0) {\n', '            if (beneficiary.send(amountLeft)) {\n', '                FundTransfer(beneficiary, amountLeft, false);\n', '            } else {\n', '            }\n', '        }\n', '    }\n', '}']