['pragma solidity ^0.4.16;\n', '\n', 'contract IOwned {\n', '\n', '    function owner() public pure returns (address) {\n', '        \n', '    }\n', '\n', '    function transferOwnership(address _newOwner) public;\n', '    function acceptOwnership() public;\n', '    }\n', '\n', 'contract Owned is IOwned {\n', '    address public owner;\n', '    address public newOwner;\n', '    event OwnerUpdate(address _prevOwner, address _newOwner);\n', '\n', '    function Owned() public {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    modifier onlyOwner {\n', '        assert(msg.sender == owner);\n', '        _;\n', '    }\n', '\n', '    function transferOwnership(address _newOwner) public onlyOwner {\n', '        require(_newOwner != owner);\n', '        newOwner = _newOwner;\n', '    }\n', '\n', '\n', '    function acceptOwnership() public {\n', '        require(msg.sender == newOwner);\n', '        OwnerUpdate(owner, newOwner);\n', '        owner = newOwner;\n', '        newOwner = 0x0;\n', '    }\n', '}']