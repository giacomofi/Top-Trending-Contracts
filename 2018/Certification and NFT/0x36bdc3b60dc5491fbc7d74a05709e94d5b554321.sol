['pragma solidity ^0.4.21;\n', '\n', 'contract SFTSEV {\n', '\n', '    string public name = "Smart First Time 7 Way Distributor";\n', '    uint8 public decimals = 18;\n', '    string public symbol = "SFT7";\n', '\n', '    address dev = 0xC96CfB18C39DC02FBa229B6EA698b1AD5576DF4c;//\t10\n', '    address designer = 0x810c4de015a463E8b6AFAFf166f57A2B2F761032;//5\n', '    address media = 0x2deE3DDbE1b0aC0Bb8918de07007B60B264f58D3;//10\n', '    address reserve = 0x76D05E325973D7693Bb854ED258431aC7DBBeDc3;//10\n', '    address partner1 = 0x73BB9A6Ea87Dd4067B39e4eCDBe75E9ffe90c69c;//5\n', '    address partner2 = 0x6c5Cd0e2f4f5958216ef187505b617b3Cf1ed348;//30\n', '    address partner3 = 0x448468d5591c724f5310027b859135d5f6434286;//30\n', '\n', '    function SFTSEV() {\n', '\n', '    }\n', '\n', '    \n', '    function () payable public {\n', '\n', '    }\n', '\n', '    // distribute incoming funds to the 7 addresses based on agreed %\n', '    function withDrawFees() public\n', '    {\n', '        dev.transfer(div(mul(msg.value,1000),10000));\n', '        designer.transfer(div(mul(msg.value,500),10000));\n', '        media.transfer(div(mul(msg.value,1000),10000));\n', '        reserve.transfer(div(mul(msg.value,1000),10000));\n', '        partner1.transfer(div(mul(msg.value,500),10000));\n', '        partner2.transfer(div(mul(msg.value,3000),10000));\n', '        partner3.transfer(div(mul(msg.value,3000),10000));\n', '    }\n', '\n', '    function changeDev (address _receiver) public\n', '    {\n', '        require(msg.sender == dev);\n', '        dev = _receiver;\n', '    }\n', '\n', '    function changeDesigner (address _receiver) public\n', '    {\n', '        require(msg.sender == designer);\n', '        designer = _receiver;\n', '    }\n', '\n', '    function changeMedia (address _receiver) public\n', '    {\n', '        require(msg.sender == media);\n', '        media = _receiver;\n', '    }\n', '\n', '    function changeReserve (address _receiver) public\n', '    {\n', '        require(msg.sender == reserve);\n', '        reserve = _receiver;\n', '    }\n', '\n', '    function changePartner1 (address _receiver) public\n', '    {\n', '        require(msg.sender == partner1);\n', '        partner1 = _receiver;\n', '    }\n', '\n', '    function changePartner2 (address _receiver) public\n', '    {\n', '        require(msg.sender == partner1);\n', '        partner2 = _receiver;\n', '    }\n', '\n', '    function changePartner3 (address _receiver) public\n', '    {\n', '        require(msg.sender == partner1);\n', '        partner3 = _receiver;\n', '    }\n', '\n', '    function mul(uint a, uint b) internal pure returns (uint) {\n', '        uint c = a * b;\n', '        require(a == 0 || c / a == b);\n', '        return c;\n', '    }\n', '\n', '    function div(uint a, uint b) internal pure returns (uint) {\n', '        // assert(b > 0); // Solidity automatically throws when dividing by 0\n', '        uint c = a / b;\n', '        // assert(a == b * c + a % b); // There is no case in which this doesn&#39;t hold\n', '        return c;\n', '    }\n', '}']