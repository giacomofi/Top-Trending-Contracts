['pragma solidity ^0.4.24;\n', '\n', 'contract CryptoFishing {\n', '    \n', '    using SafeMath for uint256;\n', '    \n', '    uint    private lastBonusTime;\n', '    uint256 private rnSeed;\n', '    \n', '    address owner;\n', '    \n', '    event finishFishing(address player, uint256 awardAmount, uint awardType);\n', '    \n', '    constructor() public {\n', '        owner = msg.sender;\n', '    }\n', '    \n', '    modifier isHuman() {\n', '        address _addr = msg.sender;\n', '        uint256 _codeLength;\n', '        \n', '        assembly {_codeLength := extcodesize(_addr)}\n', '        require(_codeLength == 0, "humans only");\n', '        require(tx.origin == msg.sender);\n', '        _;\n', '    }\n', '    \n', '    function randomBonus(uint256 a, uint256 b, uint256 fee) private view returns (uint256) {\n', '        uint256 bonus = randomRange(a, b) * fee / 10;\n', '        return bonus;\n', '    }\n', '    \n', '    function calcBonus(uint8 poolType, uint256 fee) private returns (uint256, uint) {\n', '        uint256 rn = random() % 1000000;\n', '        \n', '        uint256 bonus = 0;\n', '        uint fishId = 0;\n', '        \n', '        randomSeed();\n', '        \n', '        if(poolType == 1) {\n', '            if(rn < 200000) {\n', '                bonus = 0;\n', '                fishId = 0;\n', '            } else if(rn < 400000) {\n', '                bonus = randomBonus(1, 5, fee);\n', '                fishId = 10001;\n', '            } else if(rn < 550000) {\n', '                bonus = randomBonus(6, 10, fee);\n', '                fishId = 10002;\n', '            } else if(rn < 750000) {\n', '                bonus = randomBonus(11, 11, fee);\n', '                fishId = 10003;\n', '            } else if(rn < 878000) {\n', '                bonus = randomBonus(12, 12, fee);\n', '                fishId = 10004;\n', '            } else if(rn < 928000) {\n', '                bonus = randomBonus(13, 13, fee);\n', '                fishId = 10005;\n', '            } else if(rn < 948000) {\n', '                bonus = randomBonus(14, 14, fee);\n', '                fishId = 10006;\n', '            } else if(rn < 958000) {\n', '                bonus = randomBonus(15, 15, fee);\n', '                fishId = 10007;\n', '            } else if(rn < 961000) {\n', '                bonus = randomBonus(16, 20, fee);\n', '                fishId = 10008;\n', '            } else if(rn < 971000) {\n', '                bonus = randomBonus(21, 30, fee);\n', '                fishId = 10009;\n', '            } else if(rn < 981000) {\n', '                bonus = randomBonus(31, 40, fee);\n', '                fishId = 10010;\n', '            } else if(rn < 986000) {\n', '                bonus = randomBonus(41, 50, fee);\n', '                fishId = 10011;\n', '            } else if(rn < 990000) {\n', '                bonus = randomBonus(51, 60, fee);\n', '                fishId = 10012; \n', '            } else if(rn < 994000) {\n', '                bonus = randomBonus(61, 70, fee);\n', '                fishId = 10013; \n', '            } else if(rn < 997000) {\n', '                bonus = randomBonus(71, 80, fee);\n', '                fishId = 10014; \n', '            } else if(rn < 999000) {\n', '                bonus = randomBonus(81, 90, fee);\n', '                fishId = 10015; \n', '            } else if(rn < 1000000) {\n', '                bonus = randomBonus(91, 100, fee);\n', '                fishId = 10016; \n', '            }\n', '        } else if(poolType == 2) {   \n', '            if(rn < 100000) {\n', '                bonus = 0;\n', '                fishId = 0;\n', '            } else if(rn < 300000) {\n', '                bonus = randomBonus(1, 5, fee);\n', '                fishId = 20001;\n', '            } else if(rn < 543000) {\n', '                bonus = randomBonus(6, 10, fee);\n', '                fishId = 20002;\n', '            } else if(rn < 743000) {\n', '                bonus = randomBonus(11, 11, fee);\n', '                fishId = 20003;\n', '            } else if(rn < 893000) {\n', '                bonus = randomBonus(12, 12, fee);\n', '                fishId = 20004;\n', '            } else if(rn < 963000) {\n', '                bonus = randomBonus(13, 13, fee);\n', '                fishId = 20005;\n', '            } else if(rn < 983000) {\n', '                bonus = randomBonus(14, 14, fee);\n', '                fishId = 20006;\n', '            } else if(rn < 993000) {\n', '                bonus = randomBonus(15, 15, fee);\n', '                fishId = 20007;\n', '            } else if(rn < 996000) {\n', '                bonus = randomBonus(16, 20, fee);\n', '                fishId = 20008;\n', '            } else if(rn < 997000) {\n', '                bonus = randomBonus(21, 50, fee);\n', '                fishId = 20009;\n', '            } else if(rn < 998000) {\n', '                bonus = randomBonus(51, 100, fee);\n', '                fishId = 20010;\n', '            } else if(rn < 998800) {\n', '                bonus = randomBonus(101, 150, fee);\n', '                fishId = 20011;\n', '            } else if(rn < 999100) {\n', '                bonus = randomBonus(151, 200, fee);\n', '                fishId = 20012;\n', '            } else if(rn < 999300) {\n', '                bonus = randomBonus(201, 250, fee);\n', '                fishId = 20013;\n', '            } else if(rn < 999500) {\n', '                bonus = randomBonus(251, 300, fee);\n', '                fishId = 20014;\n', '            } else if(rn < 999700) {\n', '                bonus = randomBonus(301, 350, fee);\n', '                fishId = 20015;\n', '            } else if(rn < 999800) {\n', '                bonus = randomBonus(351, 400, fee);\n', '                fishId = 20016;\n', '            } else if(rn < 999900) {\n', '                bonus = randomBonus(401, 450, fee);\n', '                fishId = 20017;\n', '            } else if(rn < 1000000) {\n', '                bonus = randomBonus(451, 500, fee);\n', '                fishId = 20018;\n', '            } \n', '        } else if(poolType == 3) {     \n', '            if(rn <= 100) {\n', '                uint256 total = address(this).balance;\n', '                bonus = total.div(2);\n', '                fishId = 90001;\n', '            } else if(rn < 300000) {\n', '                bonus = randomBonus(1, 5, fee);\n', '                fishId = 30001;\n', '            } else if(rn < 600000) {\n', '                bonus = randomBonus(6, 10, fee);\n', '                fishId = 30002;\n', '            } else if(rn < 800000) {\n', '                bonus = randomBonus(11, 11, fee);\n', '                fishId = 30003;\n', '            } else if(rn < 917900) {\n', '                bonus = randomBonus(12, 12, fee);\n', '                fishId = 30004;\n', '            } else if(rn < 967900) {\n', '                bonus = randomBonus(13, 13, fee);\n', '                fishId = 30005;\n', '            } else if(rn < 982900) {\n', '                bonus = randomBonus(14, 14, fee);\n', '                fishId = 30006;\n', '            } else if(rn < 989900) {\n', '                bonus = randomBonus(15, 15, fee);\n', '                fishId = 30007;\n', '            } else if(rn < 993900) {\n', '                bonus = randomBonus(16, 20, fee);\n', '                fishId = 30008;\n', '            } else if(rn < 995900) {\n', '                bonus = randomBonus(21, 50, fee);\n', '                fishId = 30009;\n', '            } else if(rn < 997900) {\n', '                bonus = randomBonus(51, 100, fee);\n', '                fishId = 30010;\n', '            } else if(rn < 998200) {\n', '                bonus = randomBonus(101, 150, fee);\n', '                fishId = 30011;\n', '            } else if(rn < 998500) {\n', '                bonus = randomBonus(151, 200, fee);\n', '                fishId = 30012;\n', '            } else if(rn < 998700) {\n', '                bonus = randomBonus(201, 250, fee);\n', '                fishId = 30013;\n', '            } else if(rn < 998900) {\n', '                bonus = randomBonus(251, 300, fee);\n', '                fishId = 30014;\n', '            } else if(rn < 999100) {\n', '                bonus = randomBonus(301, 350, fee);\n', '                fishId = 30015;\n', '            } else if(rn < 999200) {\n', '                bonus = randomBonus(351, 400, fee);\n', '                fishId = 30016;\n', '            } else if(rn < 999300) {\n', '                bonus = randomBonus(401, 450, fee);\n', '                fishId = 30017;\n', '            } else if(rn < 999400) {\n', '                bonus = randomBonus(451, 500, fee);\n', '                fishId = 30018;\n', '            } else if(rn < 999500) {\n', '                bonus = randomBonus(501, 550, fee);\n', '                fishId = 30019;\n', '            } else if(rn < 999600) {\n', '                bonus = randomBonus(551, 600, fee);\n', '                fishId = 30020;\n', '            } else if(rn < 999650) {\n', '                bonus = randomBonus(601, 650, fee);\n', '                fishId = 30021;\n', '            } else if(rn < 999700) {\n', '                bonus = randomBonus(651, 700, fee);\n', '                fishId = 30022;\n', '            } else if(rn < 999750) {\n', '                bonus = randomBonus(701, 750, fee);\n', '                fishId = 30023;\n', '            } else if(rn < 999800) {\n', '                bonus = randomBonus(751, 800, fee);\n', '                fishId = 30024;\n', '            } else if(rn < 999850) {\n', '                bonus = randomBonus(801, 850, fee);\n', '                fishId = 30025;\n', '            } else if(rn < 999900) {\n', '                bonus = randomBonus(851, 900, fee);\n', '                fishId = 30026;\n', '            } else if(rn < 999950) {\n', '                bonus = randomBonus(901, 950, fee);\n', '                fishId = 30027;\n', '            } else if(rn < 1000000) {\n', '                bonus = randomBonus(951, 1000, fee);\n', '                fishId = 30028;\n', '            }\n', '        }\n', '        \n', '        return (bonus, fishId);\n', '    }\n', '    \n', '    function randomSeed() private {\n', '        rnSeed += 1;\n', '        uint256 idx = (rnSeed % 200) + 1;\n', '        uint256 bh = uint256(blockhash(block.number - idx));\n', '        rnSeed = bh;\n', '        rnSeed += 1;\n', '    }\n', '        \n', '    function doFishing(uint8 poolType) isHuman() public payable {   \n', '        require(tx.origin == msg.sender);\n', '        \n', '        uint256 fee = msg.value;\n', '        \n', '        require( (poolType == 1 && fee == 0.05 ether)\n', '                  || (poolType == 2 && fee == 0.25 ether)\n', '                  || (poolType == 3 && fee == 0.5 ether)\n', "                  , 'error eth amount');\n", '        \n', '        uint256 reserveFee = fee.div(20);\n', '        owner.transfer(reserveFee);\n', '        \n', '        uint256 bonus;\n', '        uint fishId;\n', '        \n', '        randomSeed(); \n', '        \n', '        (bonus,fishId) = calcBonus(poolType, fee);\n', '        \n', '        uint256 nowBalance = address(this).balance;\n', '        \n', '        uint256 minRemain = uint256(0.1 ether);\n', '\n', '        if(bonus + minRemain > nowBalance) {\n', '            if(nowBalance > minRemain) {\n', '                bonus = nowBalance - minRemain;\n', '            } else {\n', '                bonus = 0;\n', '            }\n', '        }\n', '         \n', '        if(bonus > 0) {\n', '            lastBonusTime   = block.timestamp;\n', '            msg.sender.transfer(bonus);\n', '        }\n', '        \n', '        emit finishFishing(msg.sender, bonus, fishId);\n', '    }\n', '    \n', '    function charge() public payable {\n', '    }\n', '    \n', '    function recycle() public payable {\n', '        require(msg.sender == owner);\n', '        \n', '        uint threeMonth = 3600 * 24 * 30 * 3;\n', '        require(block.timestamp >= lastBonusTime + threeMonth);\n', '        \n', '        owner.transfer(address(this).balance);\n', '    }\n', '    \n', '    function randomRange(uint256 a, uint256 b) private view returns (uint256) {\n', '        assert(a <= b);\n', '        uint256 rn = random();\n', '        return a + rn % (b - a + 1);\n', '    } \n', '    \n', '    function random() private view returns (uint256) {\n', '        return uint256(keccak256(abi.encodePacked(block.timestamp, block.difficulty, rnSeed)));\n', '    }\n', '}\n', '\n', '/**\n', ' * @title SafeMath\n', ' * @dev Math operations with safety checks that throw on error\n', ' */\n', 'library SafeMath {\n', '\n', '  /**\n', '  * @dev Multiplies two numbers, throws on overflow.\n', '  */\n', '  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n', "    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n", "    // benefit is lost if 'b' is also tested.\n", '    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n', '    if (_a == 0) {\n', '      return 0;\n', '    }\n', '\n', '    c = _a * _b;\n', '    assert(c / _a == _b);\n', '    return c;\n', '  }\n', '\n', '  /**\n', '  * @dev Integer division of two numbers, truncating the quotient.\n', '  */\n', '  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n', '    // assert(_b > 0); // Solidity automatically throws when dividing by 0\n', '    // uint256 c = _a / _b;\n', "    // assert(_a == _b * c + _a % _b); // There is no case in which this doesn't hold\n", '    return _a / _b;\n', '  }\n', '\n', '  /**\n', '  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n', '  */\n', '  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n', '    assert(_b <= _a);\n', '    return _a - _b;\n', '  }\n', '\n', '  /**\n', '  * @dev Adds two numbers, throws on overflow.\n', '  */\n', '  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n', '    c = _a + _b;\n', '    assert(c >= _a);\n', '    return c;\n', '  }\n', '}']