['pragma solidity 0.4.24;\n', '\n', 'contract MassSender {\n', '    mapping (uint32 => bool) processedTransactions;\n', '\n', '    function bulkTransferFrom(\n', '        ERC20 token,\n', '        uint32[] payment_ids,\n', '        address[] receivers,\n', '        uint256[] transfers\n', '    ) external {\n', '        require(payment_ids.length == receivers.length);\n', '        require(payment_ids.length == transfers.length);\n', '\n', '        for (uint i = 0; i < receivers.length; i++) {\n', '            if (!processedTransactions[payment_ids[i]]) {\n', '                require(token.transferFrom(msg.sender, receivers[i], transfers[i]));\n', '\n', '                processedTransactions[payment_ids[i]] = true;\n', '            }\n', '        }\n', '    }\n', '}\n', '\n', 'contract ERC20Basic {\n', '    function totalSupply() public view returns (uint256);\n', '    function balanceOf(address who) public view returns (uint256);\n', '    function transfer(address to, uint256 value) public returns (bool);\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '}\n', '\n', 'contract ERC20 is ERC20Basic {\n', '    function allowance(address owner, address spender) public view returns (uint256);\n', '    function transferFrom(address from, address to, uint256 value) public returns (bool);\n', '    function approve(address spender, uint256 value) public returns (bool);\n', '    event Approval(address indexed owner, address indexed spender, uint256 value);\n', '}']