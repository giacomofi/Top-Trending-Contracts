['pragma solidity ^0.4.0;\n', 'contract MessaggioInBottiglia {\n', '    address public owner; //proprietario del contratto\n', '    string public message; //messaggio da lanciare\n', '    string public ownerName;\n', '    \n', '    mapping(address => string[]) public comments; //commenti\n', '    \n', '    modifier onlyOwner() { require(owner == msg.sender); _; }\n', '    \n', '    event newComment(address _sender, string _comment);\n', '    \n', '    constructor() public { //costruttore del contratto\n', '        owner = msg.sender;\n', '        ownerName = "Gaibrasch Tripfud";\n', '        message = "Questo &#232; messaggio di prova, scritto dal un temibile pirata. Aggiungi un commento se vuoi scopire dove si trova il tesoro nascosto.";\n', '    }\n', '    \n', '    function addComment(string commento) public payable returns(bool){ //aggiunge testo al contratto\n', '        comments[msg.sender].push(commento);\n', '        emit newComment(msg.sender, commento);\n', '        return true;\n', '    }\n', '    \n', '    function destroyBottle() public onlyOwner { //distrugge la bottiglia e il messaggio e quindi tutto il contratto\n', '        selfdestruct(owner);\n', '    }\n', '}']
['pragma solidity ^0.4.0;\n', 'contract MessaggioInBottiglia {\n', '    address public owner; //proprietario del contratto\n', '    string public message; //messaggio da lanciare\n', '    string public ownerName;\n', '    \n', '    mapping(address => string[]) public comments; //commenti\n', '    \n', '    modifier onlyOwner() { require(owner == msg.sender); _; }\n', '    \n', '    event newComment(address _sender, string _comment);\n', '    \n', '    constructor() public { //costruttore del contratto\n', '        owner = msg.sender;\n', '        ownerName = "Gaibrasch Tripfud";\n', '        message = "Questo Ã¨ messaggio di prova, scritto dal un temibile pirata. Aggiungi un commento se vuoi scopire dove si trova il tesoro nascosto.";\n', '    }\n', '    \n', '    function addComment(string commento) public payable returns(bool){ //aggiunge testo al contratto\n', '        comments[msg.sender].push(commento);\n', '        emit newComment(msg.sender, commento);\n', '        return true;\n', '    }\n', '    \n', '    function destroyBottle() public onlyOwner { //distrugge la bottiglia e il messaggio e quindi tutto il contratto\n', '        selfdestruct(owner);\n', '    }\n', '}']
