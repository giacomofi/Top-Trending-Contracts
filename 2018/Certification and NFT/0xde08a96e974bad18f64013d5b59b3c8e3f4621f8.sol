['pragma solidity ^0.4.20;\n', '\n', 'contract Mintable {\n', '    \n', '  function mint(address _to, uint256 _amount) public returns (bool);\n', '  \n', '  function transfer(address to, uint256 value) public returns (bool);\n', '  \n', '}\n', '\n', '\n', 'contract SimpleDistributor {\n', '    \n', '  address public owner;\n', '    \n', '  Mintable public token = Mintable(0x552Ed8253f341fb770E8BAdff5A0E0Ee2fd57B43);\n', '    \n', '  function SimpleDistributor() public {\n', '    owner = msg.sender;\n', '  }\n', '   \n', '  function addReceivers(address[] receivers, uint[] balances) public {\n', '    require(msg.sender == owner);\n', '    for(uint i = 0; i < receivers.length; i++) {\n', '      token.mint(this, balances[i]);  \n', '      token.transfer(receivers[i], balances[i]);\n', '    }\n', '  } \n', '  \n', '}']
['pragma solidity ^0.4.20;\n', '\n', 'contract Mintable {\n', '    \n', '  function mint(address _to, uint256 _amount) public returns (bool);\n', '  \n', '  function transfer(address to, uint256 value) public returns (bool);\n', '  \n', '}\n', '\n', '\n', 'contract SimpleDistributor {\n', '    \n', '  address public owner;\n', '    \n', '  Mintable public token = Mintable(0x552Ed8253f341fb770E8BAdff5A0E0Ee2fd57B43);\n', '    \n', '  function SimpleDistributor() public {\n', '    owner = msg.sender;\n', '  }\n', '   \n', '  function addReceivers(address[] receivers, uint[] balances) public {\n', '    require(msg.sender == owner);\n', '    for(uint i = 0; i < receivers.length; i++) {\n', '      token.mint(this, balances[i]);  \n', '      token.transfer(receivers[i], balances[i]);\n', '    }\n', '  } \n', '  \n', '}']
