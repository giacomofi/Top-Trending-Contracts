['pragma solidity ^0.4.20;\n', '\n', '/*************************************************************************************\n', '*\n', '* Transfiere 2018 Database\n', '* Property of FYCMA\n', '* Powered by TICsmart\n', '* Description: \n', '* Smart Contract of attendance at the event and forum Transfiere 2018\n', '*\n', '**************************************************************************************/\n', '\n', 'contract Transfiere2018Database {\n', '  struct Organization {\n', '    string codigo;\n', '    string nombre;\n', '    string tipo;\n', '  }\n', '\n', '  Organization[] internal availableOrgs;\n', '  address public owner = msg.sender;\n', '\n', '  function addOrg(string _codigo, string _nombre, string _tipo) public {\n', '    require(msg.sender == owner);\n', '    availableOrgs.push(Organization(_codigo, _nombre, _tipo));\n', '  }\n', '\n', '  function deleteOrg(string _codigo) public {\n', '    require(msg.sender == owner);\n', '\n', '    for (uint i = 0; i < availableOrgs.length; i++) {\n', '      if (keccak256(availableOrgs[i].codigo) == keccak256(_codigo)) {\n', '        delete availableOrgs[i];\n', '      }\n', '    }\n', '  }\n', '\n', '  function numParticipants() public view returns (uint) {\n', '    return availableOrgs.length;\n', '  }\n', '  \n', '  function checkCode(string _codigo) public view returns (string, string) {\n', '    for (uint i = 0; i < availableOrgs.length; i++) {\n', '      if (keccak256(availableOrgs[i].codigo) == keccak256(_codigo)) {\n', '          return (availableOrgs[i].nombre, availableOrgs[i].tipo);\n', '      }\n', '    }\n', '    \n', '    return (_codigo,"The codigo no existe.");\n', '  }\n', '  \n', '  function destroy() public {\n', '      require(msg.sender == owner);\n', '      selfdestruct(owner);\n', '  }\n', '}']