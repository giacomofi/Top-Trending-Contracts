['pragma solidity 0.4.24;\n', '\n', '/**\n', '\n', '\n', '@title Ownable\n', '@dev The Ownable contract has an owner address, and provides basic authorization control\n', 'functions, this simplifies the implementation of "user permissions".\n', '*/\n', 'contract Ownable {\n', 'address public owner;\n', '\n', '/**\n', '\n', '\n', '@dev The Ownable constructor sets the original owner of the contract to the sender\n', 'account.\n', '*/\n', 'function Ownable() {\n', 'owner = msg.sender;\n', '}\n', '\n', '/**\n', '\n', '\n', '@dev Throws if called by any account other than the owner.\n', '*/\n', 'modifier onlyOwner() {\n', 'if (msg.sender != owner) {\n', 'throw;\n', '}\n', '_;\n', '}\n', '\n', '/**\n', '\n', '\n', '@dev Allows the current owner to transfer control of the contract to a newOwner.\n', '@param newOwner The address to transfer ownership to.\n', '*/\n', 'function transferOwnership(address newOwner) onlyOwner {\n', 'if (newOwner != address(0)) {\n', 'owner = newOwner;\n', '}\n', '}\n', '\n', '}\n', '\n', 'contract Token{\n', 'function transfer(address to, uint value) public returns (bool);\n', 'function decimals() public returns (uint);\n', '}\n', '\n', 'contract Airdrop is Ownable {\n', '\n', 'function multisend(address _tokenAddr, address[] _to, uint256[] _value) public onlyOwner\n', 'returns (bool _success) {\n', 'assert(_to.length == _value.length);\n', 'assert(_to.length <= 150);\n', '\n', 'uint decimals = Token(_tokenAddr).decimals();\n', '// loop through to addresses and send value\n', 'for (uint8 i = 0; i < _to.length; i++) {\n', 'assert((Token(_tokenAddr).transfer(_to[i], _value[i] * (10 ** decimals))) == true);\n', '}\n', 'return true;\n', '}\n', '}']