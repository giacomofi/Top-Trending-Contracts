['pragma solidity ^0.4.20;\n', '\n', 'contract TxnFee {\n', '    address public owner;\n', '    address public primary_wallet;\n', '    address public thirty_wallet;\n', '    uint256 public collected_eth;\n', '    \n', '    constructor (address main_wallet, address first) public {\n', '        owner = msg.sender;\n', '        primary_wallet = main_wallet;\n', '        thirty_wallet = first;\n', '        collected_eth = 0;\n', '    }\n', '    \n', '    event Contribution (address investor, uint256 eth_paid);\n', '    \n', '    function () public payable {\n', '        emit Contribution(msg.sender, msg.value);\n', '        if(collected_eth >= 3 * 1 ether){\n', '            uint256 thirty_value = msg.value * 3 /10;\n', '            thirty_wallet.transfer(thirty_value);\n', '            primary_wallet.transfer(msg.value - thirty_value);\n', '        } else if(msg.value + collected_eth > 3){\n', '            uint256 direct_transfer = (3 * 1 ether) - collected_eth;\n', '            uint256 part_thirty_value = (msg.value - direct_transfer) * 3 / 10;\n', '            thirty_wallet.transfer(part_thirty_value);\n', '            primary_wallet.transfer(msg.value - part_thirty_value);\n', '        } else {\n', '            primary_wallet.transfer(msg.value);\n', '        }\n', '        collected_eth += msg.value;\n', '    }\n', '}']