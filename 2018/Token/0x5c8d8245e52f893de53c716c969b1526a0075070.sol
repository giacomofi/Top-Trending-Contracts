['pragma solidity ^0.4.18;\n', '\n', 'contract ERC20Interface {\n', '  function transferFrom(address _from, address _to, uint _value) public returns (bool){}\n', '}\n', 'contract Ownable {\n', '  address public owner;\n', '\n', '  function Ownable() public {\n', '    owner = msg.sender;\n', '  }\n', '\n', '  modifier onlyOwner()  {\n', '    require(msg.sender == owner);\n', '    _;\n', '  }\n', '\n', '  function transferOwnership(address newOwner) public onlyOwner {\n', '\n', '    if (newOwner != address(0)) {\n', '      owner = newOwner;\n', '    }\n', '  }\n', '}\n', '\n', '\n', 'contract ENXAirDrop is Ownable {\n', '\n', '  function airDrop ( address contractObj,\n', '                    address   tokenRepo,\n', '                    address[] airDropDesinationAddress,\n', '                    uint[] amounts) public onlyOwner{\n', '\n', '    for( uint i = 0 ; i < airDropDesinationAddress.length ; i++ ) {\n', '\n', '        ERC20Interface(contractObj).transferFrom( tokenRepo, airDropDesinationAddress[i],amounts[i]);\n', '    }\n', '   }\n', '}']
['pragma solidity ^0.4.18;\n', '\n', 'contract ERC20Interface {\n', '  function transferFrom(address _from, address _to, uint _value) public returns (bool){}\n', '}\n', 'contract Ownable {\n', '  address public owner;\n', '\n', '  function Ownable() public {\n', '    owner = msg.sender;\n', '  }\n', '\n', '  modifier onlyOwner()  {\n', '    require(msg.sender == owner);\n', '    _;\n', '  }\n', '\n', '  function transferOwnership(address newOwner) public onlyOwner {\n', '\n', '    if (newOwner != address(0)) {\n', '      owner = newOwner;\n', '    }\n', '  }\n', '}\n', '\n', '\n', 'contract ENXAirDrop is Ownable {\n', '\n', '  function airDrop ( address contractObj,\n', '                    address   tokenRepo,\n', '                    address[] airDropDesinationAddress,\n', '                    uint[] amounts) public onlyOwner{\n', '\n', '    for( uint i = 0 ; i < airDropDesinationAddress.length ; i++ ) {\n', '\n', '        ERC20Interface(contractObj).transferFrom( tokenRepo, airDropDesinationAddress[i],amounts[i]);\n', '    }\n', '   }\n', '}']
