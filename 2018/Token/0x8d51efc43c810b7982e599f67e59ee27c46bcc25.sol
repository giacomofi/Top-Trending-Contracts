['pragma solidity ^0.4.11;\n', '\n', 'contract FitToken {\n', 'string public symbol;\n', 'string public name;\n', 'uint256 public decimals;\n', 'uint256 _totalSupply;\n', '\n', 'address public owner;\n', '\n', 'mapping(address => uint256) balances;\n', '\n', 'mapping(address => mapping (address => uint256)) allowed;\n', '\n', 'modifier onlyOwner() {\n', 'if (msg.sender != owner) {\n', 'revert();\n', '}\n', '_;\n', '}\n', '\n', 'event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n', 'event Transfer(address indexed _from, address indexed _to, uint256 _value);\n', '\n', '\n', 'function FitToken() {\n', 'owner = msg.sender;\n', 'decimals = 18;\n', '_totalSupply = 400000000 * (10**decimals);\n', 'balances[owner] = _totalSupply;\n', 'symbol = "FIT";\n', 'name = "FIT TOKEN";\n', '}\n', '\n', '\n', 'function totalSupply() public constant returns (uint256 totalSupply) {\n', 'totalSupply = _totalSupply;\n', '}\n', '\n', '\n', 'function balanceOf(address _owner) public constant returns (uint256 balance) {\n', 'return balances[_owner];\n', '}\n', '\n', '\n', 'function transfer(address _to, uint256 _amount) public returns (bool success) {\n', 'if (balances[msg.sender] >= _amount \n', '&& _amount > 0\n', '&& balances[_to] + _amount > balances[_to]) {\n', 'balances[msg.sender] -= _amount;\n', 'balances[_to] += _amount;\n', 'Transfer(msg.sender, _to, _amount);\n', 'return true;\n', '} else {\n', 'return false;\n', '}\n', '}\n', '\n', '\n', 'function transferFrom (\n', 'address _from,\n', 'address _to,\n', 'uint256 _amount\n', ') public returns (bool success) {\n', 'if (balances[_from] >= _amount\n', '&& allowed[_from][msg.sender] >= _amount\n', '&& _amount > 0\n', '&& balances[_to] + _amount > balances[_to]) {\n', 'balances[_from] -= _amount;\n', 'allowed[_from][msg.sender] -= _amount;\n', 'balances[_to] += _amount;\n', 'Transfer(_from, _to, _amount);\n', 'return true;\n', '} else {\n', 'return false;\n', '}\n', '}\n', '\n', '\n', 'function approve(address _spender, uint256 _amount) public returns (bool success) {\n', 'allowed[msg.sender][_spender] = _amount;\n', 'Approval(msg.sender, _spender, _amount);\n', 'return true;\n', '}\n', '\n', 'function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n', 'return allowed[_owner][_spender];\n', '}\n', '}']
['pragma solidity ^0.4.11;\n', '\n', 'contract FitToken {\n', 'string public symbol;\n', 'string public name;\n', 'uint256 public decimals;\n', 'uint256 _totalSupply;\n', '\n', 'address public owner;\n', '\n', 'mapping(address => uint256) balances;\n', '\n', 'mapping(address => mapping (address => uint256)) allowed;\n', '\n', 'modifier onlyOwner() {\n', 'if (msg.sender != owner) {\n', 'revert();\n', '}\n', '_;\n', '}\n', '\n', 'event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n', 'event Transfer(address indexed _from, address indexed _to, uint256 _value);\n', '\n', '\n', 'function FitToken() {\n', 'owner = msg.sender;\n', 'decimals = 18;\n', '_totalSupply = 400000000 * (10**decimals);\n', 'balances[owner] = _totalSupply;\n', 'symbol = "FIT";\n', 'name = "FIT TOKEN";\n', '}\n', '\n', '\n', 'function totalSupply() public constant returns (uint256 totalSupply) {\n', 'totalSupply = _totalSupply;\n', '}\n', '\n', '\n', 'function balanceOf(address _owner) public constant returns (uint256 balance) {\n', 'return balances[_owner];\n', '}\n', '\n', '\n', 'function transfer(address _to, uint256 _amount) public returns (bool success) {\n', 'if (balances[msg.sender] >= _amount \n', '&& _amount > 0\n', '&& balances[_to] + _amount > balances[_to]) {\n', 'balances[msg.sender] -= _amount;\n', 'balances[_to] += _amount;\n', 'Transfer(msg.sender, _to, _amount);\n', 'return true;\n', '} else {\n', 'return false;\n', '}\n', '}\n', '\n', '\n', 'function transferFrom (\n', 'address _from,\n', 'address _to,\n', 'uint256 _amount\n', ') public returns (bool success) {\n', 'if (balances[_from] >= _amount\n', '&& allowed[_from][msg.sender] >= _amount\n', '&& _amount > 0\n', '&& balances[_to] + _amount > balances[_to]) {\n', 'balances[_from] -= _amount;\n', 'allowed[_from][msg.sender] -= _amount;\n', 'balances[_to] += _amount;\n', 'Transfer(_from, _to, _amount);\n', 'return true;\n', '} else {\n', 'return false;\n', '}\n', '}\n', '\n', '\n', 'function approve(address _spender, uint256 _amount) public returns (bool success) {\n', 'allowed[msg.sender][_spender] = _amount;\n', 'Approval(msg.sender, _spender, _amount);\n', 'return true;\n', '}\n', '\n', 'function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n', 'return allowed[_owner][_spender];\n', '}\n', '}']
