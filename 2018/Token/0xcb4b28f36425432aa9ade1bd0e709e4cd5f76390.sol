['pragma solidity ^0.4.24;\n', '\n', 'contract ERC20Interface {\n', '    function totalSupply() public constant returns (uint256 supply);\n', '    function balance() public constant returns (uint256);\n', '    function balanceOf(address _owner) public constant returns (uint256);\n', '    function transfer(address _to, uint256 _value) public returns (bool success);\n', '    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n', '    function approve(address _spender, uint256 _value) public returns (bool success);\n', '    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\n', '\n', '    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n', '    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n', '}\n', '\n', '// ioucoin\n', '// YOU get a ioucoin, and YOU get a ioucoin, and YOU get a ioucoin!\n', 'contract IOUcoin is ERC20Interface {\n', '    string public constant symbol = "IOU";\n', '    string public constant name = "LOVE COIN";\n', '    uint8 public constant decimals = 8;\n', '\n', '    uint256 _totalSupply = 5201314000000000;\n', '    uint256 _airdropAmount = 52013140000;\n', '    uint256 _cutoff = _airdropAmount * 520131400;\n', '\n', '    mapping(address => uint256) balances;\n', '    mapping(address => bool) initialized;\n', '\n', '    // ioucoin accepts request to tip-touch another ioucoin\n', '    mapping(address => mapping (address => uint256)) allowed;\n', '\n', '    function ioucoin() {\n', '        initialized[msg.sender] = true;\n', '        balances[msg.sender] = _airdropAmount * 52013140;\n', '        _totalSupply = balances[msg.sender];\n', '    }\n', '\n', '    function totalSupply() constant returns (uint256 supply) {\n', '        return _totalSupply;\n', '    }\n', '\n', '    // What&#39;s my girth?\n', '    function balance() constant returns (uint256) {\n', '        return getBalance(msg.sender);\n', '    }\n', '\n', '    // What is the length of a particular ioucoin?\n', '    function balanceOf(address _address) constant returns (uint256) {\n', '        return getBalance(_address);\n', '    }\n', '\n', '    // Tenderly remove hand from ioucoin and place on another ioucoin\n', '    function transfer(address _to, uint256 _amount) returns (bool success) {\n', '        initialize(msg.sender);\n', '\n', '        if (balances[msg.sender] >= _amount\n', '            && _amount > 0) {\n', '            initialize(_to);\n', '            if (balances[_to] + _amount > balances[_to]) {\n', '\n', '                balances[msg.sender] -= _amount;\n', '                balances[_to] += _amount;\n', '\n', '                Transfer(msg.sender, _to, _amount);\n', '\n', '                return true;\n', '            } else {\n', '                return false;\n', '            }\n', '        } else {\n', '            return false;\n', '        }\n', '    }\n', '\n', '    // Perform the inevitable actions which cause release of that which each ioucoin\n', '    // is built to deliver. In EtherPenisLand there are only ioucoin, so this \n', '    // allows the transmission of one ioucoin payload (or partial payload but that\n', '    // is not as much fun) INTO another ioucoin. This causes the ioucoin to change \n', '    // form such that all may see the glory they each represent. Erections.\n', '    function transferFrom(address _from, address _to, uint256 _amount) returns (bool success) {\n', '        initialize(_from);\n', '\n', '        if (balances[_from] >= _amount\n', '            && allowed[_from][msg.sender] >= _amount\n', '            && _amount > 0) {\n', '            initialize(_to);\n', '            if (balances[_to] + _amount > balances[_to]) {\n', '\n', '                balances[_from] -= _amount;\n', '                allowed[_from][msg.sender] -= _amount;\n', '                balances[_to] += _amount;\n', '\n', '                Transfer(_from, _to, _amount);\n', '\n', '                return true;\n', '            } else {\n', '                return false;\n', '            }\n', '        } else {\n', '            return false;\n', '        }\n', '    }\n', '\n', '    // Allow splooger to cause a payload release from your ioucoin, multiple times, up to \n', '    // the point at which no further release is possible..\n', '    function approve(address _spender, uint256 _amount) returns (bool success) {\n', '        allowed[msg.sender][_spender] = _amount;\n', '        Approval(msg.sender, _spender, _amount);\n', '        return true;\n', '    }\n', '\n', '    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n', '        return allowed[_owner][_spender];\n', '    }\n', '\n', '    // internal privats\n', '    function initialize(address _address) internal returns (bool success) {\n', '        if (_totalSupply < _cutoff && !initialized[_address]) {\n', '            initialized[_address] = true;\n', '            balances[_address] = _airdropAmount;\n', '            _totalSupply += _airdropAmount;\n', '        }\n', '        return true;\n', '    }\n', '\n', '    function getBalance(address _address) internal returns (uint256) {\n', '        if (_totalSupply < _cutoff && !initialized[_address]) {\n', '            return balances[_address] + _airdropAmount;\n', '        }\n', '        else {\n', '            return balances[_address];\n', '        }\n', '    }\n', '}']
['pragma solidity ^0.4.24;\n', '\n', 'contract ERC20Interface {\n', '    function totalSupply() public constant returns (uint256 supply);\n', '    function balance() public constant returns (uint256);\n', '    function balanceOf(address _owner) public constant returns (uint256);\n', '    function transfer(address _to, uint256 _value) public returns (bool success);\n', '    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n', '    function approve(address _spender, uint256 _value) public returns (bool success);\n', '    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\n', '\n', '    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n', '    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n', '}\n', '\n', '// ioucoin\n', '// YOU get a ioucoin, and YOU get a ioucoin, and YOU get a ioucoin!\n', 'contract IOUcoin is ERC20Interface {\n', '    string public constant symbol = "IOU";\n', '    string public constant name = "LOVE COIN";\n', '    uint8 public constant decimals = 8;\n', '\n', '    uint256 _totalSupply = 5201314000000000;\n', '    uint256 _airdropAmount = 52013140000;\n', '    uint256 _cutoff = _airdropAmount * 520131400;\n', '\n', '    mapping(address => uint256) balances;\n', '    mapping(address => bool) initialized;\n', '\n', '    // ioucoin accepts request to tip-touch another ioucoin\n', '    mapping(address => mapping (address => uint256)) allowed;\n', '\n', '    function ioucoin() {\n', '        initialized[msg.sender] = true;\n', '        balances[msg.sender] = _airdropAmount * 52013140;\n', '        _totalSupply = balances[msg.sender];\n', '    }\n', '\n', '    function totalSupply() constant returns (uint256 supply) {\n', '        return _totalSupply;\n', '    }\n', '\n', "    // What's my girth?\n", '    function balance() constant returns (uint256) {\n', '        return getBalance(msg.sender);\n', '    }\n', '\n', '    // What is the length of a particular ioucoin?\n', '    function balanceOf(address _address) constant returns (uint256) {\n', '        return getBalance(_address);\n', '    }\n', '\n', '    // Tenderly remove hand from ioucoin and place on another ioucoin\n', '    function transfer(address _to, uint256 _amount) returns (bool success) {\n', '        initialize(msg.sender);\n', '\n', '        if (balances[msg.sender] >= _amount\n', '            && _amount > 0) {\n', '            initialize(_to);\n', '            if (balances[_to] + _amount > balances[_to]) {\n', '\n', '                balances[msg.sender] -= _amount;\n', '                balances[_to] += _amount;\n', '\n', '                Transfer(msg.sender, _to, _amount);\n', '\n', '                return true;\n', '            } else {\n', '                return false;\n', '            }\n', '        } else {\n', '            return false;\n', '        }\n', '    }\n', '\n', '    // Perform the inevitable actions which cause release of that which each ioucoin\n', '    // is built to deliver. In EtherPenisLand there are only ioucoin, so this \n', '    // allows the transmission of one ioucoin payload (or partial payload but that\n', '    // is not as much fun) INTO another ioucoin. This causes the ioucoin to change \n', '    // form such that all may see the glory they each represent. Erections.\n', '    function transferFrom(address _from, address _to, uint256 _amount) returns (bool success) {\n', '        initialize(_from);\n', '\n', '        if (balances[_from] >= _amount\n', '            && allowed[_from][msg.sender] >= _amount\n', '            && _amount > 0) {\n', '            initialize(_to);\n', '            if (balances[_to] + _amount > balances[_to]) {\n', '\n', '                balances[_from] -= _amount;\n', '                allowed[_from][msg.sender] -= _amount;\n', '                balances[_to] += _amount;\n', '\n', '                Transfer(_from, _to, _amount);\n', '\n', '                return true;\n', '            } else {\n', '                return false;\n', '            }\n', '        } else {\n', '            return false;\n', '        }\n', '    }\n', '\n', '    // Allow splooger to cause a payload release from your ioucoin, multiple times, up to \n', '    // the point at which no further release is possible..\n', '    function approve(address _spender, uint256 _amount) returns (bool success) {\n', '        allowed[msg.sender][_spender] = _amount;\n', '        Approval(msg.sender, _spender, _amount);\n', '        return true;\n', '    }\n', '\n', '    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n', '        return allowed[_owner][_spender];\n', '    }\n', '\n', '    // internal privats\n', '    function initialize(address _address) internal returns (bool success) {\n', '        if (_totalSupply < _cutoff && !initialized[_address]) {\n', '            initialized[_address] = true;\n', '            balances[_address] = _airdropAmount;\n', '            _totalSupply += _airdropAmount;\n', '        }\n', '        return true;\n', '    }\n', '\n', '    function getBalance(address _address) internal returns (uint256) {\n', '        if (_totalSupply < _cutoff && !initialized[_address]) {\n', '            return balances[_address] + _airdropAmount;\n', '        }\n', '        else {\n', '            return balances[_address];\n', '        }\n', '    }\n', '}']
