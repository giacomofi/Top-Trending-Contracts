['pragma solidity 0.4.24;\n', '\n', 'contract KickvardUniversity {\n', '\n', '    address owner;\n', '\n', '    mapping (address => Certificate[]) certificates;\n', '\n', '    mapping (string => address) member2address;\n', '\n', '    struct Certificate {\n', '        string memberId;\n', '        string program;\n', '        string subjects;\n', '        string dateStart;\n', '        string dateEnd;\n', '    }\n', '\n', '    constructor() public {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    function setCertificate(address toAddress, string memory memberId, string memory program, string memory subjects, string memory dateStart, string memory dateEnd) public {\n', '        require(msg.sender == owner);\n', '        certificates[toAddress].push(Certificate(memberId, program, subjects, dateStart, dateEnd));\n', '        member2address[memberId] = toAddress;\n', '    }\n', '\n', '    function getCertificateByAddress(address toAddress) public view returns (string memory) {\n', '        return renderCertificate(certificates[toAddress]);\n', '    }\n', '\n', '    function getCertificateByMember(string memory memberId) public view returns (string memory) {\n', '        return renderCertificate(certificates[member2address[memberId]]);\n', '    }\n', '\n', '    function renderCertificate(Certificate[] memory memberCertificates) private pure returns (string memory) {\n', '        if (memberCertificates.length < 1) {\n', '            return "Certificate not found";\n', '        }\n', '        string memory result;\n', '        string memory delimiter;\n', '        for (uint i = 0; i < memberCertificates.length; i++) {\n', '            result = string(abi.encodePacked(\n', '                result,\n', '                delimiter,\n', '                "[ This is to certify that member ID in Sessia: ",\n', '                memberCertificates[i].memberId,\n', '                " between ",\n', '                memberCertificates[i].dateStart,\n', '                " and ",\n', '                memberCertificates[i].dateEnd,\n', '                " successfully finished the educational program ",\n', '                memberCertificates[i].program,\n', '                " that included the following subjects: ",\n', '                memberCertificates[i].subjects,\n', '                ". The President of the KICKVARD UNIVERSITY Narek Sirakanyan ]"\n', '            ));\n', '            delimiter = ", ";\n', '        }\n', '        return result;\n', '    }\n', '}']