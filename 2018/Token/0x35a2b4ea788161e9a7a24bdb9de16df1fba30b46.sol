['// Congratulations! Its your free airdrop token. More about project at: https://worldwifi.io/bonus\n', '//\n', '//\n', '// DECENTRALIZED FREE WI-FI NETWORK POWERED BY BLOCKCHAIN\n', '// 基于数据块链技术分散的免费WI-FI网络\n', '// RED WI-FI DESCENTRALIZADA GRATUITA EN BASE DE LA TECNOLOG?A BLOCKCHAIN\n', '// ブロックチェーン技術を基にした分散型無料Wi-Fiネットワーク\n', '// ДЕЦЕНТРАЛИЗОВАННАЯ БЕСПЛАТНАЯ WI-FI СЕТЬ НА ТЕХНОЛОГИИ БЛОКЧЕЙН\n', '// 블록체인 기술에 대한 분산형 무료 WI-FI 네트워크\n', '// DEZENTRALES UND FREIES WI-FI-NETZWERK AUF DER BLOCKCHAIN-TECHNOLOGIE\n', '// MẠNG LƯỚI WI-FI MiỄN PH&#205; PH&#194;N T&#193;N VỚI C&#212;NG NGHỆ BLOCKCHAIN\n', '//\n', '// \n', '//\n', '//                `:::::::::;.`\n', '//             `,:::;:::::::::::.\n', '//            ,:::::::::::::::::::`\n', '//          `::::::::::::::::::::::,`\n', '//         `:::::::::::::::::::::::::\n', '//        .::::::::,        `;:::::::,\n', '//       .::::::;.           ``::::;:`\n', '//      `:::;::,                `::,`,+&#39;\n', '//     `::::::`                   ,: ++&#39;&#39;\n', '//     ::::::`                     `.++++.\n', '//    `:::::.                       `&#39;++++\n', '//    :::::,                      :  +++++&#39;\n', '//   .:::::                      +++, +++++\n', '//   :::::`                      ++++`,++++;             `        `               ` ,. `                   `                           `                                  `    `                 `\n', '//  `::::,                       +++++ +++&#39;+         .+++`    ;+++     ++++      ;&#39;+++++:`      ++++++++++.      ++++           ++++++&#39;+;             `:::.    .::;     ;:::  `;:::    ::::::::::::   ::::\n', '//  :::::                        &#39;++++..++++`        `+++,    ++++     +++;    `++&#39;+++++++`     ++++++++&#39;+++`    ++++           +++&#39;++++++.            :::,    ::::     ::::   ::::    ::::::::::::   ::::\n', '//  :::::                    ;+&#39;  +++++ &#39;++++         ++++    ++++`   `+++,    ++&#39;&#39;+++++++&#39;     +++++++++++&#39;+    ++++           ++&#39;++++++&#39;+,           ::::    ::::.   `:::.   ::::`   ::::::::::::   ::::\n', '// .::::`                    +++; ,++++ &#39;++++         ++++    ++++:   :+++    ,++++`  .+&#39;+&#39;     ++++`  `&#39;+&#39;++    ++++           ++++  `+&#39;++&#39;           ::::    ::::,   .:::`   ::::`   ::::````````   ::::\n', '// ,::::                    .++++  ++++:`++++         ;+++   `+++++   ;+++    ++++`    .+++&#39;    ++++     :+++,   ++++           +++&#39;   `,+++&#39;          ::::   `:::::   ,:::    ::::`   ::::           ::::\n', '// :::::                     &#39;+++&#39; :++++ ++++.        ,+++   :+++++   ++++    +++;      ++++    ++++     `+++;   ++++           +++&#39;   ` &#39;&#39;++          `:::`  .:::::   ::::    ::::`   ::::           ::::\n', '// ::::.              `+++   ;++++ `++++ ++++;        `+++`  &#39;+++++   ++++   ,+++.    ` ,+++`   ++++      +++;   ++++           +++&#39;     `&#39;++.         `:::`  ::::::` `::::    ::::`   ::::`          ::::\n', '// ::::`             ,++++#`  ++++` ++++ &#39;+++&#39;         +++:  +++&#39;++`  &#39;++,   &#39;+++       `+++:   ++++      +++;   ++++           +++&#39;      +++;          :::, `::::::`  :::.    ::::`   ::::      `    ::::\n', '// ::::`             +++++++  ++++: ++++ ;++&#39;&#39;         +++&#39;  +++:++: `+++    &#39;+++        ++&#39;;   ++++     ;+++`   ++++           +++&#39;      ++++          ::::  ::;.::,  :::`    ::::`   ::::`    ```   ::::\n', '//`::::`            `+++++++  `&#39;++: ;++&#39;`,++#&#39;         ++++ .++;`++&#39; .+++    &#39;+++        +++&#39;   ++++ ```+++++    ++++           +++&#39;      ++++          ,::: `::: ::: `:::`    ::::`   :::::::::::    ::::\n', '//`::::`            `         `                        :+++ :++, +++ &#39;+++    &#39;+++        ++++   +++++++&#39;+++&#39;`    ++++           +++&#39;      ++++          .::: ,::. ::: ,:::     ::::`   :::::::::::    ::::\n', '//`::::`             ,,,,,,,   &#39;:,. .:,: `,,,,          +++ +++` +++ +++&#39;    &#39;+++        +++&#39;   ++++++&#39;++++`     ++++           +++&#39;      ++++          `:::`:::` :::`::::     ::::`   :::::::::::    ::::\n', '// ::::`             +#++++&#39;  +++&#39;: ++++ :++++          +++.+++  ;+&#39;.+++,    &#39;++&#39;        +++:   ++++++++++&#39;      ++++           +++&#39;     `++++           :::`:::  ,::.:::,     ::::`   ::::     ``    ::::\n', '//`::::`             ;+++++   &#39;+++` ++++ ;+++&#39;          &#39;++,++&#39;  ,++:+++.    ;+++       `+++,   ++++   ++++`     ++++           +++&#39;      +++:           :::,:::  `::,:::`     ::::`   ::::           ::::\n', '// ::::.              ,+++`` :++++  ++++ ++++;          &#39;+++++;   ++++++     .+++,      ;+++    ++++   :+++;     ++++           +++&#39;     :+++.           :::::::   ::::::      ::::`   ::::           ::::\n', '// :::::                     +++++ :++++ ++++,          :+++++`   ++++++      ++++`     ++++    ++++  ` ++++     ++++`          ++++     ++++            .:::::.   ::::::      ::::`   ::::           ::::\n', '// .::::                `   &#39;&#39;+++` ++++:`++++           .+++++    +++++&#39;      &#39;+++:    ;+++;    ++++    &#39;+++,    ++++           +++&#39;    ++++:            `:::::`   ::::::      ::::`   ::::           ::::\n', '// `::::`                   &#39;+++&#39; .++&#39;+`;++++            +++++    &#39;++++;       +++++,:++++&#39;     ++++     ++++    ++++++++++++   ++++++++++++              :::::    ,::::.     `::::    ::::           ::::\n', '//  :::::                   :+++  +++&#39;&#39; &#39;++++            +++++    `++++`       ,&#39;+++++++++.     ++++     &#39;+++.   ++++++++++++   +++++++++++               ;::::    `::::`      ::::    ::::           ::::\n', '//  :::::                    ,:  ;++++.`++++.            &#39;+++:     ++++        `.+++++++&#39;`      ++++     `+++&#39;   ++++++++++++   ++++++++++                ::::,     ::::`      ::::    ::::           ::::\n', '//  `::::,                      .&#39;++++ ++++&#39;             :+++`     ++++           &#39;++&#39;+;        &#39;+++      ++++` `&#39;+++++++++++   ++++++&#39;,                  .:;;`     ::::       ::::    ::::           ::::\n', '//   :::::`                     &#39;&#39;+++`.++++;             `                                     `        `                   `   `     `                    ```                          ``\n', '//   ,:::::                     +&#39;++: &#39;++++                                                                                 `                            `    `   `    `\n', '//    :::::.                   `:++&#39; &#39;++++&#39;\n', '//    .:::::`                    ```,+++++\n', '//     ;:::::`                 `    +++++,\n', '//     `::::::`                    ++++&#39;+\n', '//      .::::::,                `:`+++++`\n', '//       ,:::::::`             ,::, +++`\n', '//        ,:::::::;.  `    ``,:::::` ,\n', '//         .::::::::::::::::::::::::,\n', '//          `:::::::::::::::::::::::\n', '//          ``::::::::::::::::::::.\n', '//              ::::::::::::::::,\n', '//              ` .:::::::::::`  `\n', '//                  ```````\n', '//\n', '\n', 'pragma solidity 0.4.19;\n', '\n', '/**\n', ' * @title SafeMath\n', ' * @dev Math operations with safety checks that throw on error\n', ' */\n', 'library SafeMath {\n', '\n', '    /**\n', '    * @dev Multiplies two numbers, throws on overflow.\n', '    */\n', '    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        if (a == 0) {\n', '            return 0;\n', '        }\n', '        uint256 c = a * b;\n', '        assert(c / a == b);\n', '        return c;\n', '    }\n', '\n', '    /**\n', '    * @dev Integer division of two numbers, truncating the quotient.\n', '    */\n', '    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        // assert(b > 0); // Solidity automatically throws when dividing by 0\n', '        uint256 c = a / b;\n', '        // assert(a == b * c + a % b); // There is no case in which this doesn&#39;t hold\n', '        return c;\n', '    }\n', '\n', '    /**\n', '    * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n', '    */\n', '    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        assert(b <= a);\n', '        return a - b;\n', '    }\n', '\n', '    /**\n', '    * @dev Adds two numbers, throws on overflow.\n', '    */\n', '    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        uint256 c = a + b;\n', '        assert(c >= a);\n', '        return c;\n', '    }\n', '}\n', '\n', '/**\n', ' * @title ERC20Basic\n', ' * @dev Simpler version of ERC20 interface\n', ' * @dev see https://github.com/ethereum/EIPs/issues/179\n', ' */\n', 'contract ERC20Basic {\n', '    function totalSupply() public view returns (uint256);\n', '\n', '    function balanceOf(address who) public view returns (uint256);\n', '\n', '    function transfer(address to, uint256 value) public returns (bool);\n', '\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '}\n', '\n', '\n', '\n', '\n', '/**\n', ' * @title ERC20 interface\n', ' * @dev see https://github.com/ethereum/EIPs/issues/20\n', ' */\n', 'contract ERC20 is ERC20Basic {\n', '    function allowance(address owner, address spender) public view returns (uint256);\n', '\n', '    function transferFrom(address from, address to, uint256 value) public returns (bool);\n', '\n', '    function approve(address spender, uint256 value) public returns (bool);\n', '\n', '    event Approval(address indexed owner, address indexed spender, uint256 value);\n', '}\n', '\n', '/**\n', ' * @title Basic token\n', ' * @dev Basic version of StandardToken, with no allowances.\n', ' */\n', 'contract BasicToken is ERC20Basic {\n', '    using SafeMath for uint256;\n', '\n', '    mapping(address => uint256) balances;\n', '\n', '    uint256 totalSupply_;\n', '\n', '    /**\n', '    * @dev total number of tokens in existence\n', '    */\n', '    function totalSupply() public view returns (uint256) {\n', '        return totalSupply_;\n', '    }\n', '\n', '    function transfer(address _to, uint256 _value) public returns (bool) {\n', '        require(_to != address(0));\n', '        require(_value <= balances[msg.sender]);\n', '\n', '        // SafeMath.sub will throw if there is not enough balance.\n', '        balances[msg.sender] = balances[msg.sender].sub(_value);\n', '        balances[_to] = balances[_to].add(_value);\n', '        Transfer(msg.sender, _to, _value);\n', '        return true;\n', '    }\n', '\n', '    function balanceOf(address _owner) public view returns (uint256 balance) {\n', '        return balances[_owner];\n', '    }\n', '\n', '}\n', '\n', '/**\n', ' * @title Ownable\n', ' * @dev The Ownable contract has an owner address, and provides basic authorization control\n', ' * functions, this simplifies the implementation of "user permissions".\n', ' */\n', 'contract Ownable {\n', '    address public owner;\n', '\n', '\n', '    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n', '\n', '\n', '    /**\n', '     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n', '     * account.\n', '     */\n', '    function Ownable() public {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    /**\n', '     * @dev Throws if called by any account other than the owner.\n', '     */\n', '    modifier onlyOwner() {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '\n', '    /**\n', '     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n', '     * @param newOwner The address to transfer ownership to.\n', '     */\n', '    function transferOwnership(address newOwner) public onlyOwner {\n', '        require(newOwner != address(0));\n', '        OwnershipTransferred(owner, newOwner);\n', '        owner = newOwner;\n', '    }\n', '\n', '}\n', '\n', '/**\n', ' * @title Standard ERC20 token\n', ' *\n', ' * @dev Implementation of the basic standard token.\n', ' * @dev https://github.com/ethereum/EIPs/issues/20\n', ' * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n', ' */\n', 'contract StandardToken is ERC20, BasicToken {\n', '\n', '    mapping(address => mapping(address => uint256)) internal allowed;\n', '\n', '\n', '    /**\n', '     * @dev Transfer tokens from one address to another\n', '     * @param _from address The address which you want to send tokens from\n', '     * @param _to address The address which you want to transfer to\n', '     * @param _value uint256 the amount of tokens to be transferred\n', '     */\n', '    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n', '        require(_to != address(0));\n', '        require(_value <= balances[_from]);\n', '        require(_value <= allowed[_from][msg.sender]);\n', '\n', '        balances[_from] = balances[_from].sub(_value);\n', '        balances[_to] = balances[_to].add(_value);\n', '        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n', '        Transfer(_from, _to, _value);\n', '        return true;\n', '    }\n', '\n', '    /**\n', '     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n', '     *\n', '     * Beware that changing an allowance with this method brings the risk that someone may use both the old\n', '     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n', '     * race condition is to first reduce the spender&#39;s allowance to 0 and set the desired value afterwards:\n', '     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n', '     * @param _spender The address which will spend the funds.\n', '     * @param _value The amount of tokens to be spent.\n', '     */\n', '    function approve(address _spender, uint256 _value) public returns (bool) {\n', '        allowed[msg.sender][_spender] = _value;\n', '        Approval(msg.sender, _spender, _value);\n', '        return true;\n', '    }\n', '\n', '    /**\n', '     * @dev Function to check the amount of tokens that an owner allowed to a spender.\n', '     * @param _owner address The address which owns the funds.\n', '     * @param _spender address The address which will spend the funds.\n', '     * @return A uint256 specifying the amount of tokens still available for the spender.\n', '     */\n', '    function allowance(address _owner, address _spender) public view returns (uint256) {\n', '        return allowed[_owner][_spender];\n', '    }\n', '\n', '    /**\n', '     * @dev Increase the amount of tokens that an owner allowed to a spender.\n', '     *\n', '     * approve should be called when allowed[_spender] == 0. To increment\n', '     * allowed value is better to use this function to avoid 2 calls (and wait until\n', '     * the first transaction is mined)\n', '     * From MonolithDAO Token.sol\n', '     * @param _spender The address which will spend the funds.\n', '     * @param _addedValue The amount of tokens to increase the allowance by.\n', '     */\n', '    function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n', '        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n', '        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n', '        return true;\n', '    }\n', '\n', '    /**\n', '     * @dev Decrease the amount of tokens that an owner allowed to a spender.\n', '     *\n', '     * approve should be called when allowed[_spender] == 0. To decrement\n', '     * allowed value is better to use this function to avoid 2 calls (and wait until\n', '     * the first transaction is mined)\n', '     * From MonolithDAO Token.sol\n', '     * @param _spender The address which will spend the funds.\n', '     * @param _subtractedValue The amount of tokens to decrease the allowance by.\n', '     */\n', '    function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n', '        uint oldValue = allowed[msg.sender][_spender];\n', '        if (_subtractedValue > oldValue) {\n', '            allowed[msg.sender][_spender] = 0;\n', '        } else {\n', '            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n', '        }\n', '        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n', '        return true;\n', '    }\n', '\n', '}\n', '\n', 'contract Airdropper is Ownable {\n', '    function multisend(address _tokenAddr, address[] _dests, uint256[] _values)\n', '        onlyOwner\n', '        public\n', '        returns (uint256 _numTxs) \n', '    {\n', '        uint256 i = 0;\n', '        while (i < _dests.length) {\n', '           ERC20(_tokenAddr).transfer(_dests[i], _values[i]);\n', '           i += 1;\n', '        }\n', '        return(i);\n', '    }\n', '\n', '    function transferRemaining(address _tokenAddr, address _recipient, uint256 _botAmount)\n', '        onlyOwner\n', '        external\n', '    {\n', '        ERC20(_tokenAddr).transfer(_recipient, _botAmount);\n', '    }\n', '}\n', '\n', '/**\n', ' * @title SimpleToken\n', ' * @dev Very simple ERC20 Token example, where all tokens are pre-assigned to the creator.\n', ' * Note they can later distribute these tokens as they wish using `transfer` and other\n', ' * `StandardToken` functions.\n', ' */\n', 'contract WifiBonusCoin is StandardToken, Ownable, Airdropper {\n', '\n', '    string public constant name    = "World Wifi Bonus";\n', '    string public constant symbol  = "WFB";\n', '    uint8 public constant decimals = 0;\n', '\n', '    uint256 public constant INITIAL_SUPPLY = 300000000;\n', '\n', '\n', '    /**\n', '     * @dev Constructor that gives msg.sender all of existing tokens.\n', '     */\n', '    function WifiBonusCoin() public {\n', '        totalSupply_ = INITIAL_SUPPLY;\n', '        balances[msg.sender] = INITIAL_SUPPLY;\n', '        Transfer(0x0, msg.sender, INITIAL_SUPPLY);\n', '    }\n', '\n', '}']