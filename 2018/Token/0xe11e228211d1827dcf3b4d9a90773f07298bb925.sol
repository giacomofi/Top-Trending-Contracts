['pragma solidity ^0.4.18;\n', '\n', 'contract Ownable {\n', '    \n', '  address public owner;\n', '\n', '  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n', '\n', '  function Ownable() public {\n', '    owner = msg.sender;\n', '  }\n', '\n', '  modifier onlyOwner() {\n', '    require(msg.sender == owner);\n', '    _;\n', '  }\n', '\n', '  function transferOwnership(address newOwner) public onlyOwner {\n', '    require(newOwner != address(0));\n', '    OwnershipTransferred(owner, newOwner);\n', '    owner = newOwner;\n', '  }\n', '\n', '}\n', '\n', 'contract MintTokensInterface {\n', '    \n', '   function mintTokensExternal(address to, uint tokens) public;\n', '    \n', '}\n', '\n', 'contract TokenDistributor is Ownable {\n', '    \n', '  MintTokensInterface public crowdsale = MintTokensInterface(0x8DD9034f7cCC805bDc4D593A01f6A2E2EB94A67a);\n', '    \n', '  function mintBatch(address[] wallets, uint[] tokens) public onlyOwner {\n', '    require(wallets.length == tokens.length);\n', '    for(uint i=0; i<wallets.length; i++) crowdsale.mintTokensExternal(wallets[i], tokens[i]);\n', '  }\n', '    \n', '}']
['pragma solidity ^0.4.18;\n', '\n', 'contract Ownable {\n', '    \n', '  address public owner;\n', '\n', '  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n', '\n', '  function Ownable() public {\n', '    owner = msg.sender;\n', '  }\n', '\n', '  modifier onlyOwner() {\n', '    require(msg.sender == owner);\n', '    _;\n', '  }\n', '\n', '  function transferOwnership(address newOwner) public onlyOwner {\n', '    require(newOwner != address(0));\n', '    OwnershipTransferred(owner, newOwner);\n', '    owner = newOwner;\n', '  }\n', '\n', '}\n', '\n', 'contract MintTokensInterface {\n', '    \n', '   function mintTokensExternal(address to, uint tokens) public;\n', '    \n', '}\n', '\n', 'contract TokenDistributor is Ownable {\n', '    \n', '  MintTokensInterface public crowdsale = MintTokensInterface(0x8DD9034f7cCC805bDc4D593A01f6A2E2EB94A67a);\n', '    \n', '  function mintBatch(address[] wallets, uint[] tokens) public onlyOwner {\n', '    require(wallets.length == tokens.length);\n', '    for(uint i=0; i<wallets.length; i++) crowdsale.mintTokensExternal(wallets[i], tokens[i]);\n', '  }\n', '    \n', '}']
