['pragma solidity ^0.4.18;\n', '\n', 'contract Certification  {\n', '\n', '  /**\n', '    * Address of certifier contract this certificate belongs to.\n', '    */\n', '  address public certifierAddress;\n', '\n', '  string public CompanyName;\n', '  string public Norm;\n', '  string public CertID;\n', '  string public issued;\n', '  string public expires;\n', '  string public Scope;\n', '  string public issuingBody;\n', '\n', '  /**\n', '    * Constructor.\n', '    *\n', '    * @param _CompanyName Name of company name the certificate is issued to.\n', '    * @param _Norm The norm.\n', '    * @param _CertID Unique identifier of the certificate.\n', '    * @param _issued Timestamp (Unix epoch) when the certificate was issued.\n', '    * @param _expires Timestamp (Unix epoch) when the certificate will expire.\n', '    * @param _Scope The scope of the certificate.\n', '    * @param _issuingBody The issuer of the certificate.\n', '    */\n', '  function Certification(string _CompanyName,\n', '      string _Norm,\n', '      string _CertID,\n', '      string _issued,\n', '      string _expires,\n', '      string _Scope,\n', '      string _issuingBody) public {\n', '\n', '      certifierAddress = msg.sender;\n', '\n', '      CompanyName = _CompanyName;\n', '      Norm =_Norm;\n', '      CertID = _CertID;\n', '      issued = _issued;\n', '      expires = _expires;\n', '      Scope = _Scope;\n', '      issuingBody = _issuingBody;\n', '  }\n', '\n', '  /**\n', '    * Extinguish this certificate.\n', '    *\n', '    * This can be done the same certifier contract which has created\n', '    * the certificate in the first place only.\n', '    */\n', '  function deleteCertificate() public {\n', '      require(msg.sender == certifierAddress);\n', '      selfdestruct(tx.origin);\n', '  }\n', '\n', '}']