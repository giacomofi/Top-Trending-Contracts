['pragma solidity ^0.4.18;\n', '\n', '\n', 'contract Token {\n', '\n', 'uint256 constant private MAX_UINT256 = 2**256 - 1;\n', 'mapping(address => uint) public balances;\n', 'mapping(address => mapping(address => uint)) public allowed;\n', '\n', 'string public description;\n', 'uint8 public decimals;\n', 'string public logoURL;\n', 'string public name;\n', 'string public symbol;\n', 'uint public totalSupply;\n', '\n', 'address public creator;\n', '\n', 'event Transfer(address indexed _from, address indexed _to, uint256 _value);\n', 'event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n', '\n', 'event Created(address creator, uint supply);\n', '\n', 'function Token(\n', '    string _description,\n', '    string _logoURL,\n', '    string _name,\n', '    string _symbol,\n', '    uint256 _totalSupply\n', ') public\n', '{\n', '    description = _description;\n', '    logoURL = _logoURL;\n', '    name = _name;\n', '    symbol = _symbol;\n', '    decimals = 18;\n', '    totalSupply = _totalSupply;\n', '\n', '    creator = tx.origin;\n', '    Created(creator, _totalSupply);\n', '    balances[creator] = _totalSupply;\n', '}\n', '\n', "// Don't let people randomly send ETH to contract\n", 'function() public payable {\n', '    revert();\n', '}\n', '\n', 'function transfer(address _to, uint256 _value) public returns (bool success) {\n', '    require(balances[msg.sender] >= _value);\n', '    balances[msg.sender] -= _value;\n', '    balances[_to] += _value;\n', '    Transfer(msg.sender, _to, _value);\n', '    return true;\n', '}\n', '\n', 'function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n', '    uint256 allowance = allowed[_from][msg.sender];\n', '    require(balances[_from] >= _value && allowance >= _value);\n', '    balances[_to] += _value;\n', '    balances[_from] -= _value;\n', '    if (allowance < MAX_UINT256) {\n', '        allowed[_from][msg.sender] -= _value;\n', '    }\n', '    Transfer(_from, _to, _value);\n', '    return true;\n', '}\n', '\n', 'function balanceOf(address _owner) public view returns (uint256 balance) {\n', '    return balances[_owner];\n', '}\n', '\n', 'function approve(address _spender, uint256 _value) public returns (bool success) {\n', '    allowed[msg.sender][_spender] = _value;\n', '    Approval(msg.sender, _spender, _value);\n', '    return true;\n', '}\n', '\n', 'function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n', '    return allowed[_owner][_spender];\n', '}\n', '\n', 'function setLogoURL(string url) public {\n', '    require(msg.sender == creator);\n', '    logoURL = url;\n', '}\n', '}']