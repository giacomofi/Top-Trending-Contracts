['pragma solidity ^0.4.16;\n', '\n', '\n', 'contract ERC20 {\n', '    bytes32 public standard;\n', '    bytes32 public name;\n', '    bytes32 public symbol;\n', '    uint256 public totalSupply;\n', '    uint8 public decimals;\n', '    bool public allowTransactions;\n', '    mapping (address => uint256) public balanceOf;\n', '    mapping (address => mapping (address => uint256)) public allowance;\n', '    function transfer(address _to, uint256 _value) returns (bool success);\n', '    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success);\n', '    function approve(address _spender, uint256 _value) returns (bool success);\n', '    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\n', '}\n', '\n', '\n', 'contract TokenSwap{\n', '    uint256 swapSupply = 500000000000000000000000000;\n', '    \n', '    address public CYFMAddress = 0x3f06B5D78406cD97bdf10f5C420B241D32759c80;\n', '    address public XTEAddress = 0xEBf3Aacc50ae14965240a3777eCe8DA1fC490a78;\n', '    \n', '    address tokenAdmin = 0xEd86f5216BCAFDd85E5875d35463Aca60925bF16;\n', '    \n', '\n', '    function Swap(uint256 sendAmount) returns (bool success){\n', '        require(swapSupply >= safeMul(safeDiv(sendAmount, 5), 6));\n', '        if(ERC20(CYFMAddress).transferFrom(msg.sender, tokenAdmin, sendAmount)){\n', '            ERC20(XTEAddress).transferFrom(tokenAdmin, msg.sender, safeMul(safeDiv(sendAmount, 5), 6));\n', '            swapSupply -= safeMul(safeDiv(sendAmount, 5), 6);\n', '        }\n', '        return true;\n', '    }\n', '    \n', '    function safeMul(uint a, uint b) public pure returns (uint c) {\n', '        c = a * b;\n', '        require(a == 0 || c / a == b);\n', '    }\n', '    function safeDiv(uint a, uint b) public pure returns (uint c) {\n', '        require(b > 0);\n', '        c = a / b;\n', '    }\n', '    \n', '    \n', '    \n', '}']