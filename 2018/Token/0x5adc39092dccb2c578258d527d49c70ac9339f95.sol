['pragma solidity ^0.4.19;\n', '\n', 'contract TOPB {\n', '    string public name = &#39;TOPBTC PLATFORM TOKEN&#39;;\n', '    string public symbol = &#39;TOPB&#39;;\n', '    uint8 public decimals = 18;\n', '    uint256 public supply;\n', '\t\n', '    mapping (address => uint256) public balanceOf;\n', '\t\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '    event Burn(address indexed from, uint256 value);\n', '\t\n', '    function () payable public {\n', '\t\tassert(false);\n', '    }\n', '\n', '    function TOPB() public {\n', '        supply = 200000000 * 10 ** uint256(decimals);\n', '        balanceOf[msg.sender] = supply;\n', '    }\n', '\n', '    function _transfer(address _from, address _to, uint256 _value) internal {\n', '\t\tassert(_to != 0x0);\n', '\t\tassert(balanceOf[_from] >= _value);\n', '\t\tassert(balanceOf[_to] + _value > balanceOf[_to]);\n', '\t\tuint256 previousBalances = balanceOf[_from] + balanceOf[_to];\n', '\t\tbalanceOf[_from] -= _value;\n', '\t\tbalanceOf[_to] += _value;\n', '\t\tTransfer(_from, _to, _value);\n', '\t\tassert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n', '    }\n', '\n', '    function transfer(address _to, uint256 _value) public {\n', '        _transfer(msg.sender, _to, _value);\n', '    }\n', '\n', '    function burn(uint256 _value) public returns (bool success) {\n', '        assert(balanceOf[msg.sender] >= _value); \n', '        balanceOf[msg.sender] -= _value;\n', '        supply -= _value;\n', '        Burn(msg.sender, _value);\n', '        return true;\n', '    }\n', '}']