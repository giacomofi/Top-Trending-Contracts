['pragma solidity ^0.4.23;\n', '\n', '\n', '/**\n', ' * @title ERC20Basic\n', ' * @dev Simpler version of ERC20 interface\n', ' * @dev see https://github.com/ethereum/EIPs/issues/179\n', ' */\n', 'contract ERC20Basic {\n', '  function totalSupply() public view returns (uint256);\n', '  function balanceOf(address who) public view returns (uint256);\n', '  function transfer(address to, uint256 value) public returns (bool);\n', '  event Transfer(address indexed from, address indexed to, uint256 value);\n', '}\n', '\n', 'contract MultiTransfer {\n', '  function balanceOf(address _token, address _who) public view returns(uint256) {\n', '    return ERC20Basic(_token).balanceOf(_who);\n', '  }\n', '\n', '  function transfer(address _token, address[] _to, uint256[] _value) public returns(bool) {\n', '\n', '    require(_to.length != 0);\n', '    require(_value.length != 0);\n', '    require(_to.length == _value.length);\n', '\n', '    uint256 sum = 0;\n', '\n', '    for (uint256 i = 0; i < _to.length; i++) {\n', '      require(_to[i] != address(0));\n', '      sum += _value[i];\n', '    }\n', '\n', '    assert(balanceOf(_token, msg.sender) >= sum);\n', '\n', '\n', '    for (i = 0; i < _to.length; i++) {\n', '      ERC20Basic(_token).transfer(_to[i], _value[i]);\n', '    }\n', '\n', '    return true;\n', '  }\n', '}']