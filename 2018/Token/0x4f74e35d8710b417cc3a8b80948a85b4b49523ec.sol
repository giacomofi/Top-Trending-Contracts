['pragma solidity 0.4.24;\n', '\n', '/**\n', ' * @title ERC20 interface\n', ' * @dev see https://github.com/ethereum/EIPs/issues/20\n', ' */\n', 'contract ERC20Old {\n', '  function totalSupply() public view returns (uint256);\n', '  function balanceOf(address who) public view returns (uint256);\n', '  function transfer(address to, uint256 value) public;\n', '  event Transfer(address indexed from, address indexed to, uint256 value);\n', '  function allowance(address owner, address spender) public view returns (uint256);\n', '  function transferFrom(address from, address to, uint256 value) public;\n', '  function approve(address spender, uint256 value) public returns (bool);\n', '  event Approval(address indexed owner, address indexed spender, uint256 value);\n', '}\n', '\n', 'contract Faucet {\n', '    \n', '    address public token;\n', '    uint public decimals;\n', '    uint public dripAmount;\n', '    mapping (address => bool) public alreadyReceived;\n', '    \n', '    modifier newUser() {\n', '        require(!alreadyReceived[msg.sender]);\n', '        _;\n', '    }\n', '    \n', '    \n', '    constructor(address _token, uint _decimals, uint _dripAmount) public {\n', '        token = _token;\n', '        decimals = _decimals;\n', '        dripAmount = _dripAmount;\n', '    }\n', '    \n', '    function dripMe() public newUser {\n', '        ERC20Old(token).transfer(msg.sender, dripAmount * 10 ** decimals);\n', '        alreadyReceived[msg.sender] = true;\n', '    }\n', '    \n', '}']