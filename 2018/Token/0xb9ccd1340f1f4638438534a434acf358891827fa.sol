['/**\n', '~~~~=~~~~~=~~~=~=~~~==~~======~~====~~~~~~~=~~==~=~==~~~~::~~::~::::::::::~~~:~~~~~~~==~~~++=~~~:=~::~:::~~~~=====~==~~~~:::~:~:=====+=~~~=~\n', '~~~~~~~~~~~~~~~~~~~~~~~:~~~=~::~=:=~~~~:~~~~~~~~~~~~~:~~::::~:::::,:::~~~~~~~~=~======~=+===~:~::~=~:::~::~~~~=:=====~~=~:~~~:~~~====~~~=~~~\n', '~==~==~~~~~~~:~~~~~~=:~~~:::~::~:~~::::::~~~::~:~:~~~~~~~=====~:~:::~:~~~~:~~~=====:~=~~===~~~~~::::~::::~~~~:~:===~====~~~~~~~~====~=====~~\n', '~=~~==~~====~~~~~~~~~=:~:~~~~:~~~~::~~::::::~::~~~:=~+7Z8DDDDDDD8ZI+?77???+I????=++++==~~=~=~::::~::,:~:::::::~:~~~~~~~~~~~~~::~~~==~~~=~===\n', '=~~=~~~==~~=~~~=~~~==~:~~~~:~:~~:~::~~:::~:~=~=?IIODNNNNNNNNNNNNNNNDDDDNDDDDD88Z7?+++++~~:=~~::::~~~~:~::::::~~~~~======~~=~~=~~~~~~~~======\n', '~~~~~~~~~~~~:~~~~~~~~~~~~~~~~~~~~~~~=~~~=~~=7ODNNDNNDNNNNNNNNNNNNNNNDNNNNNNNNNNNNNND8$?+====~~~:~=~~:~~~:~:~:~~~~~~~~=~====~~~~=~~~~~~=====+\n', '~~~~:~~~:~~~~~~~~:~:~~~:~~~=~~~~~~~~~===I$8NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDZ?=~~~~~:~::::::::~::~::~:~:~===~~==~~~~~~~~~~=====~\n', '~~~~~~~~~~~~~~=:~~~:~:~~~~~~~::~:~~~~?78DDNNNNNNDNNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNDNO?==~~~~~::::~::,::::::~:~=~====?+===~~~:~~~~~~~=\n', '==~~~~~~~~=~~~~~~~~::::~::::::::~:=IZDNDNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDO+~+~~~~::~~:::=~~~~~~~~~======~==~~====~=====\n', '==~~~~~~~~~~~:~~~~~~::~~::::::~:~78DNNNNNNNNNNDDDNNNNNNNNNNNNNNNNNNNDDDDNNNNNNNNNNNNNNNNNNNNNNNDZ?=~:~::~::~::~:~:~:~~::~~~=~=======~~~==~~~\n', '~=~~~~~=~~~:::~:::~~~~~::~~~~~+INNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDODNDNNNNNNNNNNNNNNNNNNNNNNNDNZ=~:::~::~~::::~:~:~~~~=~========~===~==~~\n', '==~~===~~~~~~::~~:~:~:::~~~~=?8DNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDD8DDNNNNNNNNNNNNNNNNNNDNNNNNNNNNN++~~~~::~:~=~:~~:~~~~~~~=:====++==+==~~~\n', '=======~~~~~~~~~::~~::,:::~=ZDNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNDDDD88DDNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNDZ=:~:~:~~=~::~~~~::::~~:::~~~==~~~==:~~\n', '~====~==~~~~~~~~:~::::::::=ONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDDDDDDD8DNNNNNNNNNNNNMNNNNNNNNNNNNNDNNNDNO==~~:=~~:~::~:~~::~~~::~~=~~=========\n', '=======~=~~~~~~~::~~:~:~=ZDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDDDDNNDDDDDNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNDDO?~:~~~~~~::~~~~:~~::~:~~=~==:~~~~~=~\n', '+====~~==~~~~~~::~~::~~?8DDDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDDDDDDD8NDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNND8?=~~::::~~~::~:~:~:~~~~~:~~~~======\n', '==========~~:::::::::~=8NNNNNNNNNNNNNNNNNNNNDNDNDNNNNDDDNDDD8DDDDD88DDDDDNNNNNNNNNDNNNNNNNNNNNNNNNNNNNDDND+~~~~~~~:~~~=~::=~~:~~::~~~~~~:~=~\n', '==~===~==~~~~::::::::=ODNNNNNNNNNNNNNNNNNNNNDDDNNNNDDDDNDDDODDDD8OO8D88DD8DDNDDNNNNNNDNNNNNNDNNNNNNNNNDDNND?=~~::~~~~~~:~:~~~~:~:~~~~~~~~:~=\n', '==~~~~~~~~~~~~~~~~:~~ZNDNNNNNNNNNNNNNNNNNDDDDDNDDDD88D8OOZ$8DD8OZ7$88ZOZ88ODDDDNDDNNDDDNDNNNDNNNNNNNNNNDDDND+:::~:~~~:~~=~~=~==~~==~~=~~~~~~\n', '======~~~~~~~~~~~~~=ZDNNNNNNNNNNNNNNNNNDD8O88D8D8D8D8Z$O777ZO777++7$7I$ZZZ$ZO8DDDDDDNNDDDNDDNDDNNNDDDNNNDDNN8?~~:~~~~=~~~~~~~~~~~~==~~~~~~~~\n', '====~~~~=~~~~:~~~==ZNNDNNNNNNNNNNNNNND8DZ888DDD8OD8O7II?I$ZI?+?+=+?Z?+I77II??7OD8DZDDDDD88DDDNNNNDNNNN8DDDDDD8+~::~::=:::~~~~===~===========\n', '=~~~~~~~~=~~:~~~~~?NNNNNNNNNNNNNNNNDD88ZOO88DZZ88O7I?++I77=~~~+~~~?I~~~=+~+++?+Z8OOZDDDD88ODNNDDDDNDDDDNDDDDDDO=~~:::~::~~:===~~~~=~~~====~=\n', '~~=~~~~~~~~~~~~~~~ZNNNNNNNNNNNNNND8OOZ7$OOOOI7ZOZI??=7?I+~:::~~=:~++~~:=~:~?====$$O7I8DD8OO88D8DDDDDDNDNDDNDDNNO=~:::~:::~::~:~~=~~~~~===~==\n', '=~=~~~~~~~~~~~~~~=8NNNNNNNNNNNNND88OZ$$ZZZO$$ZZ$I+?77$I:::::~:::::=~::,~:,:~~~~~=7OOI7Z888OZ88DNND8DDNNND8DDDNND+~::::~::~:~::~~~::~::~~~~=~\n', '=~~~~~~====~~~===$NNNNNNNNNNDDDDDOO77$ZO877I??+==?II?=::,,~~:,,,,:~:~:,::::::~=~~=I$7=?$88OOZZO8DDDDODDDDDDDNNND8~~::~,:::,,:::~~~~:~~~=~~~~\n', '~~~~~~~~~~~~~~===ONNNNNNNNNNND88Z$$I$O88Z$?+=~~=+I?=:,:::::::,,,,:::,:::,,::,,~~,:~?7+=+$88O7$ZOD888O8DDDDDDNNND8I~~,::,::::~:~~:~:~~::~~~:~\n', '~~~~~~~~~~=~~~==?DNNNNNNNNNNDDD8$Z77O8DOI?+==~=7I~,,:,,,::,,,,,,,,,,:,::,,::,:::~~~~=I=~+7OOO$$7$D8ZOZ8DDNDNDDDDD8=~::::::~:::~~~~~~~=~~~~~~\n', '==~~~~~~~~~:~~~=ZNNNNNNNNNNDDD8ZZ777D8Z+=+~==II=:,,,,,,,,:,::,,,,,,,,,,:,::::::::~~~~+?~~+OIZ77IIZZ$Z$OODNDNDNNNNDI=:,~:::~:~:~~~~~~~::~~:~~\n', '=~~~~~~~~~~~:~~+8DNNNNNNNNNND8OZ$$Z88I++===+I=~::,,,,,,,,,,,,:,,:,,.,,,,,,,,,,:,,,::~=?I=~+I?7II7IOZOOZ88DDNNNNNNDZ=~~~~~~=:~~::~~=~~~~=~~=~\n', '~=~~~=~~~~~~~~~?DNNNNNNNNNNND8OZ7OD87??+~~==::::,,,,,.,,,,,,,,,,:,,.,,,.,,,.:,:,,,,,::++==~+++?+I77Z8ZO7$8DNNNNNDN8=~===~~~~===~~~=~~~~=~~~=\n', '==~~~~~~~~~~~==IDNDDNNNNNNNDDDZ7ZDD$I7?==+=:,,,:,,,,,,,,,,,,,,:::,,,,:...,..,,,,,,.,,,:+?I+=~~=?=IZZ88Z$7$DNNNNDDDZ==~~:~::~~~~~:~===+======\n', '===~~~=~~~~~~==7DNNDNNNNNNNNDDO$OD$??+==~~:,,,,,,,,,,,,,.,,,,,,,,,,,,.,,,,,,,,,,,,,,.,,,:~+==~~+I=?7ZZ777$8NNNDDDDD?=~~~~~~====~~~~~:~~~~===\n', '~~~=~~~~~~~=~==ZNNNNNNNNNNNND8ZZ8$====+==~:,,,,,,,,,,,,,,.,,.,,,,,,::,.,,,.,,,,,,,...,,,,~~==~::=?=I7ZII??8NNNDDDDDI~~::~:,:::::~~:~~~~~~===\n', '=~~=~~~~~~====+8NDNDNNNNNNNDND788?===~~~~::::,,,.,,,,,,,,,,,,,,,,,,,,,,,.,.,,,,,:,,,.,,...,~==::~==~=I??+ZDDDDDNDDDZ+~~~~~~~~:::~~:::::~=~~=\n', '~=~~~~~~~:~==+?8DNDNNNNNNNNNDD8D8I+=~==::,::::,,,,,,,::,:,,,,,.,,,,:,,,.,,..:,,,,.,...,.,,,,,~~:,:+~~~=7?78DDNNNNDNO=~,:,:::::::~~:~~:=~:~~=\n', '~~~~~~~~~~~~~=+8NDNNNNDNNDNNDDDDOI?==~~::::::,,,,,,,,,,,,,,,,.,:,,,:,,,,,,,,:,,,:::,,,.,,,,,:~::::~~,~=I?$8DDNDDNDD8+~~~~~::~::~~~:~~~~~~~==\n', '~~~~~~~~~~~~~=?DNNNNNDNNNNNNDDDD$I++=~=:::::,:,:,,,:,.,:,,,,,,,,..,,,,,,,,...,,,,,,.,..,,,:::::,:,,:~==+?ZD8DDDDDDDD=:,:::::~=~~:~~~~~~~~===\n', '~~~~~~~~~~~~:~+8NNNNDNDNNNNDD8D8I+==~~~:::,:,,,,:,,,.,..,,,,,,,.,,,,,,,,,,.,,,,,,,,,,,,,,.,:::::,,,:~~~??ODDDDNDDDD8+~::~~~::~~~~~~~~===~==~\n', '~~~~~~~~~~~~~~+ONNNDNNNNNDNDD8DZ+=====~::::::::,:,:,,,,.,,,,,:,,,,,.,::,,,,..,,,,,:,,,,,,,:::,,,,,,,:~~+?ODDDDDDDDD8I:::::~~~~~~~~~~~~~~====\n', '~~~~~~~~~~:~~~+8NNNNNNNNDDNN88O?+=~~~~~::::::,,,,,,,,,,,.,.,,,.,.,,,,:,,,,,:,,,,,::,,,,,,,,,,::::...,:~+I8DDDDDDDDD8?~~:::=~~==~~===~~~~~~~=\n', '~~~~~~~~~~~~~~+8NNNNNNNNDDD8OZ7+=====~~::::::::,,,,,,,,,,,,,,,,,,,...,,:,,,,,,,,,,,,.,,,,,,,::,,,,,,::~+?ZDDNDDDDDDD?~~~=~~~~~~~~~~~~~~=~=~~\n', '~~~~~~~~~~~~~~?DNNNNNNNNNND87?+=~=~:~:~:::::::,:,,:,,,:,,,,,,,,:,,,,,,,,,,::,,,,,,,::,:...,,,,:,,,,,,:~?+788NDDDDDDD?~~~~~~~~==~~~~~~:~~~~==\n', '~~~~~=~~~~~~~~+ZDDNNNNNNND8$?===~~~~~~~~~:::::::::,::,,,,,,,,,:,,,,,,,,,,,,,,,,,,,,,,,,,,,:,,::,:,,,,:~=+I8DDDDDDD8D?~~~~~~~~~~=~~~~~~~~~~~=\n', '~~~~~~~~~~~~~~+$$DDNNNNND8$7+====~=~~~~~~~::~~=~~~~=~~:::,:,,,:,,,:,,,,,,:,,,,..,,,:,,,,,,:~:::,,,,:,:~~=+$DDDDDDDDZ===~~~~~~:~~:~~~~==~====\n', '~~~~~~~~~:~~~~=II$DDDNNNDDZI===~~~~~~~~~~~::~~:~:~~~~::~::,,,,:,,,,,,,,,,,,,,.,,,,,:::~:::~~:~~~:,,,:~~~=~+88NDDNDDI~=~:~=~~~~~~=~~~~~======\n', '~~~~~~~~~::~~~~~==?8DNDDD8O?+=~~~~~~~~~~~~~~~::::::::~:~:~:~:,,:,:,::,,.,,,,,,.,,,::::::::~~~::::~:::~~~~~?8DDD87?$+~=~~~~~:~~~~~~======~===\n', '~~~~~~~~~~:~~~~~~~:~IDNNNDO?==~:~~=~:::~~~:::::::::,::,::~:::::,,,,::,,,,,:,,,,,,,:~:::::,,:,::,,::~:~~~~~=8DDD?:~=~~~~:~=~:~~~~~===+======~\n', '~~~~~~::~~~:~~~~++~:~ZDDD8Z?=~~:~~~~~~:::::::,,:::,:::,,:,:::,,:,,,,,,,,,,,,,.,,,,,:::,,,,:::::,::::,~~~~~+8DDI~~====~::::~~~~==~~===~=====+\n', '~~~~~~~:::::~:~~+=~::=8888Z?=~~~~~:~~~::::::::::,,,::::,,,::::,,,,,,:,,.,,,,:,:.,,,::,,,.::::,,,,,,::~~:::=8DD=~~=~~~~::~~~:~=+===~=:=~=~~~=\n', '~~~~::~:~::::::~~~~:,:?$ZOZ?=~~~~::~:::::::::::::::::::,,,,:::,:,:::,,,,,,,,,::,,,,::::,:,:::::::,,::~:~::~$O+~~~~~~:~::~~~~=+=====~~======+\n', '~~~~~~~~:~~~~~~~~~::,:~=+$Z?=~~~~:::::::~::::~=~=++++=~~~:::::,,,,:,,:,,,,,,,,,,,,,:::::::~~~~:,:::::::~::=I~:~====~~~::~~==+==~~::~~~===~=+\n', '~~~~~~~~~~~~~~~~~::,,:==+$$?=~~:~:::::::~::~~=?Z8DD8DD87+~::::::::,,,,,,,,.,:::,,,::~+IZO8O7+=~~::::::::,:~+::~~~~~~~~~~~~===+=~~~:~~~====++\n', '~~~~~:~~~~::~~~=Z7::,:~~=I$?=~~::::::,::::~~+$Z?$NIOD?7$~==~::::::,,,,:,,,,,,:::,,:=7$ID7I8I?ZO+:,,:::::,,:~::=~~~::::~====~~~~~~~~~======+=\n', '~~~~~~~~~:~::~=+ZDI:::~::~+?==:::::::::,:::~==~~+DDDO8DI:,:~::,,,,,,,,,,,.,,,:,,,:::+8D8888=:~=?=:,::::::,:::I?==~~~~:~~=~~=~:~~~~~~=~==+=~=\n', '~~~~~~~~:~~~~~~=I88=::~:::~+=~~::,::,,:,,:::::::~+O888+::::::,::::,,,:,,,,,,,,,,,,,::7888O?::~~:,,::,,,,,:::~DO=~~~~::======~~~~~~=========~\n', '~~~~~~~~:~~~~~=+Z8DO=::~::~==~~:::,,,,,:,,:::::::::~=~:::::::,:,::::,,:::,,,,::,,,,::~~~~,::::::,,,:::,,,:::7DDI~::~~~=~~~:~:=~=~===~===~=~~\n', '~~~~~~~~~~~~~~=$DDD8$:::=~~~=~~::,,,,,,,,,::::::::,:::,::::::,,,,:,,,,,:,,,.,,,,,,,:,::,,,::::::,::::::::~~7DND8=~::~~=~~~~~:~~~===~~~~~~~~=\n', '==~~~~~~~~~~~=?8DDDDNI:::~~:~~~:::,,,,,,,,,,,,::,,::::::::::,:,,,,,,,:,,,,,,,,,,,,,,::,,,,:,:,,,,,:,:,,:::INNDDO=~~~~===~~~~~========~~=====\n', '===~=~~~~~~~~~$NNDNDDD+:::::~~~~:::,,,,,,,,:,,,:::::::::,,,,::,,:,:::,,,:::,::,:,,,:,:,,,,,:::,,,,,::::::=DNNNNZ=~~~~=~:~~~~~===+~~~~~~====+\n', '====~~~~~~~~~=8DNNDDNND+~:,,:~~::::,,,,,,,,,,,,,:,:,::::,,,,,,,,,::::,,,,,:,::::,,,,:::,,,,::::,,:,:::::~ZDDNDD?:~~~==~~~~~:~===~~~=:~~==+=~\n', '======~~~~~~~+ONDNDDDDDZ=::::~~~~::,:,,,,,,,,,,,,::,,,,,,,,,,:,,,::,:,,,::,,:,::,,,,,::,,,::::,,,,:::,,:~$DNND8+~~~~=~:~~~~===+===~~~=~=++=~\n', '=======~~~~~=+ONNNDNNND8+~::::=~:::,,,,,,,,,,,,,,,:,,,,,,,,,,,,,,,,:,,,,,,::::::,,,,,,,,,,,,,,,,,,::::::~ZNNDDDZ=~=~~=::~~==+==~=~~~====+===\n', '=====~~~~~~~==7DDNNDDNND7~:::::~~::,,,,,,,,,,,,,,,,,,,,,,,:,,,::,,:::,,,,,::,,::::,,,:,,,,,,::,,,::::,,:~DDNNNDNI===~~:~~~~==~~~~~~~==++==~~\n', '====~=~~~~~~==+ZDDNDNNNDD+:::::~~~:::::,,,,,,,,,,,,,,,,,,:,,,::::::::,:,,,::::::::,,,:::,,,,:::,,::::::=ODNNNNNND?==~~~:~~=====~~~~==++==~~=\n', '=====~~~~~==~~~?ONNDDNNDND?=~~:~=~::::,,:,,,,,:,,,,,,,,,:::,,:~:::::,:,,,:::::::::,,,,::,,,:,::,,::::~IDNDNNNNNNN$+=~~~~=====~~~~=======~===\n', '==========~~~=++$DDNNNNNNNNNO$7I?=~:::,,,,,,,,,::,,,,,,,,,::::::::,::,:,,,,::::::::,,::,,,:,:,,,,::~:=DDNNNNNNNNNO+~~~=~~~~=~~=~~=======~==+\n', '===~======~~~+?ONNNNNNNNNNNDNNNDD?=~~:::::,,,,,:,,,,,::,,:::::::::,,::,,,,:::::::::,,::,,,,,,:,,,:::~+NNNNNNNNNDN$=~::~====~~~=+~====~~==+++\n', '========~===++$DNNNNNNNNNNNNNNNNNO+~~:::,,:::,,,,,,,,:,::::::::::::,,,,,,,:::::::::,,::,,,,::::,,::~=$NNNNNNNNNND?=~~:====~~~======~~~===+=+\n', '======~~~~===IDNNNNNNNNNNNNNNNDDD8$~~:::,,:::,,,::,:,,::::::::,::::::::::::::~:::::,::::,,,:::,,,:~~+DNNNDNNNNDD7==~:~====~~~=====~==~==+++=\n', '++=+==~====+?ZNNNNNNNNNNNNNNDNDNDD$=~:::::::,:,:,:::,,::,,:::::~==~~:~~::::~~~:::::::::::,,:::,:,::~7DDNNNNNNNNNZ+=~~~====~~~===========++=+\n', '+++========+?ONNNNNNNNNNNNNNNDDDD7?+~~::::::::::::,:,:::::::::::::~~::~~::::~:::::::,:::::,:::::,:~=8NNNNNDNNNNNN$=~~~====~~==+===~======++=\n', '++++=+=====+?ZNNNNNNNNNNNNNNNNNNNI+==~:::::::::,:::::::::,:::,,,::::::::::::::::::::,:::,,,:::::::=INNNNNDNNNNNNN8+~~===~=~~~=====~=+=+=====\n', '++++++=+===++ZNNNNNNDDNNNNNNNNNNN$+==~::::::::::::,,::::::,::,,:::::,::::,::::::::::,:::,::,:::::~=8DNNDNDNNNNNNND?~===~~~~~=====~~=++=+===+\n', '++++++======+7NNNNNNNNNNNNNNNNNNNO?===~::::::::::::::::::::::::::::::,:,:,::::::::~~::::::,:::,::~IDNNDNNNNNDNNNNN+===~=~~===+==~===++=+==++\n', '+++++=======+?ODNNNNNNNNNNNNNNNND$?====~~:::::::::,:::::::::::::::::,,:::::::~~~=++~:::::,::::::~=?DDNNNNNNNNNNNN8+===~~~~==+==~===++++===+?\n', '+++++========?8NNNNNNNNNNNNNNNNNO?++====~~::::::::::::::~==++=+==~~~~~~~~=~~+O7I?+=~~,:::,::::::~=?$NNNNNNNNNNNNN7===+~~==++=~~~===++===++++\n', '+++++++=====++?$777Z8DDNNNNNNND$+=++=====~~~::::::::::::~~~=++I7+=~~~~:~~??+=+=~~~~~:::::::::::~~++?ODNNNDNNNDN8I~~===~~===+=~~~++++====?+++\n', '+++=+=+=======~:::::~=?8NNNN87?+=======~==~~::::::::::::::::::~~~:~:~~::~~~:~~~~:::::::::::::~~~==+++?ONNNND8?=~:~===========~====+====+?+++\n', '+++++=========~~~:~~~=+ION87+====~~======~===~~::::::::::::::::::::,:,::::::~~~:::::,:::::::~==~~===~=+7OD8$?+$OD8~~==~=+=======+=+==+=+?+?=\n', '++++=+========?8DDDDD8Z$$I=====~=~~=======++=~~~:::::::::::::::::::::::::::::~~::::::,::~::~==~~~~=~~~=+?$7ODDD87=~~====+~==~~=+=+++==++?++=\n', '++=+======+++?8NNNNNNNND7+====~~====~~==~==+==~~~~:::::::::::,::::::~::::~~:::::::::::::~~~~~=~~~~=~~====+7$88$I?7O88$?+++==~==++===++++++++\n', '?+++===+++?7ZDNNNNNNNNNN8I===========~=====+++==~~~~:::::::::,,:::::::::::::::::::::::~~~=~~~~~~~=~~~~~==~=IOD8NNNNNNDDDO$I?+=+++===+???++=+\n', '+?+++++?IZ8NNNNNNNNNNNNNDDZI?+====+======~=++====~~~:::::::::,:,:::::::::::::::::::~~::~==~~~~~~~==~~=~====+8DNNNNNNNDNDNDDDZ$III==++????+++\n', '????II7Z8NNNNNNNNNNNNNNNNNNDZ7?++====~==~~=+?+===~~=~~::::::::::::,,::::::,:::::::::~~~~=+=~~=~~~=======~~=I8NNNNNNDNNNDNNNNNDDD8888ZZ$7??+?\n', '??I?$O8NNNNNNNNNNNNNNNNNNNNDNN8$?=========+??==~~=~~~~:::::::::,::,,,:::::,::::::::~~~~~~+?======+?+=++===+ZDNNNNNNDDDDNNDNDNNNDDDDOOO$7I??I\n', '??I7ODNNNNNNNNNNNNNDDNNNNNNNNNNDOI?+=====+II?+=~~~~~~~~~:::::::::,,::::::::::::::~~~::~~~=??+++?+???===+++IONNNDNNNDDDNDNDNNNNNDDDDN887$7I?+\n', 'II$ODNNNNNNNNNNNNNNNDNNNNNNNNNNNNDZ+====?$7?++~~~~~~:~~~~~~~:::::::::::::::::::::::::::~~+?I$OZ77ZO$I++++?$DNNNNNNNDNDDDDDDDDNNNNNNNDD8Z$7?+\n', '?7ODNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNI+?7O8O7?++=~~~~~:::::~~~:~:~:::::::~:::~~~:::::::::~~=+?Z8DDD8ND$$III?ZNNNDNNDNNDDDDDDDDNNNNDNNNNDDD$II?\n', 'IZ8NDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDD88O$I?+==~:~~~:::::::::::~~~~~~~~~~~~~~::::::::::~===?I888DDDDD8OZ$ZDNNNNNNNDDDDDN8DDNNNNNNNDNNDNDDZI+\n', '7ZDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDD8O7I+===~~~:~:::::::~:::~::::::~~:::~::::::::::::~=~+I8DNDDDNNNNNDNNNNNNNNNNDNNNNNDNNNNNNDNDNNDDNDD$I\n', '$ZDNNNNNNNNNNNNNNNNNNNNNNNDNNNNNNNNDNDDDZI+==~~~~~~~~:::~::::::::::::::::::::::~::::::~~~===?ODDNNNNNNNNDNNNNNNNNNNNNNNNNNDNNDNNNNNNNNDNNDO7\n', '7ZDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNND8$I=~~~~~~~:~:~:~::::::::::::::::::::::::~::::~~~~~~~=I8DNNNNNNNNNNNNNNNNNNNDNNDNNDNDDDNNNNDNNNDDND8$\n', '7ZDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDD8O7+=~~~~~~~~:::~~::::::::::::::::::::::::::~::~::~~~~~+I7DNNNNNNNNNNNNNNNNNNDNNDNNNNNDDDNNNNNNNDDDD8$\n', '7ZDNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNDD8$I+~~~~::~~~~~~:~~:~::::::::::::::::::::::::::~~:~~:~~=?I78DDDNNNNNNNDNNNNNNNDNDNNNNDDNNNNNNNNNDDDDD$\n', 'I$ODNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNND8OI++~~~~~~~~:::~:~::::::::::::~::::::::::::::::~~~:~~~~~=~+?7IZDDNNNNNNNNNNNNNNNNNNNNDDDNNNNNDNNNNNNO7\n', 'I7ZDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNND8Z?==~~~~~~:::::~:::::::::::::::::::~:::::::~::~~:~~~~:~=?===~~~+$DNNNNNNNNNNNNDNNDNNDNNNDNNND88DDNNDZ7\n', 'III$8NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDZ7+=~~~~:~:::::::::::::::::::::~::~~:::::::::~~:~:::~:~~++~~~::::~+I8DNNNNNNNNNNNNNNNNNNNNNNNDD8DDNND7I\n', '$I??78NNNNNNNNNNNNNNNNNNNNNNNNNNNDDDZI+=~~~~~~~~~:~~~~:~:::::::::::~::~:~:~::~~~~~~:~::::~~~~?=~=~::::::~+78DNNNNNNNNNNNNDDNNNNNNNDD8DDN8O7I\n', 'ZI???$ONDDNNNNNNNNNNNNNNNNNNNND8OZ$$?+=~~~~~~~~~:~~~~~:::::::::~~:::~~~~~~~~::~~~:::~::::=~:~?+=~~:::::::~=IZDDNNNDNNNDDNDDDNNNNDDDDDDDDZ7II\n', 'II+++?IZ8D88DDNNNNNNNNDDD888O$ZZ$???+==~~~~~~~~~~~~~~~~~:::~:~:~~:~:::~~~~~~~~~:~~~:~:~~:~~~+=~~~~:::::::~==?$77I?7$ZZZZ7II7O8OODD8D8OZ$7III\n', '??++=++I7ZZOZ$$$$$$$$IIII??++++?+==??=~~=~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~=++===~~::::::~~~~=~~:::~=====~~~+??7$OZ7IIIIIIII\n', '?+===+=+??I??=++===++==~==~~====+===+======~~~~~~~~~~~~~~~~~~~~~:~~~~~~~~~~~~~~~~~~~:~~::~~++~==~:~:~~:::~~~~~~~:::::~~~~~~~==I7II?+++?IIIII\n', '+++++===++++===========~~~~~~~=====++=====~~~=~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~++===~~~:~~~::~~~~~~::~~:~::~~~~~~~=+??+===++??II\n', '?++=+====+============~~~~=~=====+=====~==~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~====~~~~::~:::~~~~~~::~~~:::~::~~~~+?===~=~===+?I\n', '+++++======================~==~~===+==~=~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~=~~~===~~~~~~~~~~~~==~==~~~~~~~~~~~~~~~~~::~~~~~~~~~~~=++?+======++?\n', '+++====+++=================~=~~~===++==~=~~~~~~~~~~~~~~~~~~~~~~~~~~~=~~~~~~~~~~~~~~~~~~~~~~=++==~~~~~~~~~~~~~~=~~~~~~~~~~~~~~~=++==+=====+++\n', '?+++++=+++===================~====+==+====~====~~~~~~~~~~~~=~~~~~~~=~~=~~~~~~~===~~~~~~~~~==~+=~~~~~~~~~~~=~~==~~~~~~~~~~~~====?+=+++=====++\n', ' */\n', '\n', '/**\n', ' * Created on 2018-08-16 03:50\n', ' * @summary\n', ' * Don&#39;t let &#39;em say you ain&#39;t beautiful.\n', ' * They can all get fucked.\n', ' * Just stay true to you.\n', ' * @author yong\n', ' */\n', 'pragma solidity ^0.4.23;\n', '\n', '\n', 'library SafeMath {\n', '\n', '    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n', '        if (a == 0) {\n', '            return 0;\n', '        }\n', '\n', '        c = a * b;\n', '        assert(c / a == b);\n', '        return c;\n', '    }\n', '\n', '    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        return a / b;\n', '    }\n', '\n', '    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        assert(b <= a);\n', '        return a - b;\n', '    }\n', '\n', '    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n', '        c = a + b;\n', '        assert(c >= a);\n', '        return c;\n', '    }\n', '}\n', '\n', 'contract Ownable {\n', '  address public owner;\n', '\n', '\n', '  event OwnershipRenounced(address indexed previousOwner);\n', '  event OwnershipTransferred(\n', '    address indexed previousOwner,\n', '    address indexed newOwner\n', '  );\n', '\n', '  constructor() public {\n', '    owner = msg.sender;\n', '  }\n', '\n', '  modifier onlyOwner() {\n', '    require(msg.sender == owner);\n', '    _;\n', '  }\n', '\n', '  function renounceOwnership() public onlyOwner {\n', '    emit OwnershipRenounced(owner);\n', '    owner = address(0);\n', '  }\n', '\n', '  function transferOwnership(address _newOwner) public onlyOwner {\n', '    _transferOwnership(_newOwner);\n', '  }\n', '\n', '  function _transferOwnership(address _newOwner) internal {\n', '    require(_newOwner != address(0));\n', '    emit OwnershipTransferred(owner, _newOwner);\n', '    owner = _newOwner;\n', '  }\n', '\n', '}\n', '\n', 'contract ERC20 is Ownable {\n', '\n', '    using SafeMath for uint256;\n', '\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '    event Approval(address indexed owner, address indexed spender, uint256 value);\n', '\n', '    mapping(address => uint256) balances;\n', '    mapping (address => mapping (address => uint256)) internal allowed;\n', '\n', '    uint256 totalSupply_;\n', '\n', '    function ()\n', '        public\n', '        payable {\n', '    }\n', '\n', '    function totalSupply() public view returns (uint256) {\n', '        return totalSupply_;\n', '    }\n', '\n', '    function transfer(address _to, uint256 _value) public returns (bool) {\n', '        require(_to != address(0));\n', '        require(_value <= balances[msg.sender]);\n', '\n', '        balances[msg.sender] = balances[msg.sender].sub(_value);\n', '        balances[_to] = balances[_to].add(_value);\n', '        emit Transfer(msg.sender, _to, _value);\n', '        return true;\n', '    }\n', '\n', '    function balanceOf(address _owner) public view returns (uint256) {\n', '        return balances[_owner];\n', '    }\n', '\n', '    function transferFrom(\n', '        address _from,\n', '        address _to,\n', '        uint256 _value\n', '    )\n', '        public\n', '        returns (bool)\n', '    {\n', '        require(_to != address(0));\n', '        require(_value <= balances[_from]);\n', '        require(_value <= allowed[_from][msg.sender]);\n', '\n', '        balances[_from] = balances[_from].sub(_value);\n', '        balances[_to] = balances[_to].add(_value);\n', '        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n', '        emit Transfer(_from, _to, _value);\n', '        return true;\n', '    }\n', '\n', '    function approve(address _spender, uint256 _value) public returns (bool) {\n', '        allowed[msg.sender][_spender] = _value;\n', '        emit Approval(msg.sender, _spender, _value);\n', '        return true;\n', '    }\n', '\n', '    function allowance(\n', '        address _owner,\n', '        address _spender\n', '     )\n', '        public\n', '        view\n', '        returns (uint256)\n', '    {\n', '        return allowed[_owner][_spender];\n', '    }\n', '\n', '    function increaseApproval(\n', '        address _spender,\n', '        uint _addedValue\n', '    )\n', '        public\n', '        returns (bool)\n', '    {\n', '        allowed[msg.sender][_spender] = (\n', '            allowed[msg.sender][_spender].add(_addedValue));\n', '        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n', '        return true;\n', '    }\n', '\n', '    function decreaseApproval(\n', '        address _spender,\n', '        uint _subtractedValue\n', '    )\n', '        public\n', '        returns (bool)\n', '    {\n', '        uint oldValue = allowed[msg.sender][_spender];\n', '        if (_subtractedValue > oldValue) {\n', '            allowed[msg.sender][_spender] = 0;\n', '        } else {\n', '            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n', '        }\n', '        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n', '        return true;\n', '    }\n', '\n', '    function withdraw()\n', '        public\n', '        onlyOwner {\n', '        msg.sender.transfer(address(this).balance);\n', '    }\n', '\n', '}\n', '\n', '\n', 'contract ERC223ReceivingContract { \n', '    function tokenFallback(address _from, uint _value, bytes _data) public;\n', '}\n', '\n', '\n', 'contract ERC223 is ERC20 {\n', '\n', '    function transfer(address _to, uint256 _value)\n', '        public\n', '        returns (bool) {\n', '        require(_to != address(0));\n', '        require(_value <= balances[msg.sender]);\n', '\n', '        bytes memory empty;\n', '        uint256 codeLength;\n', '\n', '        assembly {\n', '            codeLength := extcodesize(_to)\n', '        }\n', '\n', '        balances[msg.sender] = balances[msg.sender].sub(_value);\n', '        balances[_to] = balances[_to].add(_value);\n', '        if(codeLength > 0) {\n', '            ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);\n', '            receiver.tokenFallback(msg.sender, _value, empty);\n', '        }\n', '        emit Transfer(msg.sender, _to, _value);\n', '        return true;\n', '    }\n', '\n', '    function transferFrom(\n', '        address _from,\n', '        address _to,\n', '        uint256 _value)\n', '        public\n', '        returns (bool) {\n', '        require(_to != address(0));\n', '        require(_value <= balances[_from]);\n', '        require(_value <= allowed[_from][msg.sender]);\n', '\n', '        bytes memory empty;\n', '        uint256 codeLength;\n', '\n', '        assembly {\n', '            codeLength := extcodesize(_to)\n', '        }\n', '\n', '        balances[_from] = balances[_from].sub(_value);\n', '\n', '        if(codeLength > 0) {\n', '            ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);\n', '            receiver.tokenFallback(msg.sender, _value, empty);\n', '        }\n', '\n', '        balances[_to] = balances[_to].add(_value);\n', '        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n', '        emit Transfer(_from, _to, _value);\n', '        return true;\n', '    }\n', '\n', '}\n', '\n', '\n', '/**\n', ' * ╔╗░░╔╦╗░░╔╗╔╗░░░░░░░░░░░░╔═══╦╗░╔╗░░░░░░░\n', ' * ║╚╗╔╝║╚╗╔╝║║║░░░░░░░░░░░░║╔═╗║║░║║░░░░░░░\n', ' * ╚╗╚╝╔╩╗╚╝╔╝║║░░╔══╦╗╔╦══╗║║░╚╣╚═╣║╔══╦══╗\n', ' * ░╚╗╔╝░╚╗╔╝░║║░╔╣╔╗║╚╝║║═╣║║░╔╣╔╗║║║╔╗║║═╣\n', ' * ░░║║░░░║║░░║╚═╝║╚╝╠╗╔╣║═╣║╚═╝║║║║╚╣╚╝║║═╣\n', ' * ░░╚╝░░░╚╝░░╚═══╩══╝╚╝╚══╝╚═══╩╝╚╩═╩══╩══╝\n', ' */\n', 'contract Chloe is ERC223 {\n', '\n', '    string public constant name = "Shuhan Liao";\n', '    string public constant symbol = "Chloe";\n', '    uint8 public constant decimals = 0;\n', '    string public message;\n', '\n', '    /* constructor */\n', '    constructor()\n', '        public {\n', '\n', '        totalSupply_ = 2;\n', '        balances[owner] = totalSupply_;\n', '        emit Transfer(0x0, owner, totalSupply_);\n', '\n', '        message = "Happy Valentines Day!";\n', '    }\n', '}']
['/**\n', '~~~~=~~~~~=~~~=~=~~~==~~======~~====~~~~~~~=~~==~=~==~~~~::~~::~::::::::::~~~:~~~~~~~==~~~++=~~~:=~::~:::~~~~=====~==~~~~:::~:~:=====+=~~~=~\n', '~~~~~~~~~~~~~~~~~~~~~~~:~~~=~::~=:=~~~~:~~~~~~~~~~~~~:~~::::~:::::,:::~~~~~~~~=~======~=+===~:~::~=~:::~::~~~~=:=====~~=~:~~~:~~~====~~~=~~~\n', '~==~==~~~~~~~:~~~~~~=:~~~:::~::~:~~::::::~~~::~:~:~~~~~~~=====~:~:::~:~~~~:~~~=====:~=~~===~~~~~::::~::::~~~~:~:===~====~~~~~~~~====~=====~~\n', '~=~~==~~====~~~~~~~~~=:~:~~~~:~~~~::~~::::::~::~~~:=~+7Z8DDDDDDD8ZI+?77???+I????=++++==~~=~=~::::~::,:~:::::::~:~~~~~~~~~~~~~::~~~==~~~=~===\n', '=~~=~~~==~~=~~~=~~~==~:~~~~:~:~~:~::~~:::~:~=~=?IIODNNNNNNNNNNNNNNNDDDDNDDDDD88Z7?+++++~~:=~~::::~~~~:~::::::~~~~~======~~=~~=~~~~~~~~======\n', '~~~~~~~~~~~~:~~~~~~~~~~~~~~~~~~~~~~~=~~~=~~=7ODNNDNNDNNNNNNNNNNNNNNNDNNNNNNNNNNNNNND8$?+====~~~:~=~~:~~~:~:~:~~~~~~~~=~====~~~~=~~~~~~=====+\n', '~~~~:~~~:~~~~~~~~:~:~~~:~~~=~~~~~~~~~===I$8NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDZ?=~~~~~:~::::::::~::~::~:~:~===~~==~~~~~~~~~~=====~\n', '~~~~~~~~~~~~~~=:~~~:~:~~~~~~~::~:~~~~?78DDNNNNNNDNNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNDNO?==~~~~~::::~::,::::::~:~=~====?+===~~~:~~~~~~~=\n', '==~~~~~~~~=~~~~~~~~::::~::::::::~:=IZDNDNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDO+~+~~~~::~~:::=~~~~~~~~~======~==~~====~=====\n', '==~~~~~~~~~~~:~~~~~~::~~::::::~:~78DNNNNNNNNNNDDDNNNNNNNNNNNNNNNNNNNDDDDNNNNNNNNNNNNNNNNNNNNNNNDZ?=~:~::~::~::~:~:~:~~::~~~=~=======~~~==~~~\n', '~=~~~~~=~~~:::~:::~~~~~::~~~~~+INNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDODNDNNNNNNNNNNNNNNNNNNNNNNNDNZ=~:::~::~~::::~:~:~~~~=~========~===~==~~\n', '==~~===~~~~~~::~~:~:~:::~~~~=?8DNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDD8DDNNNNNNNNNNNNNNNNNNDNNNNNNNNNN++~~~~::~:~=~:~~:~~~~~~~=:====++==+==~~~\n', '=======~~~~~~~~~::~~::,:::~=ZDNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNDDDD88DDNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNDZ=:~:~:~~=~::~~~~::::~~:::~~~==~~~==:~~\n', '~====~==~~~~~~~~:~::::::::=ONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDDDDDDD8DNNNNNNNNNNNNMNNNNNNNNNNNNNDNNNDNO==~~:=~~:~::~:~~::~~~::~~=~~=========\n', '=======~=~~~~~~~::~~:~:~=ZDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDDDDNNDDDDDNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNDDO?~:~~~~~~::~~~~:~~::~:~~=~==:~~~~~=~\n', '+====~~==~~~~~~::~~::~~?8DDDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDDDDDDD8NDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNND8?=~~::::~~~::~:~:~:~~~~~:~~~~======\n', '==========~~:::::::::~=8NNNNNNNNNNNNNNNNNNNNDNDNDNNNNDDDNDDD8DDDDD88DDDDDNNNNNNNNNDNNNNNNNNNNNNNNNNNNNDDND+~~~~~~~:~~~=~::=~~:~~::~~~~~~:~=~\n', '==~===~==~~~~::::::::=ODNNNNNNNNNNNNNNNNNNNNDDDNNNNDDDDNDDDODDDD8OO8D88DD8DDNDDNNNNNNDNNNNNNDNNNNNNNNNDDNND?=~~::~~~~~~:~:~~~~:~:~~~~~~~~:~=\n', '==~~~~~~~~~~~~~~~~:~~ZNDNNNNNNNNNNNNNNNNNDDDDDNDDDD88D8OOZ$8DD8OZ7$88ZOZ88ODDDDNDDNNDDDNDNNNDNNNNNNNNNNDDDND+:::~:~~~:~~=~~=~==~~==~~=~~~~~~\n', '======~~~~~~~~~~~~~=ZDNNNNNNNNNNNNNNNNNDD8O88D8D8D8D8Z$O777ZO777++7$7I$ZZZ$ZO8DDDDDDNNDDDNDDNDDNNNDDDNNNDDNN8?~~:~~~~=~~~~~~~~~~~~==~~~~~~~~\n', '====~~~~=~~~~:~~~==ZNNDNNNNNNNNNNNNNND8DZ888DDD8OD8O7II?I$ZI?+?+=+?Z?+I77II??7OD8DZDDDDD88DDDNNNNDNNNN8DDDDDD8+~::~::=:::~~~~===~===========\n', '=~~~~~~~~=~~:~~~~~?NNNNNNNNNNNNNNNNDD88ZOO88DZZ88O7I?++I77=~~~+~~~?I~~~=+~+++?+Z8OOZDDDD88ODNNDDDDNDDDDNDDDDDDO=~~:::~::~~:===~~~~=~~~====~=\n', '~~=~~~~~~~~~~~~~~~ZNNNNNNNNNNNNNND8OOZ7$OOOOI7ZOZI??=7?I+~:::~~=:~++~~:=~:~?====$$O7I8DD8OO88D8DDDDDDNDNDDNDDNNO=~:::~:::~::~:~~=~~~~~===~==\n', '=~=~~~~~~~~~~~~~~=8NNNNNNNNNNNNND88OZ$$ZZZO$$ZZ$I+?77$I:::::~:::::=~::,~:,:~~~~~=7OOI7Z888OZ88DNND8DDNNND8DDDNND+~::::~::~:~::~~~::~::~~~~=~\n', '=~~~~~~====~~~===$NNNNNNNNNNDDDDDOO77$ZO877I??+==?II?=::,,~~:,,,,:~:~:,::::::~=~~=I$7=?$88OOZZO8DDDDODDDDDDDNNND8~~::~,:::,,:::~~~~:~~~=~~~~\n', '~~~~~~~~~~~~~~===ONNNNNNNNNNND88Z$$I$O88Z$?+=~~=+I?=:,:::::::,,,,:::,:::,,::,,~~,:~?7+=+$88O7$ZOD888O8DDDDDDNNND8I~~,::,::::~:~~:~:~~::~~~:~\n', '~~~~~~~~~~=~~~==?DNNNNNNNNNNDDD8$Z77O8DOI?+==~=7I~,,:,,,::,,,,,,,,,,:,::,,::,:::~~~~=I=~+7OOO$$7$D8ZOZ8DDNDNDDDDD8=~::::::~:::~~~~~~~=~~~~~~\n', '==~~~~~~~~~:~~~=ZNNNNNNNNNNDDD8ZZ777D8Z+=+~==II=:,,,,,,,,:,::,,,,,,,,,,:,::::::::~~~~+?~~+OIZ77IIZZ$Z$OODNDNDNNNNDI=:,~:::~:~:~~~~~~~::~~:~~\n', '=~~~~~~~~~~~:~~+8DNNNNNNNNNND8OZ$$Z88I++===+I=~::,,,,,,,,,,,,:,,:,,.,,,,,,,,,,:,,,::~=?I=~+I?7II7IOZOOZ88DDNNNNNNDZ=~~~~~~=:~~::~~=~~~~=~~=~\n', '~=~~~=~~~~~~~~~?DNNNNNNNNNNND8OZ7OD87??+~~==::::,,,,,.,,,,,,,,,,:,,.,,,.,,,.:,:,,,,,::++==~+++?+I77Z8ZO7$8DNNNNNDN8=~===~~~~===~~~=~~~~=~~~=\n', '==~~~~~~~~~~~==IDNDDNNNNNNNDDDZ7ZDD$I7?==+=:,,,:,,,,,,,,,,,,,,:::,,,,:...,..,,,,,,.,,,:+?I+=~~=?=IZZ88Z$7$DNNNNDDDZ==~~:~::~~~~~:~===+======\n', '===~~~=~~~~~~==7DNNDNNNNNNNNDDO$OD$??+==~~:,,,,,,,,,,,,,.,,,,,,,,,,,,.,,,,,,,,,,,,,,.,,,:~+==~~+I=?7ZZ777$8NNNDDDDD?=~~~~~~====~~~~~:~~~~===\n', '~~~=~~~~~~~=~==ZNNNNNNNNNNNND8ZZ8$====+==~:,,,,,,,,,,,,,,.,,.,,,,,,::,.,,,.,,,,,,,...,,,,~~==~::=?=I7ZII??8NNNDDDDDI~~::~:,:::::~~:~~~~~~===\n', '=~~=~~~~~~====+8NDNDNNNNNNNDND788?===~~~~::::,,,.,,,,,,,,,,,,,,,,,,,,,,,.,.,,,,,:,,,.,,...,~==::~==~=I??+ZDDDDDNDDDZ+~~~~~~~~:::~~:::::~=~~=\n', '~=~~~~~~~:~==+?8DNDNNNNNNNNNDD8D8I+=~==::,::::,,,,,,,::,:,,,,,.,,,,:,,,.,,..:,,,,.,...,.,,,,,~~:,:+~~~=7?78DDNNNNDNO=~,:,:::::::~~:~~:=~:~~=\n', '~~~~~~~~~~~~~=+8NDNNNNDNNDNNDDDDOI?==~~::::::,,,,,,,,,,,,,,,,.,:,,,:,,,,,,,,:,,,:::,,,.,,,,,:~::::~~,~=I?$8DDNDDNDD8+~~~~~::~::~~~:~~~~~~~==\n', '~~~~~~~~~~~~~=?DNNNNNDNNNNNNDDDD$I++=~=:::::,:,:,,,:,.,:,,,,,,,,..,,,,,,,,...,,,,,,.,..,,,:::::,:,,:~==+?ZD8DDDDDDDD=:,:::::~=~~:~~~~~~~~===\n', '~~~~~~~~~~~~:~+8NNNNDNDNNNNDD8D8I+==~~~:::,:,,,,:,,,.,..,,,,,,,.,,,,,,,,,,.,,,,,,,,,,,,,,.,:::::,,,:~~~??ODDDDNDDDD8+~::~~~::~~~~~~~~===~==~\n', '~~~~~~~~~~~~~~+ONNNDNNNNNDNDD8DZ+=====~::::::::,:,:,,,,.,,,,,:,,,,,.,::,,,,..,,,,,:,,,,,,,:::,,,,,,,:~~+?ODDDDDDDDD8I:::::~~~~~~~~~~~~~~====\n', '~~~~~~~~~~:~~~+8NNNNNNNNDDNN88O?+=~~~~~::::::,,,,,,,,,,,.,.,,,.,.,,,,:,,,,,:,,,,,::,,,,,,,,,,::::...,:~+I8DDDDDDDDD8?~~:::=~~==~~===~~~~~~~=\n', '~~~~~~~~~~~~~~+8NNNNNNNNDDD8OZ7+=====~~::::::::,,,,,,,,,,,,,,,,,,,...,,:,,,,,,,,,,,,.,,,,,,,::,,,,,,::~+?ZDDNDDDDDDD?~~~=~~~~~~~~~~~~~~=~=~~\n', '~~~~~~~~~~~~~~?DNNNNNNNNNND87?+=~=~:~:~:::::::,:,,:,,,:,,,,,,,,:,,,,,,,,,,::,,,,,,,::,:...,,,,:,,,,,,:~?+788NDDDDDDD?~~~~~~~~==~~~~~~:~~~~==\n', '~~~~~=~~~~~~~~+ZDDNNNNNNND8$?===~~~~~~~~~:::::::::,::,,,,,,,,,:,,,,,,,,,,,,,,,,,,,,,,,,,,,:,,::,:,,,,:~=+I8DDDDDDD8D?~~~~~~~~~~=~~~~~~~~~~~=\n', '~~~~~~~~~~~~~~+$$DDNNNNND8$7+====~=~~~~~~~::~~=~~~~=~~:::,:,,,:,,,:,,,,,,:,,,,..,,,:,,,,,,:~:::,,,,:,:~~=+$DDDDDDDDZ===~~~~~~:~~:~~~~==~====\n', '~~~~~~~~~:~~~~=II$DDDNNNDDZI===~~~~~~~~~~~::~~:~:~~~~::~::,,,,:,,,,,,,,,,,,,,.,,,,,:::~:::~~:~~~:,,,:~~~=~+88NDDNDDI~=~:~=~~~~~~=~~~~~======\n', '~~~~~~~~~::~~~~~==?8DNDDD8O?+=~~~~~~~~~~~~~~~::::::::~:~:~:~:,,:,:,::,,.,,,,,,.,,,::::::::~~~::::~:::~~~~~?8DDD87?$+~=~~~~~:~~~~~~======~===\n', '~~~~~~~~~~:~~~~~~~:~IDNNNDO?==~:~~=~:::~~~:::::::::,::,::~:::::,,,,::,,,,,:,,,,,,,:~:::::,,:,::,,::~:~~~~~=8DDD?:~=~~~~:~=~:~~~~~===+======~\n', '~~~~~~::~~~:~~~~++~:~ZDDD8Z?=~~:~~~~~~:::::::,,:::,:::,,:,:::,,:,,,,,,,,,,,,,.,,,,,:::,,,,:::::,::::,~~~~~+8DDI~~====~::::~~~~==~~===~=====+\n', '~~~~~~~:::::~:~~+=~::=8888Z?=~~~~~:~~~::::::::::,,,::::,,,::::,,,,,,:,,.,,,,:,:.,,,::,,,.::::,,,,,,::~~:::=8DD=~~=~~~~::~~~:~=+===~=:=~=~~~=\n', '~~~~::~:~::::::~~~~:,:?$ZOZ?=~~~~::~:::::::::::::::::::,,,,:::,:,:::,,,,,,,,,::,,,,::::,:,:::::::,,::~:~::~$O+~~~~~~:~::~~~~=+=====~~======+\n', '~~~~~~~~:~~~~~~~~~::,:~=+$Z?=~~~~:::::::~::::~=~=++++=~~~:::::,,,,:,,:,,,,,,,,,,,,,:::::::~~~~:,:::::::~::=I~:~====~~~::~~==+==~~::~~~===~=+\n', '~~~~~~~~~~~~~~~~~::,,:==+$$?=~~:~:::::::~::~~=?Z8DD8DD87+~::::::::,,,,,,,,.,:::,,,::~+IZO8O7+=~~::::::::,:~+::~~~~~~~~~~~~===+=~~~:~~~====++\n', '~~~~~:~~~~::~~~=Z7::,:~~=I$?=~~::::::,::::~~+$Z?$NIOD?7$~==~::::::,,,,:,,,,,,:::,,:=7$ID7I8I?ZO+:,,:::::,,:~::=~~~::::~====~~~~~~~~~======+=\n', '~~~~~~~~~:~::~=+ZDI:::~::~+?==:::::::::,:::~==~~+DDDO8DI:,:~::,,,,,,,,,,,.,,,:,,,:::+8D8888=:~=?=:,::::::,:::I?==~~~~:~~=~~=~:~~~~~~=~==+=~=\n', '~~~~~~~~:~~~~~~=I88=::~:::~+=~~::,::,,:,,:::::::~+O888+::::::,::::,,,:,,,,,,,,,,,,,::7888O?::~~:,,::,,,,,:::~DO=~~~~::======~~~~~~=========~\n', '~~~~~~~~:~~~~~=+Z8DO=::~::~==~~:::,,,,,:,,:::::::::~=~:::::::,:,::::,,:::,,,,::,,,,::~~~~,::::::,,,:::,,,:::7DDI~::~~~=~~~:~:=~=~===~===~=~~\n', '~~~~~~~~~~~~~~=$DDD8$:::=~~~=~~::,,,,,,,,,::::::::,:::,::::::,,,,:,,,,,:,,,.,,,,,,,:,::,,,::::::,::::::::~~7DND8=~::~~=~~~~~:~~~===~~~~~~~~=\n', '==~~~~~~~~~~~=?8DDDDNI:::~~:~~~:::,,,,,,,,,,,,::,,::::::::::,:,,,,,,,:,,,,,,,,,,,,,,::,,,,:,:,,,,,:,:,,:::INNDDO=~~~~===~~~~~========~~=====\n', '===~=~~~~~~~~~$NNDNDDD+:::::~~~~:::,,,,,,,,:,,,:::::::::,,,,::,,:,:::,,,:::,::,:,,,:,:,,,,,:::,,,,,::::::=DNNNNZ=~~~~=~:~~~~~===+~~~~~~====+\n', '====~~~~~~~~~=8DNNDDNND+~:,,:~~::::,,,,,,,,,,,,,:,:,::::,,,,,,,,,::::,,,,,:,::::,,,,:::,,,,::::,,:,:::::~ZDDNDD?:~~~==~~~~~:~===~~~=:~~==+=~\n', '======~~~~~~~+ONDNDDDDDZ=::::~~~~::,:,,,,,,,,,,,,::,,,,,,,,,,:,,,::,:,,,::,,:,::,,,,,::,,,::::,,,,:::,,:~$DNND8+~~~~=~:~~~~===+===~~~=~=++=~\n', '=======~~~~~=+ONNNDNNND8+~::::=~:::,,,,,,,,,,,,,,,:,,,,,,,,,,,,,,,,:,,,,,,::::::,,,,,,,,,,,,,,,,,,::::::~ZNNDDDZ=~=~~=::~~==+==~=~~~====+===\n', '=====~~~~~~~==7DDNNDDNND7~:::::~~::,,,,,,,,,,,,,,,,,,,,,,,:,,,::,,:::,,,,,::,,::::,,,:,,,,,,::,,,::::,,:~DDNNNDNI===~~:~~~~==~~~~~~~==++==~~\n', '====~=~~~~~~==+ZDDNDNNNDD+:::::~~~:::::,,,,,,,,,,,,,,,,,,:,,,::::::::,:,,,::::::::,,,:::,,,,:::,,::::::=ODNNNNNND?==~~~:~~=====~~~~==++==~~=\n', '=====~~~~~==~~~?ONNDDNNDND?=~~:~=~::::,,:,,,,,:,,,,,,,,,:::,,:~:::::,:,,,:::::::::,,,,::,,,:,::,,::::~IDNDNNNNNNN$+=~~~~=====~~~~=======~===\n', '==========~~~=++$DDNNNNNNNNNO$7I?=~:::,,,,,,,,,::,,,,,,,,,::::::::,::,:,,,,::::::::,,::,,,:,:,,,,::~:=DDNNNNNNNNNO+~~~=~~~~=~~=~~=======~==+\n', '===~======~~~+?ONNNNNNNNNNNDNNNDD?=~~:::::,,,,,:,,,,,::,,:::::::::,,::,,,,:::::::::,,::,,,,,,:,,,:::~+NNNNNNNNNDN$=~::~====~~~=+~====~~==+++\n', '========~===++$DNNNNNNNNNNNNNNNNNO+~~:::,,:::,,,,,,,,:,::::::::::::,,,,,,,:::::::::,,::,,,,::::,,::~=$NNNNNNNNNND?=~~:====~~~======~~~===+=+\n', '======~~~~===IDNNNNNNNNNNNNNNNDDD8$~~:::,,:::,,,::,:,,::::::::,::::::::::::::~:::::,::::,,,:::,,,:~~+DNNNDNNNNDD7==~:~====~~~=====~==~==+++=\n', '++=+==~====+?ZNNNNNNNNNNNNNNDNDNDD$=~:::::::,:,:,:::,,::,,:::::~==~~:~~::::~~~:::::::::::,,:::,:,::~7DDNNNNNNNNNZ+=~~~====~~~===========++=+\n', '+++========+?ONNNNNNNNNNNNNNNDDDD7?+~~::::::::::::,:,:::::::::::::~~::~~::::~:::::::,:::::,:::::,:~=8NNNNNDNNNNNN$=~~~====~~==+===~======++=\n', '++++=+=====+?ZNNNNNNNNNNNNNNNNNNNI+==~:::::::::,:::::::::,:::,,,::::::::::::::::::::,:::,,,:::::::=INNNNNDNNNNNNN8+~~===~=~~~=====~=+=+=====\n', '++++++=+===++ZNNNNNNDDNNNNNNNNNNN$+==~::::::::::::,,::::::,::,,:::::,::::,::::::::::,:::,::,:::::~=8DNNDNDNNNNNNND?~===~~~~~=====~~=++=+===+\n', '++++++======+7NNNNNNNNNNNNNNNNNNNO?===~::::::::::::::::::::::::::::::,:,:,::::::::~~::::::,:::,::~IDNNDNNNNNDNNNNN+===~=~~===+==~===++=+==++\n', '+++++=======+?ODNNNNNNNNNNNNNNNND$?====~~:::::::::,:::::::::::::::::,,:::::::~~~=++~:::::,::::::~=?DDNNNNNNNNNNNN8+===~~~~==+==~===++++===+?\n', '+++++========?8NNNNNNNNNNNNNNNNNO?++====~~::::::::::::::~==++=+==~~~~~~~~=~~+O7I?+=~~,:::,::::::~=?$NNNNNNNNNNNNN7===+~~==++=~~~===++===++++\n', '+++++++=====++?$777Z8DDNNNNNNND$+=++=====~~~::::::::::::~~~=++I7+=~~~~:~~??+=+=~~~~~:::::::::::~~++?ODNNNDNNNDN8I~~===~~===+=~~~++++====?+++\n', '+++=+=+=======~:::::~=?8NNNN87?+=======~==~~::::::::::::::::::~~~:~:~~::~~~:~~~~:::::::::::::~~~==+++?ONNNND8?=~:~===========~====+====+?+++\n', '+++++=========~~~:~~~=+ION87+====~~======~===~~::::::::::::::::::::,:,::::::~~~:::::,:::::::~==~~===~=+7OD8$?+$OD8~~==~=+=======+=+==+=+?+?=\n', '++++=+========?8DDDDD8Z$$I=====~=~~=======++=~~~:::::::::::::::::::::::::::::~~::::::,::~::~==~~~~=~~~=+?$7ODDD87=~~====+~==~~=+=+++==++?++=\n', '++=+======+++?8NNNNNNNND7+====~~====~~==~==+==~~~~:::::::::::,::::::~::::~~:::::::::::::~~~~~=~~~~=~~====+7$88$I?7O88$?+++==~==++===++++++++\n', '?+++===+++?7ZDNNNNNNNNNN8I===========~=====+++==~~~~:::::::::,,:::::::::::::::::::::::~~~=~~~~~~~=~~~~~==~=IOD8NNNNNNDDDO$I?+=+++===+???++=+\n', '+?+++++?IZ8NNNNNNNNNNNNNDDZI?+====+======~=++====~~~:::::::::,:,:::::::::::::::::::~~::~==~~~~~~~==~~=~====+8DNNNNNNNDNDNDDDZ$III==++????+++\n', '????II7Z8NNNNNNNNNNNNNNNNNNDZ7?++====~==~~=+?+===~~=~~::::::::::::,,::::::,:::::::::~~~~=+=~~=~~~=======~~=I8NNNNNNDNNNDNNNNNDDD8888ZZ$7??+?\n', '??I?$O8NNNNNNNNNNNNNNNNNNNNDNN8$?=========+??==~~=~~~~:::::::::,::,,,:::::,::::::::~~~~~~+?======+?+=++===+ZDNNNNNNDDDDNNDNDNNNDDDDOOO$7I??I\n', '??I7ODNNNNNNNNNNNNNDDNNNNNNNNNNDOI?+=====+II?+=~~~~~~~~~:::::::::,,::::::::::::::~~~::~~~=??+++?+???===+++IONNNDNNNDDDNDNDNNNNNDDDDN887$7I?+\n', 'II$ODNNNNNNNNNNNNNNNDNNNNNNNNNNNNDZ+====?$7?++~~~~~~:~~~~~~~:::::::::::::::::::::::::::~~+?I$OZ77ZO$I++++?$DNNNNNNNDNDDDDDDDDNNNNNNNDD8Z$7?+\n', '?7ODNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNI+?7O8O7?++=~~~~~:::::~~~:~:~:::::::~:::~~~:::::::::~~=+?Z8DDD8ND$$III?ZNNNDNNDNNDDDDDDDDNNNNDNNNNDDD$II?\n', 'IZ8NDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDD88O$I?+==~:~~~:::::::::::~~~~~~~~~~~~~~::::::::::~===?I888DDDDD8OZ$ZDNNNNNNNDDDDDN8DDNNNNNNNDNNDNDDZI+\n', '7ZDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDD8O7I+===~~~:~:::::::~:::~::::::~~:::~::::::::::::~=~+I8DNDDDNNNNNDNNNNNNNNNNDNNNNNDNNNNNNDNDNNDDNDD$I\n', '$ZDNNNNNNNNNNNNNNNNNNNNNNNDNNNNNNNNDNDDDZI+==~~~~~~~~:::~::::::::::::::::::::::~::::::~~~===?ODDNNNNNNNNDNNNNNNNNNNNNNNNNNDNNDNNNNNNNNDNNDO7\n', '7ZDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNND8$I=~~~~~~~:~:~:~::::::::::::::::::::::::~::::~~~~~~~=I8DNNNNNNNNNNNNNNNNNNNDNNDNNDNDDDNNNNDNNNDDND8$\n', '7ZDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDD8O7+=~~~~~~~~:::~~::::::::::::::::::::::::::~::~::~~~~~+I7DNNNNNNNNNNNNNNNNNNDNNDNNNNNDDDNNNNNNNDDDD8$\n', '7ZDNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNDD8$I+~~~~::~~~~~~:~~:~::::::::::::::::::::::::::~~:~~:~~=?I78DDDNNNNNNNDNNNNNNNDNDNNNNDDNNNNNNNNNDDDDD$\n', 'I$ODNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNND8OI++~~~~~~~~:::~:~::::::::::::~::::::::::::::::~~~:~~~~~=~+?7IZDDNNNNNNNNNNNNNNNNNNNNDDDNNNNNDNNNNNNO7\n', 'I7ZDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNND8Z?==~~~~~~:::::~:::::::::::::::::::~:::::::~::~~:~~~~:~=?===~~~+$DNNNNNNNNNNNNDNNDNNDNNNDNNND88DDNNDZ7\n', 'III$8NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDZ7+=~~~~:~:::::::::::::::::::::~::~~:::::::::~~:~:::~:~~++~~~::::~+I8DNNNNNNNNNNNNNNNNNNNNNNNDD8DDNND7I\n', '$I??78NNNNNNNNNNNNNNNNNNNNNNNNNNNDDDZI+=~~~~~~~~~:~~~~:~:::::::::::~::~:~:~::~~~~~~:~::::~~~~?=~=~::::::~+78DNNNNNNNNNNNNDDNNNNNNNDD8DDN8O7I\n', 'ZI???$ONDDNNNNNNNNNNNNNNNNNNNND8OZ$$?+=~~~~~~~~~:~~~~~:::::::::~~:::~~~~~~~~::~~~:::~::::=~:~?+=~~:::::::~=IZDDNNNDNNNDDNDDDNNNNDDDDDDDDZ7II\n', 'II+++?IZ8D88DDNNNNNNNNDDD888O$ZZ$???+==~~~~~~~~~~~~~~~~~:::~:~:~~:~:::~~~~~~~~~:~~~:~:~~:~~~+=~~~~:::::::~==?$77I?7$ZZZZ7II7O8OODD8D8OZ$7III\n', '??++=++I7ZZOZ$$$$$$$$IIII??++++?+==??=~~=~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~=++===~~::::::~~~~=~~:::~=====~~~+??7$OZ7IIIIIIII\n', '?+===+=+??I??=++===++==~==~~====+===+======~~~~~~~~~~~~~~~~~~~~~:~~~~~~~~~~~~~~~~~~~:~~::~~++~==~:~:~~:::~~~~~~~:::::~~~~~~~==I7II?+++?IIIII\n', '+++++===++++===========~~~~~~~=====++=====~~~=~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~++===~~~:~~~::~~~~~~::~~:~::~~~~~~~=+??+===++??II\n', '?++=+====+============~~~~=~=====+=====~==~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~====~~~~::~:::~~~~~~::~~~:::~::~~~~+?===~=~===+?I\n', '+++++======================~==~~===+==~=~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~=~~~===~~~~~~~~~~~~==~==~~~~~~~~~~~~~~~~~::~~~~~~~~~~~=++?+======++?\n', '+++====+++=================~=~~~===++==~=~~~~~~~~~~~~~~~~~~~~~~~~~~~=~~~~~~~~~~~~~~~~~~~~~~=++==~~~~~~~~~~~~~~=~~~~~~~~~~~~~~~=++==+=====+++\n', '?+++++=+++===================~====+==+====~====~~~~~~~~~~~~=~~~~~~~=~~=~~~~~~~===~~~~~~~~~==~+=~~~~~~~~~~~=~~==~~~~~~~~~~~~====?+=+++=====++\n', ' */\n', '\n', '/**\n', ' * Created on 2018-08-16 03:50\n', ' * @summary\n', " * Don't let 'em say you ain't beautiful.\n", ' * They can all get fucked.\n', ' * Just stay true to you.\n', ' * @author yong\n', ' */\n', 'pragma solidity ^0.4.23;\n', '\n', '\n', 'library SafeMath {\n', '\n', '    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n', '        if (a == 0) {\n', '            return 0;\n', '        }\n', '\n', '        c = a * b;\n', '        assert(c / a == b);\n', '        return c;\n', '    }\n', '\n', '    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        return a / b;\n', '    }\n', '\n', '    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        assert(b <= a);\n', '        return a - b;\n', '    }\n', '\n', '    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n', '        c = a + b;\n', '        assert(c >= a);\n', '        return c;\n', '    }\n', '}\n', '\n', 'contract Ownable {\n', '  address public owner;\n', '\n', '\n', '  event OwnershipRenounced(address indexed previousOwner);\n', '  event OwnershipTransferred(\n', '    address indexed previousOwner,\n', '    address indexed newOwner\n', '  );\n', '\n', '  constructor() public {\n', '    owner = msg.sender;\n', '  }\n', '\n', '  modifier onlyOwner() {\n', '    require(msg.sender == owner);\n', '    _;\n', '  }\n', '\n', '  function renounceOwnership() public onlyOwner {\n', '    emit OwnershipRenounced(owner);\n', '    owner = address(0);\n', '  }\n', '\n', '  function transferOwnership(address _newOwner) public onlyOwner {\n', '    _transferOwnership(_newOwner);\n', '  }\n', '\n', '  function _transferOwnership(address _newOwner) internal {\n', '    require(_newOwner != address(0));\n', '    emit OwnershipTransferred(owner, _newOwner);\n', '    owner = _newOwner;\n', '  }\n', '\n', '}\n', '\n', 'contract ERC20 is Ownable {\n', '\n', '    using SafeMath for uint256;\n', '\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '    event Approval(address indexed owner, address indexed spender, uint256 value);\n', '\n', '    mapping(address => uint256) balances;\n', '    mapping (address => mapping (address => uint256)) internal allowed;\n', '\n', '    uint256 totalSupply_;\n', '\n', '    function ()\n', '        public\n', '        payable {\n', '    }\n', '\n', '    function totalSupply() public view returns (uint256) {\n', '        return totalSupply_;\n', '    }\n', '\n', '    function transfer(address _to, uint256 _value) public returns (bool) {\n', '        require(_to != address(0));\n', '        require(_value <= balances[msg.sender]);\n', '\n', '        balances[msg.sender] = balances[msg.sender].sub(_value);\n', '        balances[_to] = balances[_to].add(_value);\n', '        emit Transfer(msg.sender, _to, _value);\n', '        return true;\n', '    }\n', '\n', '    function balanceOf(address _owner) public view returns (uint256) {\n', '        return balances[_owner];\n', '    }\n', '\n', '    function transferFrom(\n', '        address _from,\n', '        address _to,\n', '        uint256 _value\n', '    )\n', '        public\n', '        returns (bool)\n', '    {\n', '        require(_to != address(0));\n', '        require(_value <= balances[_from]);\n', '        require(_value <= allowed[_from][msg.sender]);\n', '\n', '        balances[_from] = balances[_from].sub(_value);\n', '        balances[_to] = balances[_to].add(_value);\n', '        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n', '        emit Transfer(_from, _to, _value);\n', '        return true;\n', '    }\n', '\n', '    function approve(address _spender, uint256 _value) public returns (bool) {\n', '        allowed[msg.sender][_spender] = _value;\n', '        emit Approval(msg.sender, _spender, _value);\n', '        return true;\n', '    }\n', '\n', '    function allowance(\n', '        address _owner,\n', '        address _spender\n', '     )\n', '        public\n', '        view\n', '        returns (uint256)\n', '    {\n', '        return allowed[_owner][_spender];\n', '    }\n', '\n', '    function increaseApproval(\n', '        address _spender,\n', '        uint _addedValue\n', '    )\n', '        public\n', '        returns (bool)\n', '    {\n', '        allowed[msg.sender][_spender] = (\n', '            allowed[msg.sender][_spender].add(_addedValue));\n', '        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n', '        return true;\n', '    }\n', '\n', '    function decreaseApproval(\n', '        address _spender,\n', '        uint _subtractedValue\n', '    )\n', '        public\n', '        returns (bool)\n', '    {\n', '        uint oldValue = allowed[msg.sender][_spender];\n', '        if (_subtractedValue > oldValue) {\n', '            allowed[msg.sender][_spender] = 0;\n', '        } else {\n', '            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n', '        }\n', '        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n', '        return true;\n', '    }\n', '\n', '    function withdraw()\n', '        public\n', '        onlyOwner {\n', '        msg.sender.transfer(address(this).balance);\n', '    }\n', '\n', '}\n', '\n', '\n', 'contract ERC223ReceivingContract { \n', '    function tokenFallback(address _from, uint _value, bytes _data) public;\n', '}\n', '\n', '\n', 'contract ERC223 is ERC20 {\n', '\n', '    function transfer(address _to, uint256 _value)\n', '        public\n', '        returns (bool) {\n', '        require(_to != address(0));\n', '        require(_value <= balances[msg.sender]);\n', '\n', '        bytes memory empty;\n', '        uint256 codeLength;\n', '\n', '        assembly {\n', '            codeLength := extcodesize(_to)\n', '        }\n', '\n', '        balances[msg.sender] = balances[msg.sender].sub(_value);\n', '        balances[_to] = balances[_to].add(_value);\n', '        if(codeLength > 0) {\n', '            ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);\n', '            receiver.tokenFallback(msg.sender, _value, empty);\n', '        }\n', '        emit Transfer(msg.sender, _to, _value);\n', '        return true;\n', '    }\n', '\n', '    function transferFrom(\n', '        address _from,\n', '        address _to,\n', '        uint256 _value)\n', '        public\n', '        returns (bool) {\n', '        require(_to != address(0));\n', '        require(_value <= balances[_from]);\n', '        require(_value <= allowed[_from][msg.sender]);\n', '\n', '        bytes memory empty;\n', '        uint256 codeLength;\n', '\n', '        assembly {\n', '            codeLength := extcodesize(_to)\n', '        }\n', '\n', '        balances[_from] = balances[_from].sub(_value);\n', '\n', '        if(codeLength > 0) {\n', '            ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);\n', '            receiver.tokenFallback(msg.sender, _value, empty);\n', '        }\n', '\n', '        balances[_to] = balances[_to].add(_value);\n', '        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n', '        emit Transfer(_from, _to, _value);\n', '        return true;\n', '    }\n', '\n', '}\n', '\n', '\n', '/**\n', ' * ╔╗░░╔╦╗░░╔╗╔╗░░░░░░░░░░░░╔═══╦╗░╔╗░░░░░░░\n', ' * ║╚╗╔╝║╚╗╔╝║║║░░░░░░░░░░░░║╔═╗║║░║║░░░░░░░\n', ' * ╚╗╚╝╔╩╗╚╝╔╝║║░░╔══╦╗╔╦══╗║║░╚╣╚═╣║╔══╦══╗\n', ' * ░╚╗╔╝░╚╗╔╝░║║░╔╣╔╗║╚╝║║═╣║║░╔╣╔╗║║║╔╗║║═╣\n', ' * ░░║║░░░║║░░║╚═╝║╚╝╠╗╔╣║═╣║╚═╝║║║║╚╣╚╝║║═╣\n', ' * ░░╚╝░░░╚╝░░╚═══╩══╝╚╝╚══╝╚═══╩╝╚╩═╩══╩══╝\n', ' */\n', 'contract Chloe is ERC223 {\n', '\n', '    string public constant name = "Shuhan Liao";\n', '    string public constant symbol = "Chloe";\n', '    uint8 public constant decimals = 0;\n', '    string public message;\n', '\n', '    /* constructor */\n', '    constructor()\n', '        public {\n', '\n', '        totalSupply_ = 2;\n', '        balances[owner] = totalSupply_;\n', '        emit Transfer(0x0, owner, totalSupply_);\n', '\n', '        message = "Happy Valentines Day!";\n', '    }\n', '}']
