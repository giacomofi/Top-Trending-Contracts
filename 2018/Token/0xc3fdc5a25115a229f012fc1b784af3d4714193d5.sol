['pragma solidity ^0.4.21;\n', '\n', 'contract CioCoinERC21Token {\n', '  address public owner;\n', '  string public name;\n', '  string public symbol;\n', '  uint public decimals;\n', '  uint256 public totalSupply;\n', '  event Transfer(address indexed from, address indexed to, uint256 value);\n', '  mapping (address => uint256) public balanceOf;\n', '  \n', '  function CioCoinERC21Token(uint256 initialSupply, string tokenName, string tokenSymbol, uint decimalUnits) public {\n', '    owner = msg.sender;\n', '    totalSupply = initialSupply * 10 ** uint256(decimals);\n', '    balanceOf[msg.sender] = totalSupply;\n', '    name = tokenName;\n', '    symbol = tokenSymbol;\n', '    decimals = decimalUnits;\n', '  }\n', '\n', '  function transfer(address _to, uint256 _value) public {\n', '    require(balanceOf[msg.sender] >= _value && balanceOf[_to] + _value >= balanceOf[_to]);\n', '    balanceOf[msg.sender] -= _value;\n', '    balanceOf[_to] += _value;\n', '    emit Transfer(msg.sender, _to, _value);\n', '  }\n', '}']
['pragma solidity ^0.4.21;\n', '\n', 'contract CioCoinERC21Token {\n', '  address public owner;\n', '  string public name;\n', '  string public symbol;\n', '  uint public decimals;\n', '  uint256 public totalSupply;\n', '  event Transfer(address indexed from, address indexed to, uint256 value);\n', '  mapping (address => uint256) public balanceOf;\n', '  \n', '  function CioCoinERC21Token(uint256 initialSupply, string tokenName, string tokenSymbol, uint decimalUnits) public {\n', '    owner = msg.sender;\n', '    totalSupply = initialSupply * 10 ** uint256(decimals);\n', '    balanceOf[msg.sender] = totalSupply;\n', '    name = tokenName;\n', '    symbol = tokenSymbol;\n', '    decimals = decimalUnits;\n', '  }\n', '\n', '  function transfer(address _to, uint256 _value) public {\n', '    require(balanceOf[msg.sender] >= _value && balanceOf[_to] + _value >= balanceOf[_to]);\n', '    balanceOf[msg.sender] -= _value;\n', '    balanceOf[_to] += _value;\n', '    emit Transfer(msg.sender, _to, _value);\n', '  }\n', '}']
