['pragma solidity ^0.4.21;\n', '\n', 'contract ERC20Interface {\n', '    // function totalSupply() public constant returns (uint);\n', '    // function balanceOf(address tokenOwner) public constant returns (uint balance);\n', '    // function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n', '    // function transfer(address to, uint tokens) public returns (bool success);\n', '    // function approve(address spender, uint tokens) public returns (bool success);\n', '    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n', '\n', '    // event Transfer(address indexed from, address indexed to, uint tokens);\n', '    // event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n', '}\n', '\n', 'contract MassERC20Sender   {\n', '    address public owner;\n', '\n', '    function MassERC20Sender() public{\n', '        owner = msg.sender;\n', '    }\n', '\n', '    function multisend(ERC20Interface _tokenAddr, address[] dests, uint256[] values) public returns (uint256) {\n', '        uint256 i = 0;\n', '        while (i < dests.length) {\n', '            _tokenAddr.transferFrom(msg.sender, dests[i], values[i]);\n', '            i += 1;\n', '        }\n', '        return(i);\n', '    }\n', '\n', '    function withdraw() public{\n', '        require(msg.sender == owner);\n', '        owner.transfer(this.balance);\n', '    }\n', '}']
['pragma solidity ^0.4.21;\n', '\n', 'contract ERC20Interface {\n', '    // function totalSupply() public constant returns (uint);\n', '    // function balanceOf(address tokenOwner) public constant returns (uint balance);\n', '    // function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n', '    // function transfer(address to, uint tokens) public returns (bool success);\n', '    // function approve(address spender, uint tokens) public returns (bool success);\n', '    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n', '\n', '    // event Transfer(address indexed from, address indexed to, uint tokens);\n', '    // event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n', '}\n', '\n', 'contract MassERC20Sender   {\n', '    address public owner;\n', '\n', '    function MassERC20Sender() public{\n', '        owner = msg.sender;\n', '    }\n', '\n', '    function multisend(ERC20Interface _tokenAddr, address[] dests, uint256[] values) public returns (uint256) {\n', '        uint256 i = 0;\n', '        while (i < dests.length) {\n', '            _tokenAddr.transferFrom(msg.sender, dests[i], values[i]);\n', '            i += 1;\n', '        }\n', '        return(i);\n', '    }\n', '\n', '    function withdraw() public{\n', '        require(msg.sender == owner);\n', '        owner.transfer(this.balance);\n', '    }\n', '}']
