['// https://www.howeycoins.com/index.html\n', '//\n', '// Participate in the ICO by sending ETH to this contract. 1 ETH = 10 HOW\n', '//\n', '//\n', '// DON&#39;T MISS THIS EXCLUSIVE OPPORTUNITY TO PARTICIPATE IN \n', '// HOWEYCOINS TRAVEL NETWORK NOW!\n', '//\n', '//\n', '// Combining the two most growth-oriented segments of the digital economy –\n', '// blockchain technology and travel, HoweyCoin is the newest and only coin offering\n', '// that captures the magic of coin trading profits AND the excitement and\n', '// guaranteed returns of the travel industry. HoweyCoins will partner with all\n', '// segments of the travel industry (air, hotel, car rental, and luxury segments),\n', '// earning coins you can trade for profit instead of points. Massive potential\n', '// upside benefits like:\n', '// \n', '// HoweyCoins are officially registered with the U.S. government;\n', '// HoweyCoins will trade on an SEC-compliant exchange where you can buy and sell\n', '// them for profit;\n', '// HoweyCoins can be used with existing points programs;\n', '// HoweyCoins can be exchanged for cryptocurrencies and cash;\n', '// HoweyCoins can be spent at any participating airline or hotel;\n', '// HoweyCoins can also be redeemed for merchandise.\n', '//\n', '// Beware of scams. This is the real HoweyCoin ICO.\n', 'pragma solidity ^0.4.24;\n', '\n', 'library SafeMath {\n', '  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    if (a == 0) {\n', '      return 0;\n', '    }\n', '    uint256 c = a * b;\n', '    require(c / a == b);\n', '    return c;\n', '  }\n', '\n', '  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    return a / b;\n', '  }\n', '\n', '  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    require(b <= a);\n', '    return a - b;\n', '  }\n', '\n', '  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    uint256 c = a + b;\n', '    require(c >= a);\n', '    return c;\n', '  }\n', '}\n', '\n', 'interface ERC20 {\n', '  event Transfer(address indexed from, address indexed to, uint256 value);\n', '  event Approval(address indexed owner, address indexed spender, uint256 value);\n', '\n', '  function transfer(address _to, uint256 _value) external returns (bool success);\n', '  function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\n', '  function balanceOf(address _owner) external view returns (uint256 balance);\n', '  function approve(address _spender, uint256 _value) external returns (bool success);\n', '  function allowance(address _owner, address _spender) external view returns (uint256 remaining);\n', '}\n', '\n', 'contract ERC223Receiver {\n', '  function tokenFallback(address _sender, address _origin,\n', '                         uint _value, bytes _data) external returns (bool ok);\n', '}\n', '\n', '// HoweyCoins are the cryptocurrency for the travel industry at exactly the right time. \n', '//\n', '// To participate in the ICO, simply send ETH to this contract, or call\n', '// buyAtPrice with the current price.\n', 'contract HoweyCoin is ERC20 {\n', '  using SafeMath for uint256;\n', '\n', '  mapping (address => uint256) balances;\n', '  mapping (address => mapping (address => uint256)) allowed;\n', '\n', '  address public owner;\n', '  uint256 public tokensPerWei;\n', '\n', '  string public name;\n', '  string public symbol;\n', '  uint256 public totalSupply;\n', '  function decimals() public pure returns (uint8) { return 18; }\n', '\n', '\n', '  constructor(string _name, string _symbol, uint256 _totalSupplyTokens) public {\n', '    owner = msg.sender;\n', '    tokensPerWei = 10;\n', '    name = _name;\n', '    symbol = _symbol;\n', '    totalSupply = _totalSupplyTokens * (10 ** uint(decimals()));\n', '    balances[msg.sender] = totalSupply;\n', '    emit Transfer(address(0), msg.sender, totalSupply);\n', '  }\n', '\n', '  function () public payable {\n', '    buyAtPrice(tokensPerWei);\n', '  }\n', '\n', '  // Buy the tokens at the expected price or fail.\n', '  // This prevents the owner from changing the price during a purchase.\n', '  function buyAtPrice(uint256 _tokensPerWei)\n', '      public payable returns (bool success) {\n', '    require(_tokensPerWei == tokensPerWei);\n', '\n', '    address to = msg.sender;\n', '    uint256 amount = msg.value * tokensPerWei;\n', '    balances[owner] = balances[owner].sub(amount);\n', '    balances[to] = balances[to].add(amount);\n', '    emit Transfer(owner, to, amount);\n', '    return true;\n', '  }\n', '\n', '  function transfer(address _to, uint256 _value) external returns (bool success) {\n', '    return _transfer(_to, _value);\n', '  }\n', '\n', '  function transfer(address _to, uint _value, bytes _data) external returns (bool success) {\n', '    _transfer(_to, _value);\n', '    if (_isContract(_to)) {\n', '      return _contractFallback(msg.sender, _to, _value, _data);\n', '    }\n', '    return true;\n', '  }\n', '\n', '  function transferFrom(address _from, address _to, uint _value, bytes _data)\n', '      external returns (bool success) {\n', '    _transferFrom(_from, _to, _value);\n', '    if (_isContract(_to)) {\n', '      return _contractFallback(_from, _to, _value, _data);\n', '    }\n', '    return true;\n', '  }\n', '\n', '  function transferFrom(address _from, address _to, uint _value)\n', '      external returns (bool success) {\n', '    return _transferFrom(_from, _to, _value);\n', '  }\n', '\n', '  function balanceOf(address _owner) external view returns (uint256 balance) {\n', '    return balances[_owner];\n', '  }\n', '\n', '  function approve(address _spender, uint256 _value) external returns (bool success) {\n', '    allowed[msg.sender][_spender] = _value;\n', '    emit Approval(msg.sender, _spender, _value);\n', '    return true;\n', '  }\n', '\n', '  function allowance(address _owner, address _spender) external view returns (uint256 remaining) {\n', '    return allowed[_owner][_spender];\n', '  }\n', '\n', '  function increaseApproval(address _spender, uint _addedValue) \n', '      external returns (bool success) {\n', '    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n', '    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n', '    return true;\n', '  }\n', '\n', '  function decreaseApproval(address _spender, uint _subtractedValue) \n', '    external returns (bool success) {\n', '    uint oldValue = allowed[msg.sender][_spender];\n', '    if (_subtractedValue > oldValue) {\n', '      allowed[msg.sender][_spender] = 0;\n', '    } else {\n', '      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n', '    }\n', '    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n', '    return true;\n', '  }\n', '\n', '  function transferMany(address [] _dests, uint256 [] _amounts) public {\n', '    require(_dests.length == _amounts.length);\n', '    for (uint i = 0; i < _dests.length; ++i) {\n', '      require(_transfer(_dests[i], _amounts[i]));\n', '    }\n', '  }\n', '\n', '  function setPrice(uint256 _tokensPerWei) public {\n', '    require(msg.sender == owner);\n', '    tokensPerWei = _tokensPerWei;\n', '  }\n', '\n', '  function withdrawTokens(address tokenAddress) public {\n', '    require(msg.sender == owner);\n', '    if (tokenAddress == address(0)) {\n', '      owner.transfer(address(this).balance);\n', '    } else {\n', '      ERC20 tok = ERC20(tokenAddress);\n', '      tok.transfer(owner, tok.balanceOf(this));\n', '    }\n', '  }  \n', '\n', '  function _isContract(address _addr) internal view returns (bool is_contract) {\n', '    uint length;\n', '    assembly {\n', '      length := extcodesize(_addr)\n', '    }\n', '    return length > 0;\n', '  }\n', '\n', '  function _contractFallback(address _origin, address _to, uint _value, bytes _data)\n', '      internal returns (bool success) {\n', '    ERC223Receiver reciever = ERC223Receiver(_to);\n', '    return reciever.tokenFallback(msg.sender, _origin, _value, _data);\n', '  }\n', '\n', '  function _transferFrom(address _from, address _to, uint256 _value) internal returns (bool success) {\n', '    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n', '\n', '    balances[_from] = balances[_from].sub(_value);\n', '    balances[_to] = balances[_to].add(_value);\n', '    emit Transfer(_from, _to, _value);\n', '    return true;\n', '  }\n', '\n', '  function _transfer(address _to, uint256 _value) internal returns (bool success) {\n', '    balances[msg.sender] = balances[msg.sender].sub(_value);\n', '    balances[_to] = balances[_to].add(_value);\n', '    emit Transfer(msg.sender, _to, _value);\n', '    return true;\n', '  }\n', '}']
['// https://www.howeycoins.com/index.html\n', '//\n', '// Participate in the ICO by sending ETH to this contract. 1 ETH = 10 HOW\n', '//\n', '//\n', "// DON'T MISS THIS EXCLUSIVE OPPORTUNITY TO PARTICIPATE IN \n", '// HOWEYCOINS TRAVEL NETWORK NOW!\n', '//\n', '//\n', '// Combining the two most growth-oriented segments of the digital economy –\n', '// blockchain technology and travel, HoweyCoin is the newest and only coin offering\n', '// that captures the magic of coin trading profits AND the excitement and\n', '// guaranteed returns of the travel industry. HoweyCoins will partner with all\n', '// segments of the travel industry (air, hotel, car rental, and luxury segments),\n', '// earning coins you can trade for profit instead of points. Massive potential\n', '// upside benefits like:\n', '// \n', '// HoweyCoins are officially registered with the U.S. government;\n', '// HoweyCoins will trade on an SEC-compliant exchange where you can buy and sell\n', '// them for profit;\n', '// HoweyCoins can be used with existing points programs;\n', '// HoweyCoins can be exchanged for cryptocurrencies and cash;\n', '// HoweyCoins can be spent at any participating airline or hotel;\n', '// HoweyCoins can also be redeemed for merchandise.\n', '//\n', '// Beware of scams. This is the real HoweyCoin ICO.\n', 'pragma solidity ^0.4.24;\n', '\n', 'library SafeMath {\n', '  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    if (a == 0) {\n', '      return 0;\n', '    }\n', '    uint256 c = a * b;\n', '    require(c / a == b);\n', '    return c;\n', '  }\n', '\n', '  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    return a / b;\n', '  }\n', '\n', '  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    require(b <= a);\n', '    return a - b;\n', '  }\n', '\n', '  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    uint256 c = a + b;\n', '    require(c >= a);\n', '    return c;\n', '  }\n', '}\n', '\n', 'interface ERC20 {\n', '  event Transfer(address indexed from, address indexed to, uint256 value);\n', '  event Approval(address indexed owner, address indexed spender, uint256 value);\n', '\n', '  function transfer(address _to, uint256 _value) external returns (bool success);\n', '  function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\n', '  function balanceOf(address _owner) external view returns (uint256 balance);\n', '  function approve(address _spender, uint256 _value) external returns (bool success);\n', '  function allowance(address _owner, address _spender) external view returns (uint256 remaining);\n', '}\n', '\n', 'contract ERC223Receiver {\n', '  function tokenFallback(address _sender, address _origin,\n', '                         uint _value, bytes _data) external returns (bool ok);\n', '}\n', '\n', '// HoweyCoins are the cryptocurrency for the travel industry at exactly the right time. \n', '//\n', '// To participate in the ICO, simply send ETH to this contract, or call\n', '// buyAtPrice with the current price.\n', 'contract HoweyCoin is ERC20 {\n', '  using SafeMath for uint256;\n', '\n', '  mapping (address => uint256) balances;\n', '  mapping (address => mapping (address => uint256)) allowed;\n', '\n', '  address public owner;\n', '  uint256 public tokensPerWei;\n', '\n', '  string public name;\n', '  string public symbol;\n', '  uint256 public totalSupply;\n', '  function decimals() public pure returns (uint8) { return 18; }\n', '\n', '\n', '  constructor(string _name, string _symbol, uint256 _totalSupplyTokens) public {\n', '    owner = msg.sender;\n', '    tokensPerWei = 10;\n', '    name = _name;\n', '    symbol = _symbol;\n', '    totalSupply = _totalSupplyTokens * (10 ** uint(decimals()));\n', '    balances[msg.sender] = totalSupply;\n', '    emit Transfer(address(0), msg.sender, totalSupply);\n', '  }\n', '\n', '  function () public payable {\n', '    buyAtPrice(tokensPerWei);\n', '  }\n', '\n', '  // Buy the tokens at the expected price or fail.\n', '  // This prevents the owner from changing the price during a purchase.\n', '  function buyAtPrice(uint256 _tokensPerWei)\n', '      public payable returns (bool success) {\n', '    require(_tokensPerWei == tokensPerWei);\n', '\n', '    address to = msg.sender;\n', '    uint256 amount = msg.value * tokensPerWei;\n', '    balances[owner] = balances[owner].sub(amount);\n', '    balances[to] = balances[to].add(amount);\n', '    emit Transfer(owner, to, amount);\n', '    return true;\n', '  }\n', '\n', '  function transfer(address _to, uint256 _value) external returns (bool success) {\n', '    return _transfer(_to, _value);\n', '  }\n', '\n', '  function transfer(address _to, uint _value, bytes _data) external returns (bool success) {\n', '    _transfer(_to, _value);\n', '    if (_isContract(_to)) {\n', '      return _contractFallback(msg.sender, _to, _value, _data);\n', '    }\n', '    return true;\n', '  }\n', '\n', '  function transferFrom(address _from, address _to, uint _value, bytes _data)\n', '      external returns (bool success) {\n', '    _transferFrom(_from, _to, _value);\n', '    if (_isContract(_to)) {\n', '      return _contractFallback(_from, _to, _value, _data);\n', '    }\n', '    return true;\n', '  }\n', '\n', '  function transferFrom(address _from, address _to, uint _value)\n', '      external returns (bool success) {\n', '    return _transferFrom(_from, _to, _value);\n', '  }\n', '\n', '  function balanceOf(address _owner) external view returns (uint256 balance) {\n', '    return balances[_owner];\n', '  }\n', '\n', '  function approve(address _spender, uint256 _value) external returns (bool success) {\n', '    allowed[msg.sender][_spender] = _value;\n', '    emit Approval(msg.sender, _spender, _value);\n', '    return true;\n', '  }\n', '\n', '  function allowance(address _owner, address _spender) external view returns (uint256 remaining) {\n', '    return allowed[_owner][_spender];\n', '  }\n', '\n', '  function increaseApproval(address _spender, uint _addedValue) \n', '      external returns (bool success) {\n', '    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n', '    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n', '    return true;\n', '  }\n', '\n', '  function decreaseApproval(address _spender, uint _subtractedValue) \n', '    external returns (bool success) {\n', '    uint oldValue = allowed[msg.sender][_spender];\n', '    if (_subtractedValue > oldValue) {\n', '      allowed[msg.sender][_spender] = 0;\n', '    } else {\n', '      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n', '    }\n', '    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n', '    return true;\n', '  }\n', '\n', '  function transferMany(address [] _dests, uint256 [] _amounts) public {\n', '    require(_dests.length == _amounts.length);\n', '    for (uint i = 0; i < _dests.length; ++i) {\n', '      require(_transfer(_dests[i], _amounts[i]));\n', '    }\n', '  }\n', '\n', '  function setPrice(uint256 _tokensPerWei) public {\n', '    require(msg.sender == owner);\n', '    tokensPerWei = _tokensPerWei;\n', '  }\n', '\n', '  function withdrawTokens(address tokenAddress) public {\n', '    require(msg.sender == owner);\n', '    if (tokenAddress == address(0)) {\n', '      owner.transfer(address(this).balance);\n', '    } else {\n', '      ERC20 tok = ERC20(tokenAddress);\n', '      tok.transfer(owner, tok.balanceOf(this));\n', '    }\n', '  }  \n', '\n', '  function _isContract(address _addr) internal view returns (bool is_contract) {\n', '    uint length;\n', '    assembly {\n', '      length := extcodesize(_addr)\n', '    }\n', '    return length > 0;\n', '  }\n', '\n', '  function _contractFallback(address _origin, address _to, uint _value, bytes _data)\n', '      internal returns (bool success) {\n', '    ERC223Receiver reciever = ERC223Receiver(_to);\n', '    return reciever.tokenFallback(msg.sender, _origin, _value, _data);\n', '  }\n', '\n', '  function _transferFrom(address _from, address _to, uint256 _value) internal returns (bool success) {\n', '    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n', '\n', '    balances[_from] = balances[_from].sub(_value);\n', '    balances[_to] = balances[_to].add(_value);\n', '    emit Transfer(_from, _to, _value);\n', '    return true;\n', '  }\n', '\n', '  function _transfer(address _to, uint256 _value) internal returns (bool success) {\n', '    balances[msg.sender] = balances[msg.sender].sub(_value);\n', '    balances[_to] = balances[_to].add(_value);\n', '    emit Transfer(msg.sender, _to, _value);\n', '    return true;\n', '  }\n', '}']
