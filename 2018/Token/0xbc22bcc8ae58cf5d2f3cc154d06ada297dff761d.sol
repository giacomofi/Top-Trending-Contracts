['contract Americo {\n', '  /* Variables públicas del token */\n', "    string public standard = 'Token 0.1';\n", '    string public name;\n', '    string public symbol;\n', '    uint8 public decimals;\n', '    uint256 public initialSupply;\n', '    uint256 public totalSupply;\n', '\n', '    /* Esto crea una matriz con todos los saldos */\n', '    mapping (address => uint256) public balanceOf;\n', '    mapping (address => mapping (address => uint256)) public allowance;\n', '\n', '  \n', '    /* Inicializa el contrato con los tokens de suministro inicial al creador del contrato */\n', '    function Americo() {\n', '\n', '         initialSupply=160000000;\n', '         name="Americo";\n', '        decimals=6;\n', '         symbol="AME";\n', '        \n', '        balanceOf[msg.sender] = initialSupply;              // Americo recibe todas las fichas iniciales\n', '        totalSupply = initialSupply;                        // Actualizar la oferta total\n', '                                   \n', '    }\n', '\n', '    /* Send coins */\n', '    function transfer(address _to, uint256 _value) {\n', '        if (balanceOf[msg.sender] < _value) throw;           // Compruebe si el remitente tiene suficiente\n', '        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Verificar desbordamientos\n', '        balanceOf[msg.sender] -= _value;                     // Reste del remitente\n', '        balanceOf[_to] += _value;                            // Agregue lo mismo al destinatario\n', '      \n', '    }\n', '\n', '    /* Esta función sin nombre se llama cada vez que alguien intenta enviar éter a ella */\n', '    function () {\n', '        throw;     // Evita el envío accidental de éter\n', '    }\n', '}']