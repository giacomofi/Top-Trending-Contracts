['pragma solidity ^0.4.8;\n', '\n', 'contract SOA {\n', '    /* Public variables of the token */\n', "    string public name = 'SOA Test Token';\n", "    string public symbol = 'SOA';\n", '    uint8 public decimals = 2;\n', '    uint256 public totalSupply = 10000; // 100 \n', '\n', '    /* This creates an array with all balances */\n', '    mapping (address => uint256) public balanceOf;\n', '\n', '    /* This generates a public event on the blockchain that will notify clients */\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '\n', '    /* Initializes contract with initial supply tokens to the creator of the contract */\n', '    function SOA() {\n', '        balanceOf[msg.sender] = totalSupply;\n', '    }\n', '\n', '    /* Send coins */\n', '    function transfer(address _to, uint256 _value) {\n', '        assert(_to != 0x0);\n', '        assert(balanceOf[msg.sender] >= _value);\n', '        assert(balanceOf[_to] + _value >= balanceOf[_to]);\n', '        balanceOf[msg.sender] -= _value;\n', '        balanceOf[_to] += _value;\n', '        Transfer(msg.sender, _to, _value);\n', '    }\n', '\n', '    function balanceOf(address _owner) constant returns (uint256 balance) {\n', '        return balanceOf[_owner];\n', '    }\n', '}']