['pragma solidity ^0.4.24;\n', '\n', '//==============================================================================\n', '// Trade Advisor Token. Learn more at www.advisor.trade\n', '//==============================================================================\n', '\n', 'contract SimpleToken {\n', '    event Transfer(address indexed _from, address indexed _to, uint _value);\n', '    event Approval(address indexed _owner, address indexed _spender, uint _value);\n', '    \n', '    function transfer(address _to, uint _value) public returns (bool) {\n', '        require(balances[msg.sender] >= _value && balances[_to] + _value >= balances[_to]);\n', '        balances[msg.sender] -= _value;\n', '        balances[_to] += _value;\n', '        emit Transfer(msg.sender, _to, _value);\n', '    }\n', '\n', '    function transferFrom(address _from, address _to, uint _value) public returns (bool) {\n', '        require(balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value >= balances[_to]);\n', '        balances[_to] += _value;\n', '        balances[_from] -= _value;\n', '        allowed[_from][msg.sender] -= _value;\n', '        emit Transfer(_from, _to, _value);\n', '    }\n', '\n', '    function balanceOf(address _owner) public constant returns (uint) {\n', '        return balances[_owner];\n', '    }\n', '\n', '    function approve(address _spender, uint _value) public returns (bool) {\n', '        allowed[msg.sender][_spender] = _value;\n', '        emit Approval(msg.sender, _spender, _value);\n', '        return true;\n', '    }\n', '\n', '    function allowance(address _owner, address _spender) public constant returns (uint) {\n', '        return allowed[_owner][_spender];\n', '    }\n', '\n', '    mapping (address => uint) balances;\n', '    mapping (address => mapping (address => uint)) allowed;\n', '    uint public totalSupply;\n', '}\n', '\n', '\n', 'contract TradeAdvisorToken is SimpleToken {\n', '\n', '    uint public totalSupply = 10**26;\n', '    uint8 constant public decimals = 18;\n', '    string constant public name = "TradeAdvisorToken";\n', '    string constant public symbol = "TAT";\n', '\n', '    constructor() public {\n', '        balances[msg.sender] = totalSupply;\n', '        emit Transfer(address(0), msg.sender, totalSupply);\n', '    }\n', '}']