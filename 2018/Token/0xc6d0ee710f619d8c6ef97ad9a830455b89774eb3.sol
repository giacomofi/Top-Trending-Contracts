['contract ERC20Basic {\n', '  function totalSupply() public view returns (uint256);\n', '  function balanceOf(address who) public view returns (uint256);\n', '  function transfer(address to, uint256 value) public returns (bool);\n', '  event Transfer(address indexed from, address indexed to, uint256 value);\n', '}\n', 'contract ERC20 is ERC20Basic {\n', '  function allowance(address owner, address spender) public view returns (uint256);\n', '  function transferFrom(address from, address to, uint256 value) public returns (bool);\n', '  function approve(address spender, uint256 value) public returns (bool);\n', '  event Approval(address indexed owner, address indexed spender, uint256 value);\n', '}\n', 'contract TokenDistribution {\n', '    function distribute(ERC20 token, address[] destinations, uint[] amounts) public {\n', '        require(destinations.length == amounts.length);\n', '        uint total;\n', '        uint i;\n', '        for (i = 0; i < destinations.length; i++) total += amounts[i];\n', '        require(token.transferFrom(msg.sender, this, total));\n', '        for (i = 0; i < destinations.length; i++) require(token.transfer(destinations[i], amounts[i]));\n', '    }\n', '}']
['contract ERC20Basic {\n', '  function totalSupply() public view returns (uint256);\n', '  function balanceOf(address who) public view returns (uint256);\n', '  function transfer(address to, uint256 value) public returns (bool);\n', '  event Transfer(address indexed from, address indexed to, uint256 value);\n', '}\n', 'contract ERC20 is ERC20Basic {\n', '  function allowance(address owner, address spender) public view returns (uint256);\n', '  function transferFrom(address from, address to, uint256 value) public returns (bool);\n', '  function approve(address spender, uint256 value) public returns (bool);\n', '  event Approval(address indexed owner, address indexed spender, uint256 value);\n', '}\n', 'contract TokenDistribution {\n', '    function distribute(ERC20 token, address[] destinations, uint[] amounts) public {\n', '        require(destinations.length == amounts.length);\n', '        uint total;\n', '        uint i;\n', '        for (i = 0; i < destinations.length; i++) total += amounts[i];\n', '        require(token.transferFrom(msg.sender, this, total));\n', '        for (i = 0; i < destinations.length; i++) require(token.transfer(destinations[i], amounts[i]));\n', '    }\n', '}']
