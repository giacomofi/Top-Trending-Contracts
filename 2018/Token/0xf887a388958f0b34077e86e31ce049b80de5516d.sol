['pragma solidity ^0.4.25; \n', '\n', '//0.4.25+commit.59dbf8f1\n', '\n', 'contract FirstToken {\n', '    \n', '    /* This creates an array with addresses connected with balances */\n', '    mapping (address => uint256) public balanceOf;\n', '    \n', '    string public name;\n', '    string public symbol;\n', '    uint8 public decimals;\n', '    \n', '    // EVENTS\n', '    \n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '    \n', '    // Initializes contract with initial supply tokens to the creator of the contract\n', '    // W nowej wersji nie używa się function o nazwie contract ale constructor\n', '    /* Initializes contract with initial supply tokens to the creator of the contract */\n', '    \n', '    constructor (uint256 initialSupply, string tokenName, string tokenSymbol, uint8 decimalUnits) public {\n', '        balanceOf[msg.sender] = initialSupply;              // Give the creator all initial tokens\n', '        name = tokenName;                                   // Set the name for display purposes\n', '        symbol = tokenSymbol;                               // Set the symbol for display purposes\n', '        decimals = decimalUnits;                            // Amount of decimals for display purposes\n', '    }\n', '\n', '    /* Send coins */\n', '    function transfer(address _to, uint256 _value) public returns (bool success) {\n', '        require(balanceOf[msg.sender] >= _value);           // Check if the sender has enough\n', '        require(balanceOf[_to] + _value >= balanceOf[_to]); // Check for overflows\n', '        balanceOf[msg.sender] -= _value;                    // Subtract from the sender\n', '        balanceOf[_to] += _value;                           // Add the same to the recipient\n', '        emit Transfer(msg.sender, _to, _value);             // Powiadomienie o tym ze transfer sie odbyl\n', '        return true;\n', '    }\n', '    \n', '}']