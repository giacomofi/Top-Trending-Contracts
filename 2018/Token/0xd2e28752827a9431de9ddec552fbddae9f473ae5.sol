['pragma solidity ^0.4.0;\n', '\n', 'contract Templar {\n', 'string public constant symbol = "Templar";\n', '  string public constant name = "KXT";\n', '  uint8 public constant decimals = 18;\n', '  uint256 public totalSupply = 100000000 * (uint256(10)**decimals);\n', '  address public owner;\n', '  uint256 public rate =  5000000000000;\n', '  mapping(address => uint256) balances;\n', '  mapping(address => mapping (address => uint256)) allowed;\n', '  modifier onlyOwner {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', 'event Transfer(address indexed _from, address indexed _to, uint256 _value);\n', 'event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n', 'function Mint() public{\n', '  owner = msg.sender;\n', '}\n', 'function () public payable {\n', '  create(msg.sender);\n', '}\n', 'function create(address beneficiary)public payable{\n', '    uint256 amount = msg.value;\n', '    if(amount > 0){\n', '      balances[beneficiary] += amount/rate;\n', '      totalSupply += amount/rate;\n', '    }\n', '  }\n', 'function balanceOf(address _owner) public constant returns (uint256 balance) {\n', '    return balances[_owner];\n', '}\n', 'function collect(uint256 amount) onlyOwner public{\n', '  msg.sender.transfer(amount);\n', '}\n', 'function transfer(address _to, uint256 _amount) public returns (bool success) {\n', '    if (balances[msg.sender] >= _amount\n', '        && _amount > 0\n', '        && balances[_to] + _amount > balances[_to]) {\n', '        balances[msg.sender] -= _amount;\n', '        balances[_to] += _amount;\n', '        Transfer(msg.sender, _to, _amount);\n', '        return true;\n', '    } else {\n', '        return false;\n', '    }\n', '}\n', 'function transferFrom(\n', '    address _from,\n', '    address _to,\n', '    uint256 _amount\n', ') public returns (bool success) {\n', '    if (balances[_from] >= _amount\n', '        && allowed[_from][msg.sender] >= _amount\n', '        && _amount > 0\n', '        && balances[_to] + _amount > balances[_to]) {\n', '        balances[_from] -= _amount;\n', '        allowed[_from][msg.sender] -= _amount;\n', '        balances[_to] += _amount;\n', '        Transfer(_from, _to, _amount);\n', '        return true;\n', '    } else {\n', '        return false;\n', '    }\n', '}\n', 'function approve(address _spender, uint256 _amount) public returns (bool success) {\n', '    allowed[msg.sender][_spender] = _amount;\n', '    Approval(msg.sender, _spender, _amount);\n', '    return true;\n', '}\n', 'function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n', '    return allowed[_owner][_spender];\n', '}\n', '}']