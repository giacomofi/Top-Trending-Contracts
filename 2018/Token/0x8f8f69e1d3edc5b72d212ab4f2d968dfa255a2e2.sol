['pragma solidity ^0.4.21;\n', '\n', '// File: contracts/ERC20Basic.sol\n', '\n', 'contract ERC20Basic {\n', '    function totalSupply() public view returns (uint256);\n', '    function balanceOf(address who) public view returns (uint256);\n', '    function transfer(address to, uint256 value) public returns (bool);\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '}\n', '\n', '// File: contracts/ERC20.sol\n', '\n', 'contract ERC20 is ERC20Basic {\n', '    function allowance(address owner, address spender) public view returns (uint256);\n', '    function transferFrom(address from, address to, uint256 value) public returns (bool);\n', '    function approve(address spender, uint256 value) public returns (bool);\n', '    event Approval(address indexed owner, address indexed spender, uint256 value);\n', '}\n', '\n', '// File: contracts/Ownable.sol\n', '\n', 'contract Ownable {\n', '    address public owner;\n', '    \n', '    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n', '\n', '    constructor() public {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    modifier onlyOwner() {\n', '        require((msg.sender == owner) || (tx.origin == owner));\n', '        _;\n', '    }\n', '\n', '    function transferOwnership(address newOwner) public onlyOwner {\n', '        require(newOwner != address(0));\n', '        emit OwnershipTransferred(owner, newOwner);\n', '        owner = newOwner;\n', '    }\n', '}\n', '\n', '// File: contracts/AssignRevenue.sol\n', '\n', 'contract AssignRevenue is Ownable {\n', '    ERC20 public APPROVE_CONTRACT;\n', '    address public APPROVE_OWNER;\n', '\n', '    event RevenueAssign(address indexed beneficiary, address revenue_contract, uint256 amount);\n', '\n', '    function setContract(ERC20 _contract, address _owner) external onlyOwner {\n', '        APPROVE_CONTRACT = _contract; \n', '        APPROVE_OWNER = _owner;\n', '    }\n', '\n', '    function transferRevenue(address _address, uint256 _amount) external onlyOwner {\n', '        APPROVE_CONTRACT.transferFrom(APPROVE_OWNER,_address, _amount);\n', '        emit RevenueAssign(\n', '            msg.sender,\n', '            APPROVE_CONTRACT,\n', '            _amount\n', '        );\n', '    }\n', '}']