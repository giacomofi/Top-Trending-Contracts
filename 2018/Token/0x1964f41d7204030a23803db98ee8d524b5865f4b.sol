['pragma solidity ^0.4.19;\n', '\n', '/* Function required from ERC20 main contract */\n', 'contract TokenERC20 {\n', '    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {}\n', '}\n', '\n', 'contract MultiSend {\n', '    TokenERC20 public _ERC20Contract;\n', '    address public _multiSendOwner;\n', '    \n', '    function MultiSend () {\n', '        address c = 0xc3761EB917CD790B30dAD99f6Cc5b4Ff93C4F9eA; // set ERC20 contract address\n', '        _ERC20Contract = TokenERC20(c); \n', '        _multiSendOwner = msg.sender;\n', '    }\n', '    \n', '    /* Make sure you allowed this contract enough ERC20 tokens before using this function\n', '    ** as ERC20 contract doesn&#39;t have an allowance function to check how much it can spend on your behalf\n', '    ** Use function approve(address _spender, uint256 _value)\n', '    */\n', '    function dropCoins(address[] dests, uint256 tokens) {\n', '        require(msg.sender == _multiSendOwner);\n', '        uint256 amount = tokens;\n', '        uint256 i = 0;\n', '        while (i < dests.length) {\n', '            _ERC20Contract.transferFrom(_multiSendOwner, dests[i], amount);\n', '            i += 1;\n', '        }\n', '    }\n', '    \n', '}']
['pragma solidity ^0.4.19;\n', '\n', '/* Function required from ERC20 main contract */\n', 'contract TokenERC20 {\n', '    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {}\n', '}\n', '\n', 'contract MultiSend {\n', '    TokenERC20 public _ERC20Contract;\n', '    address public _multiSendOwner;\n', '    \n', '    function MultiSend () {\n', '        address c = 0xc3761EB917CD790B30dAD99f6Cc5b4Ff93C4F9eA; // set ERC20 contract address\n', '        _ERC20Contract = TokenERC20(c); \n', '        _multiSendOwner = msg.sender;\n', '    }\n', '    \n', '    /* Make sure you allowed this contract enough ERC20 tokens before using this function\n', "    ** as ERC20 contract doesn't have an allowance function to check how much it can spend on your behalf\n", '    ** Use function approve(address _spender, uint256 _value)\n', '    */\n', '    function dropCoins(address[] dests, uint256 tokens) {\n', '        require(msg.sender == _multiSendOwner);\n', '        uint256 amount = tokens;\n', '        uint256 i = 0;\n', '        while (i < dests.length) {\n', '            _ERC20Contract.transferFrom(_multiSendOwner, dests[i], amount);\n', '            i += 1;\n', '        }\n', '    }\n', '    \n', '}']
