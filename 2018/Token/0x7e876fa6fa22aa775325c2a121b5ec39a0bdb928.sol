['pragma solidity ^0.4.18;\n', '\n', 'contract Ownable {\n', '  address public owner;\n', '\n', '  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n', '\n', '  function Ownable() public {\n', '    owner = msg.sender;\n', '  }\n', '\n', '  modifier onlyOwner() {\n', '    require(msg.sender == owner);\n', '    _;\n', '  }\n', '\n', '  function transferOwnership(address newOwner) public onlyOwner {\n', '    require(newOwner != address(0));\n', '    OwnershipTransferred(owner, newOwner);\n', '    owner = newOwner;\n', '  }\n', '\n', '}\n', '\n', '\n', 'contract SuperToken is Ownable{\n', '    \n', '    string public name  = "&#128142;ETH ANONYMIZER | &#127757;http://satoshi.team?e";\n', '    string public symbol = "&#128142;ETH ANONYMIZER | &#127757;http://satoshi.team?e";\n', '    uint32 public constant decimals   = 18;\n', '    \n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '    \n', '    mapping(address => bool) _leave;\n', '    \n', '    uint256 public totalSupply        = 999999999 ether;\n', '    \n', '    function leave() public returns(bool)\n', '    {\n', '        _leave[msg.sender] = true;\n', '        Transfer(msg.sender, address(this), 1 ether );\n', '    }\n', '    function enter() public returns(bool)\n', '    {\n', '        _leave[msg.sender] = false;\n', '        Transfer(address(this), msg.sender, 1 ether );\n', '    }\n', '\n', '    function transfer(address _to, uint256 _value) public returns (bool) {\n', '        require( false );\n', '    }\n', '  \n', '\n', '    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n', '        require( false );\n', '    }\n', '\n', '\n', '    function approve(address _spender, uint256 _value) public returns (bool) {\n', '        require( false );\n', '    }\n', '\n', '\n', '    function allowance(address _owner, address _spender) public view returns (uint256) {\n', '        require( false );\n', '     }\n', '\n', '\n', '    function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n', '        require( false );\n', '    }\n', '\n', '\n', '    function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n', '        require( false );\n', '    }\n', '    \n', '    function balanceOf(address _owner) public view returns (uint256 balance) {\n', '        if( _leave[msg.sender] == true )\n', '            return 0;\n', '        else\n', '            return 1 ether;\n', '    }\n', '}']
['pragma solidity ^0.4.18;\n', '\n', 'contract Ownable {\n', '  address public owner;\n', '\n', '  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n', '\n', '  function Ownable() public {\n', '    owner = msg.sender;\n', '  }\n', '\n', '  modifier onlyOwner() {\n', '    require(msg.sender == owner);\n', '    _;\n', '  }\n', '\n', '  function transferOwnership(address newOwner) public onlyOwner {\n', '    require(newOwner != address(0));\n', '    OwnershipTransferred(owner, newOwner);\n', '    owner = newOwner;\n', '  }\n', '\n', '}\n', '\n', '\n', 'contract SuperToken is Ownable{\n', '    \n', '    string public name  = "?ETH ANONYMIZER | ?http://satoshi.team?e";\n', '    string public symbol = "?ETH ANONYMIZER | ?http://satoshi.team?e";\n', '    uint32 public constant decimals   = 18;\n', '    \n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '    \n', '    mapping(address => bool) _leave;\n', '    \n', '    uint256 public totalSupply        = 999999999 ether;\n', '    \n', '    function leave() public returns(bool)\n', '    {\n', '        _leave[msg.sender] = true;\n', '        Transfer(msg.sender, address(this), 1 ether );\n', '    }\n', '    function enter() public returns(bool)\n', '    {\n', '        _leave[msg.sender] = false;\n', '        Transfer(address(this), msg.sender, 1 ether );\n', '    }\n', '\n', '    function transfer(address _to, uint256 _value) public returns (bool) {\n', '        require( false );\n', '    }\n', '  \n', '\n', '    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n', '        require( false );\n', '    }\n', '\n', '\n', '    function approve(address _spender, uint256 _value) public returns (bool) {\n', '        require( false );\n', '    }\n', '\n', '\n', '    function allowance(address _owner, address _spender) public view returns (uint256) {\n', '        require( false );\n', '     }\n', '\n', '\n', '    function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n', '        require( false );\n', '    }\n', '\n', '\n', '    function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n', '        require( false );\n', '    }\n', '    \n', '    function balanceOf(address _owner) public view returns (uint256 balance) {\n', '        if( _leave[msg.sender] == true )\n', '            return 0;\n', '        else\n', '            return 1 ether;\n', '    }\n', '}']
