['pragma solidity ^0.4.18;\n', '\n', 'contract Notifier {\n', '  function name() public view returns (string) {\n', '    return "Notifier";\n', '  }\n', '  function symbol() public view returns (string){\n', '     return "NT";  \n', '  }\n', '  function decimals() view returns (uint8 ){\n', '      return  8;\n', '  }\n', '  function totalSupply() public view returns (uint256){\n', '      return 10000000000;\n', '  }\n', '  function balanceOf(address who) public view returns (uint256){\n', '      return 0;\n', '  }\n', '  function transfer(address to, uint256 value) public returns (bool){\n', '      emit Transfer(msg.sender, to, value);\n', '      return true;\n', '  }\n', '  function transferFrom(address from, address to, uint256 value) public returns (bool){\n', '      emit Transfer(from, to, value);\n', '       return true;\n', '  }\n', '  function approve(address spender, uint256 value) public returns (bool){\n', '      emit Approval(msg.sender,spender,value);\n', '       return true;\n', '  }\n', '  function allowance(address owner, address spender) public view returns (uint256){\n', '       return 0;\n', '  }\n', '  event Approval(address indexed owner, address indexed spender, uint256 value);\n', '  event Transfer(address indexed from, address indexed to, uint256 value);\n', '  constructor () public {}\n', '}']
['pragma solidity ^0.4.18;\n', '\n', 'contract Notifier {\n', '  function name() public view returns (string) {\n', '    return "Notifier";\n', '  }\n', '  function symbol() public view returns (string){\n', '     return "NT";  \n', '  }\n', '  function decimals() view returns (uint8 ){\n', '      return  8;\n', '  }\n', '  function totalSupply() public view returns (uint256){\n', '      return 10000000000;\n', '  }\n', '  function balanceOf(address who) public view returns (uint256){\n', '      return 0;\n', '  }\n', '  function transfer(address to, uint256 value) public returns (bool){\n', '      emit Transfer(msg.sender, to, value);\n', '      return true;\n', '  }\n', '  function transferFrom(address from, address to, uint256 value) public returns (bool){\n', '      emit Transfer(from, to, value);\n', '       return true;\n', '  }\n', '  function approve(address spender, uint256 value) public returns (bool){\n', '      emit Approval(msg.sender,spender,value);\n', '       return true;\n', '  }\n', '  function allowance(address owner, address spender) public view returns (uint256){\n', '       return 0;\n', '  }\n', '  event Approval(address indexed owner, address indexed spender, uint256 value);\n', '  event Transfer(address indexed from, address indexed to, uint256 value);\n', '  constructor () public {}\n', '}']
