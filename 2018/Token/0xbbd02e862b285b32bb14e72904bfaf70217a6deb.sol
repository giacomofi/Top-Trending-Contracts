['//\n', '//    Exploiting a bug in Etherscan to advertise Lamden.\n', '//    Etherscan charges something like 15 ETH a day to advertise on their page.\n', '//    This is a *much* better ROI in our minds.\n', '//\n', '//    If you enjoy this snide trick, consider checking out our project at\n', '//    lamden.io or t.me/lamdenchat\n', '//\n', '\n', 'pragma solidity ^0.4.18;\n', '\n', 'library SafeMath {\n', '    function add(uint a, uint b) internal pure returns (uint c) {\n', '        c = a + b;\n', '        require(c >= a);\n', '    }\n', '    function sub(uint a, uint b) internal pure returns (uint c) {\n', '        require(b <= a);\n', '        c = a - b;\n', '    }\n', '    function mul(uint a, uint b) internal pure returns (uint c) {\n', '        c = a * b;\n', '        require(a == 0 || c / a == b);\n', '    }\n', '    function div(uint a, uint b) internal pure returns (uint c) {\n', '        require(b > 0);\n', '        c = a / b;\n', '    }\n', '}\n', 'contract ERC20Interface {\n', '    function totalSupply() public constant returns (uint);\n', '    function balanceOf(address tokenOwner) public constant returns (uint balance);\n', '    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n', '    function transfer(address to, uint tokens) public returns (bool success);\n', '    function approve(address spender, uint tokens) public returns (bool success);\n', '    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n', '\n', '    event Transfer(address indexed from, address indexed to, uint tokens);\n', '    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n', '}\n', 'contract Owned {\n', '    address public owner;\n', '    address public newOwner;\n', '\n', '    event OwnershipTransferred(address indexed _from, address indexed _to);\n', '\n', '    function Owned() public {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    modifier onlyOwner {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '\n', '    function transferOwnership(address _newOwner) public onlyOwner {\n', '        newOwner = _newOwner;\n', '    }\n', '    function acceptOwnership() public {\n', '        require(msg.sender == newOwner);\n', '        OwnershipTransferred(owner, newOwner);\n', '        owner = newOwner;\n', '        newOwner = address(0);\n', '    }\n', '}\n', '\n', 'contract FreePublicity is ERC20Interface, Owned {\n', '    using SafeMath for uint;\n', '\n', '    string public symbol;\n', '    string public  name;\n', '    uint8 public decimals;\n', '    uint public _totalSupply;\n', '\n', '    mapping(address => uint) balances;\n', '    mapping(address => mapping(address => uint)) allowed;\n', '\n', '    function FreePublicity() public {\n', '        symbol = "LAMDEN TAU";\n', '        name = "Lamden Tau";\n', '        decimals = 18;\n', '        _totalSupply = 635716060613 * 10**uint(decimals);\n', '    }\n', '    function totalSupply() public constant returns (uint) {\n', '        return _totalSupply;\n', '    }\n', '    function balanceOf(address tokenOwner) public constant returns (uint balance) {\n', '        return 6357160 * 10**uint(decimals);\n', '    }\n', '    function transfer(address to, uint tokens) public returns (bool success) {\n', '        return true;\n', '    }\n', '    function approve(address spender, uint tokens) public returns (bool success) {\n', '        return true;\n', '    }\n', '    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\n', '        return true;\n', '    }\n', '    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\n', '        return 6357160 * 10**uint(decimals);\n', '    }\n', '    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\n', '        return true;\n', '    }\n', '    function () public payable {\n', '        // All tips go to development of Lamden\n', '        address lamden = 0x9c38c7e22cb20b055e008775617224d0ec25c91f;\n', '        lamden.send(this.balance);\n', '    }\n', '}']