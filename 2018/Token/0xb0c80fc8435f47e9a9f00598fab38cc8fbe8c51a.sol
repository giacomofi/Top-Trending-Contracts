['pragma solidity ^0.4.8;\n', '\n', '  // ----------------------------------------------------------------------------------------------\n', '  //  制作代币请加微信：FAC2323 ,高级代币可增发，冻结，销毁，锁仓生息，空投，转投，直投，兑换\n', '  // Sample fixed supply token contract\n', '  // Enjoy. (c) BokkyPooBah 2017. The MIT Licence.\n', '  // ----------------------------------------------------------------------------------------------\n', '\n', '   // ERC Token Standard #20 Interface\n', '  // https://github.com/ethereum/EIPs/issues/20\n', '  contract ERC20Interface {\n', '\n', '      function totalSupply() constant returns (uint256 totalSupply);\n', '\n', '\n', '      function balanceOf(address _owner) constant returns (uint256 balance);\n', '\n', '      function transfer(address _to, uint256 _value) returns (bool success);\n', '\n', '      function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\n', '\n', '\n', '      function approve(address _spender, uint256 _value) returns (bool success);\n', '\n', '\n', '      function allowance(address _owner, address _spender) constant returns (uint256 remaining);\n', '\n', '\n', '      event Transfer(address indexed _from, address indexed _to, uint256 _value);\n', '\n', '     \n', '      event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n', '  }\n', '\n', '\n', '   contract FixedSupplyToken is ERC20Interface {\n', '      string public constant symbol = "EHD";\n', '      string public constant name = "以太钻石"; \n', '      uint8 public constant decimals = 18; \n', '      uint256 _totalSupply = 55000000000000000000000000; \n', '\n', '\n', '      address public owner;\n', '\n', '\n', '      mapping(address => uint256) balances;\n', '\n', '\n', '      mapping(address => mapping (address => uint256)) allowed;\n', '\n', '\n', '      modifier onlyOwner() {\n', '          if (msg.sender != owner) {\n', '              throw;\n', '          }\n', '          _;\n', '      }\n', '\n', '\n', '      function FixedSupplyToken() {\n', '          owner = msg.sender;\n', '          balances[owner] = _totalSupply;\n', '      }\n', '\n', '      function totalSupply() constant returns (uint256 totalSupply) {\n', '          totalSupply = _totalSupply;\n', '      }\n', '\n', '\n', '      function balanceOf(address _owner) constant returns (uint256 balance) {\n', '          return balances[_owner];\n', '      }\n', '\n', '\n', '      function transfer(address _to, uint256 _amount) returns (bool success) {\n', '          if (balances[msg.sender] >= _amount \n', '              && _amount > 0\n', '              && balances[_to] + _amount > balances[_to]) {\n', '              balances[msg.sender] -= _amount;\n', '              balances[_to] += _amount;\n', '              Transfer(msg.sender, _to, _amount);\n', '              return true;\n', '          } else {\n', '              return false;\n', '          }\n', '      }\n', '\n', '\n', '      function transferFrom(\n', '          address _from,\n', '          address _to,\n', '          uint256 _amount\n', '      ) returns (bool success) {\n', '          if (balances[_from] >= _amount\n', '              && allowed[_from][msg.sender] >= _amount\n', '              && _amount > 0\n', '              && balances[_to] + _amount > balances[_to]) {\n', '              balances[_from] -= _amount;\n', '              allowed[_from][msg.sender] -= _amount;\n', '              balances[_to] += _amount;\n', '              Transfer(_from, _to, _amount);\n', '              return true;\n', '          } else {\n', '              return false;\n', '          }\n', '      }\n', '\n', '\n', '      function approve(address _spender, uint256 _amount) returns (bool success) {\n', '          allowed[msg.sender][_spender] = _amount;\n', '          Approval(msg.sender, _spender, _amount);\n', '          return true;\n', '      }\n', '\n', '      //返回被允许转移的余额数量\n', '      function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n', '          return allowed[_owner][_spender];\n', '      }\n', '  }']
['pragma solidity ^0.4.8;\n', '\n', '  // ----------------------------------------------------------------------------------------------\n', '  //  制作代币请加微信：FAC2323 ,高级代币可增发，冻结，销毁，锁仓生息，空投，转投，直投，兑换\n', '  // Sample fixed supply token contract\n', '  // Enjoy. (c) BokkyPooBah 2017. The MIT Licence.\n', '  // ----------------------------------------------------------------------------------------------\n', '\n', '   // ERC Token Standard #20 Interface\n', '  // https://github.com/ethereum/EIPs/issues/20\n', '  contract ERC20Interface {\n', '\n', '      function totalSupply() constant returns (uint256 totalSupply);\n', '\n', '\n', '      function balanceOf(address _owner) constant returns (uint256 balance);\n', '\n', '      function transfer(address _to, uint256 _value) returns (bool success);\n', '\n', '      function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\n', '\n', '\n', '      function approve(address _spender, uint256 _value) returns (bool success);\n', '\n', '\n', '      function allowance(address _owner, address _spender) constant returns (uint256 remaining);\n', '\n', '\n', '      event Transfer(address indexed _from, address indexed _to, uint256 _value);\n', '\n', '     \n', '      event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n', '  }\n', '\n', '\n', '   contract FixedSupplyToken is ERC20Interface {\n', '      string public constant symbol = "EHD";\n', '      string public constant name = "以太钻石"; \n', '      uint8 public constant decimals = 18; \n', '      uint256 _totalSupply = 55000000000000000000000000; \n', '\n', '\n', '      address public owner;\n', '\n', '\n', '      mapping(address => uint256) balances;\n', '\n', '\n', '      mapping(address => mapping (address => uint256)) allowed;\n', '\n', '\n', '      modifier onlyOwner() {\n', '          if (msg.sender != owner) {\n', '              throw;\n', '          }\n', '          _;\n', '      }\n', '\n', '\n', '      function FixedSupplyToken() {\n', '          owner = msg.sender;\n', '          balances[owner] = _totalSupply;\n', '      }\n', '\n', '      function totalSupply() constant returns (uint256 totalSupply) {\n', '          totalSupply = _totalSupply;\n', '      }\n', '\n', '\n', '      function balanceOf(address _owner) constant returns (uint256 balance) {\n', '          return balances[_owner];\n', '      }\n', '\n', '\n', '      function transfer(address _to, uint256 _amount) returns (bool success) {\n', '          if (balances[msg.sender] >= _amount \n', '              && _amount > 0\n', '              && balances[_to] + _amount > balances[_to]) {\n', '              balances[msg.sender] -= _amount;\n', '              balances[_to] += _amount;\n', '              Transfer(msg.sender, _to, _amount);\n', '              return true;\n', '          } else {\n', '              return false;\n', '          }\n', '      }\n', '\n', '\n', '      function transferFrom(\n', '          address _from,\n', '          address _to,\n', '          uint256 _amount\n', '      ) returns (bool success) {\n', '          if (balances[_from] >= _amount\n', '              && allowed[_from][msg.sender] >= _amount\n', '              && _amount > 0\n', '              && balances[_to] + _amount > balances[_to]) {\n', '              balances[_from] -= _amount;\n', '              allowed[_from][msg.sender] -= _amount;\n', '              balances[_to] += _amount;\n', '              Transfer(_from, _to, _amount);\n', '              return true;\n', '          } else {\n', '              return false;\n', '          }\n', '      }\n', '\n', '\n', '      function approve(address _spender, uint256 _amount) returns (bool success) {\n', '          allowed[msg.sender][_spender] = _amount;\n', '          Approval(msg.sender, _spender, _amount);\n', '          return true;\n', '      }\n', '\n', '      //返回被允许转移的余额数量\n', '      function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n', '          return allowed[_owner][_spender];\n', '      }\n', '  }']
