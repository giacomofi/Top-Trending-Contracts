['pragma solidity ^0.5.1;\n', '\n', 'contract Token {\n', '  function transfer(address to, uint256 value) public returns (bool success);\n', '  function transferFrom(address from, address to, uint256 value) public returns (bool success);\n', '     function balanceOf(address account) external view returns(uint256);\n', '     function allowance(address _owner, address _spender)external view returns(uint256);\n', '}\n', '\n', '\n', 'contract KryptoniexDEX {\n', '\n', '    \n', '    address admin;\n', '\n', '    constructor(address _admin) public{\n', '    admin = _admin;\n', '    }\n', '\n', '\n', '\n', '\n', '    function deposit() public payable returns(bool) {\n', '        require(msg.value > 0);\n', '        return true;\n', '    }\n', '\n', '     function withdraw(address payable to,uint256 amount) public payable returns(bool) {\n', '        require(admin==msg.sender);\n', '        require(address(this).balance > 0);\n', '        to.transfer(amount);\n', '        return true;\n', '    }\n', '\n', '\n', '    function tokenDeposit(address tokenaddr,address fromaddr,uint256 tokenAmount) public returns(bool)\n', '    {\n', '        require(tokenAmount > 0);\n', '        require(tokenallowance(tokenaddr,fromaddr) > 0);\n', '              Token(tokenaddr).transferFrom(fromaddr,address(this), tokenAmount);\n', '              return true;\n', '        \n', '    }\n', '  \n', '\n', '    function tokenWithdraw(address tokenAddr,address withdrawaddr, uint256 tokenAmount) public returns(bool)\n', '    {\n', '         require(admin==msg.sender);\n', '         Token(tokenAddr).transfer(withdrawaddr, tokenAmount);\n', '         return true;\n', '\n', '    }\n', '    \n', '     function viewTokenBalance(address tokenAddr,address baladdr)public view returns(uint256){\n', '        return Token(tokenAddr).balanceOf(baladdr);\n', '    }\n', '    \n', '    function tokenallowance(address tokenAddr,address owner) public view returns(uint256){\n', '        return Token(tokenAddr).allowance(owner,address(this));\n', '    }\n', '    \n', '\n', '\n', '\n', '}']