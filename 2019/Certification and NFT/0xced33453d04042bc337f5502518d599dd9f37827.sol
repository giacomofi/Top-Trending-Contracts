['pragma solidity ^0.4.16;\n', '\n', 'interface token {\n', '    function transfer(address receiver, uint amount);\n', '}\n', '\n', 'contract Crowdsale {\n', '    address public beneficiary;  \n', '    uint public fundingGoal;   \n', '    uint public amountRaised;   \n', '    uint public deadline;      \n', '    uint public price;    \n', '    token public tokenReward;   \n', '\n', '    mapping(address => uint256) public balanceOf;\n', '    bool public fundingGoalReached = false;  \n', '    bool public crowdsaleClosed = false;   \n', '\n', '    event GoalReached(address recipient, uint totalAmountRaised);\n', '    event FundTransfer(address backer, uint amount, bool isContribution);\n', '    event LogAmount(uint amount);\n', '\n', '    \n', '    function Crowdsale(\n', '        address ifSuccessfulSendTo,\n', '        uint fundingGoalInEthers,\n', '        uint durationInMinutes,\n', '        uint weiCostOfEachToken,\n', '        address addressOfTokenUsedAsReward) {\n', '            beneficiary = ifSuccessfulSendTo;\n', '            fundingGoal = fundingGoalInEthers * 1 ether;\n', '            deadline = now + durationInMinutes * 1 minutes;\n', '            price = weiCostOfEachToken * 1 wei;\n', '            tokenReward = token(addressOfTokenUsedAsReward);   \n', '    }\n', '\n', '    \n', '    function () payable {\n', '        require(!crowdsaleClosed);\n', '        uint amount = msg.value;\n', '        balanceOf[msg.sender] += amount;\n', '        amountRaised += amount;\n', '        LogAmount(amount);\n', '        tokenReward.transfer(msg.sender, 2000 * (amount / price));\n', '        FundTransfer(msg.sender, amount, true);\n', '    }\n', '\n', '    \n', '    modifier afterDeadline() { if (now >= deadline) _; }\n', '\n', '    function checkGoalReached() afterDeadline {\n', '        fundingGoalReached = true;\n', '        GoalReached(beneficiary, amountRaised);\n', '        crowdsaleClosed = true;\n', '    }\n', '\n', '\n', '    function safeWithdrawal() afterDeadline {\n', '    \n', '    if (fundingGoalReached && beneficiary == msg.sender) {\n', '            if (beneficiary.send(amountRaised)) {\n', '                FundTransfer(beneficiary, amountRaised, false);/**/\n', '            } else {\n', '                //If we fail to send the funds to beneficiary, unlock funders balance\n', '                fundingGoalReached = false;\n', '            }\n', '        }\n', '    }\n', '}']