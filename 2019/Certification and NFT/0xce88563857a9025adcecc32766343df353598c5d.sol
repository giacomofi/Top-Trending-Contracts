['pragma solidity ^0.5.0;\n', '\n', 'contract freedomStatement {\n', '    \n', '    string public statement = "https://ipfs.globalupload.io/QmfEnSNTHTe9ut6frhNsY16rXhiTjoGWtXozrA66y56Pbn";\n', '    mapping (address => bool) internal consent;\n', '    event wearehere(string statement);\n', '    \n', '    constructor () public {\n', '        emit wearehere(statement);\n', '    }\n', '        \n', '    function isHuman(address addr) internal view returns (bool) {\n', '        uint size;\n', '        assembly { size := extcodesize(addr) }\n', '        return size == 0;\n', '    }\n', '\n', '    function () external payable {\n', '        require(isHuman(msg.sender),"no robot");//Don\'t want to use tx.origin because that will cause an interoperability problem\n', "        require(msg.value< 0.0000001 ether);//don't give me money, for metamask no error\n", '        consent[msg.sender] = true;\n', '    }\n', '    \n', '    function check(address addr) public view returns (bool){\n', '        return(consent[addr]);\n', '    }\n', '}']