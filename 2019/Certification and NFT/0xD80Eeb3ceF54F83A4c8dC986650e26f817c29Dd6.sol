['/**\n', ' *Submitted for verification at Etherscan.io on 2021-02-18\n', '*/\n', '\n', '/**\n', ' *Submitted for verification at Etherscan.io on 2019-12-27\n', '*/\n', '\n', 'pragma solidity ^0.4.24;\n', '\n', 'contract OwnerHelper\n', '{\n', '    address public owner;\n', '\n', '    event OwnerTransferPropose(address indexed _from, address indexed _to);\n', '\n', '    modifier onlyOwner\n', '    {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '\n', '    constructor() public\n', '    {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    function transferOwnership(address _to) onlyOwner public\n', '    {\n', '        require(_to != owner);\n', '        require(_to != address(0x0));\n', '        owner = _to;\n', '        emit OwnerTransferPropose(owner, _to);\n', '    }\n', '}\n', '\n', 'contract Token {\n', '    bytes32 public standard;\n', '    bytes32 public name;\n', '    bytes32 public symbol;\n', '    uint256 public totalSupply;\n', '    uint8 public decimals;\n', '    bool public allowTransactions; \n', '    mapping (address => uint256) public balanceOf;\n', '    mapping (address => mapping (address => uint256)) public allowance;\n', '    function transfer(address _to, uint256 _value) public returns (bool success);\n', '    function approve(address _spender, uint256 _value) public returns (bool success);\n', '    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n', '}\n', '\n', 'contract TokenDistribute is OwnerHelper\n', '{\n', '    uint public E18 = 10 ** 18;\n', '\n', '    constructor() public\n', '    {\n', '    }\n', '    \n', '    function multipleTokenDistribute(address _token, address[] _addresses, uint[] _values) public onlyOwner\n', '    {\n', '        for(uint i = 0; i < _addresses.length ; i++)\n', '        {\n', '            Token(_token).transfer(_addresses[i], _values[i] * E18);  \n', '        }\n', '    }\n', '    \n', '    function withDrawToken(address _token, uint _value) public\n', '    {\n', '        Token(_token).transfer(owner, _value * E18);\n', '    }\n', '}']