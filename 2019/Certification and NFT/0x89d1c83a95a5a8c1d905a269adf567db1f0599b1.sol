['pragma solidity ^0.4.24;\n', '\n', '/**\n', ' * @title Proxy\n', ' * @dev Basic proxy that delegates all calls to a fixed implementing contract.\n', ' * The implementing contract cannot be upgraded.\n', ' * @author Julien Niset - <julien@argent.xyz>\n', ' */\n', 'contract Proxy {\n', '\n', '    address implementation;\n', '\n', '    event Received(uint indexed value, address indexed sender, bytes data);\n', '\n', '    constructor(address _implementation) public {\n', '        implementation = _implementation;\n', '    }\n', '\n', '    function() external payable {\n', '\n', '        if(msg.data.length == 0 && msg.value > 0) { \n', '            emit Received(msg.value, msg.sender, msg.data); \n', '        }\n', '        else {\n', '            // solium-disable-next-line security/no-inline-assembly\n', '            assembly {\n', '                let target := sload(0)\n', '                calldatacopy(0, 0, calldatasize())\n', '                let result := delegatecall(gas, target, 0, calldatasize(), 0, 0)\n', '                returndatacopy(0, 0, returndatasize())\n', '                switch result \n', '                case 0 {revert(0, returndatasize())} \n', '                default {return (0, returndatasize())}\n', '            }\n', '        }\n', '    }\n', '}']