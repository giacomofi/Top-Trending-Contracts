['/**\n', ' *Submitted for verification at Etherscan.io on 2019-07-07\n', '*/\n', '\n', 'pragma solidity ^0.5.10;\n', '\n', 'contract distributer{\n', '    \n', '    struct partner {\n', '        address payable addr;\n', '        uint ratio;\n', '        uint payout;\n', '    }\n', '\n', '    partner[] public partners;\n', '\n', '    modifier onlyPayeeOne() { \n', '        if (msg.sender == partners[0].addr){\n', '            _;\n', '        }\n', '    }\n', '\n', '    constructor() public {\n', '        partners.push(partner(address(0x4D90517Ad43e8B7bd90b55C6e7e4b2292162607b),7840, 0)); //78.4 - onlyPayeeOne\n', '        partners.push(partner(address(0x1102934CD05901fdc9A98265d30DF902Ad7d78E1),1080, 0)); //10.8\n', '        partners.push(partner(address(0xd5f7ce66673F74D1a136D29cCD111000fdEd70B3),990, 0)); //9.9\n', '        partners.push(partner(address(0xDa470AB346A57D403e725138682F3544ba64a9C1),90, 0)); //0.9\n', '    }\n', '    \n', '    function() payable external {}\n', '    \n', '    function calculatePayouts() internal {\n', '        //set payouts to each address\n', '        for (uint i=0; i< partners.length; i++) {\n', '            partners[i].payout += (address(this).balance * partners[i].ratio) / 10000;\n', '        }\n', '    }\n', '    \n', '    function payout() public onlyPayeeOne {\n', '        //This payout is only suitable for a trusted setup and has security consideration where the addresses in partners can be contracts or extended more than 4 addresses.\n', '        calculatePayouts();\n', '        for (uint i=0; i<partners.length; i++) {\n', '            if (partners[i].addr.send(partners[i].payout)) {\n', '                partners[i].payout = 0;\n', '            }\n', '        }\n', '    }\n', '    \n', '}']