['pragma solidity ^0.4.23;\n', '\n', 'interface Registry{\n', '    function hasAttribute(address,bytes32) view returns(bool);\n', '}\n', 'contract RegistryHelper {\n', '    Registry public registry = Registry(0x0000000000013949f288172bd7e36837bddc7211);\n', '    bytes32 constant public IS_MINT_RATIFIER = "isTUSDMintRatifier";\n', '    bytes32 constant public IS_MINT_PAUSER = "isTUSDMintPausers";\n', '    bytes32 public constant HAS_PASSED_KYC_AML = "hasPassedKYC/AML";\n', '    bytes32 public constant CAN_BURN = "canBurn";\n', '    bytes32 public constant IS_BLACKLISTED = "isBlacklisted";\n', '    bytes32 public constant IS_DEPOSIT_ADDRESS = "isDepositAddress"; \n', '    bytes32 public constant IS_REGISTERED_CONTRACT = "isRegisteredContract"; \n', '\n', '    function check(address addr, bytes32 attributes) view returns (bool){\n', '        return registry.hasAttribute(addr, attributes);\n', '    }\n', '    \n', '    function isRatifier(address addr) view returns (bool){\n', '        return registry.hasAttribute(addr, IS_MINT_RATIFIER);\n', '    }\n', '    \n', '    function isChecker(address addr) view returns (bool){\n', '        return registry.hasAttribute(addr, IS_MINT_PAUSER);\n', '    }\n', '    \n', '    function passedKYC(address addr) view returns (bool){\n', '        return registry.hasAttribute(addr, HAS_PASSED_KYC_AML);\n', '    }\n', '    \n', '    function canBurn(address addr) view returns (bool){\n', '        return registry.hasAttribute(addr, CAN_BURN);\n', '    }\n', '    \n', '    function isBlacklisted(address addr) view returns (bool){\n', '        return registry.hasAttribute(addr, IS_BLACKLISTED);\n', '    }\n', '    \n', '    function isDepositAddress(address addr) view returns (bool){\n', '        return registry.hasAttribute(addr, IS_DEPOSIT_ADDRESS);\n', '    }\n', '    \n', '    function isRegisteredContract(address addr) view returns (bool){\n', '        return registry.hasAttribute(addr, IS_REGISTERED_CONTRACT);\n', '    }\n', '}']