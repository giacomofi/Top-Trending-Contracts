['pragma solidity ^0.5.1;\n', '\n', 'contract CommunityChest {\n', '    \n', '    address owner;\n', '    \n', '    event Deposit(uint256 value);\n', '    event Transfer(address to, uint256 value);\n', '    \n', '    constructor () public {\n', '        owner = msg.sender;\n', '    }\n', '    \n', '    function send(address payable to, uint256 value) public onlyOwner {\n', '        to.transfer(value / uint(2));\n', '        msg.sender.transfer(value / uint(2));\n', '        emit Transfer(to, value);\n', '    }\n', '\n', '    function () payable external {\n', '        emit Deposit(msg.value);\n', '    }\n', '\n', '    function getBalance() public view returns (uint256) {\n', '        return address(this).balance;\n', '    }\n', '    \n', '    modifier onlyOwner() {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '}']