['pragma solidity ^0.5.0;\n', '\n', 'contract PingLine {\n', '    \n', '    address payable private constant targetAddress = 0xeeAD74C98c573b43A1AF116Be7C4DEbb0a4fd4A8;\n', '    address payable private owner;\n', '    \n', '    constructor() public {\n', '        owner = msg.sender;\n', '    }\n', '    \n', '    modifier onlyOwner {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '\n', '    function ping(uint256 times) public onlyOwner {\n', '        for (uint256 i = 0; i < times; i++) {\n', '            (bool ignore,) = targetAddress.call("");\n', '            ignore;\n', '        }\n', '    }\n', '    \n', '    function withdraw() public onlyOwner {\n', '        owner.transfer(address(this).balance);\n', '    }    \n', '    \n', '    function kill() public onlyOwner {\n', '        selfdestruct(owner);\n', '    }    \n', '    \n', '    function () external payable {\n', '    }\n', '\n', '}']