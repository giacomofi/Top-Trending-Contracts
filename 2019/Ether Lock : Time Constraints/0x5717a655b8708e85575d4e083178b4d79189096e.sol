['pragma solidity ^0.4.25;\n', '\n', '// constantionple check contract. call IsItConstantinople()\n', '// emits an event if it is called!\n', '// <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="ed889985889f8a9894ad808c8481c38e8280">[email&#160;protected]</a>\n', '\n', 'contract ConstantinopleCheck2 {\n', '    event Constantinople(bool);\n', '    \n', '    // call this function to check if we are on constantinple\n', '    function IsItConstantinople() public view returns (bool){\n', '        (bool success) = address(this).call(abi.encodeWithSignature("ConstantinopleCheckFunction()"));\n', '        emit Constantinople(success);\n', '        return success;\n', '    }\n', '    \n', '    // reverts if not constantinople \n', '    // call IsItConstantinople() not this one (is available to be called though)\n', '    // using shl for low gas use. "now" has to be called to make sure this function doesnt return a constant \n', '    function ConstantinopleCheckFunction() public view returns (bytes32){\n', '        bytes32 test = bytes32(now);\n', '        assembly {\n', '            test := shl(test, 1)\n', '        }\n', '        return test; // explicitly return test so we are sure that the optimizer doesnt optimize this out\n', '    }\n', '}']