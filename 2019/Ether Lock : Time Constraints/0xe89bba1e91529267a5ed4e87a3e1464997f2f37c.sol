['pragma solidity >= 0.4.24;\n', '\n', 'interface token {\n', '    function transfer(address receiver, uint amount) external;\n', '\tfunction transferFrom(address from, address to, uint value) external;\n', '    function balanceOf(address tokenOwner) constant external returns (uint balance);\n', '}\n', '\n', 'contract againstGraveyard {\n', '    mapping(address => bool) public active;\n', '    mapping(address => string) public tkname;\n', '\tmapping(address => uint) public rate; //9 decimal places\n', '\tmapping(address => uint) public buyoffer; //in AGAINST\n', '\ttoken tokenReward = token(0xF7Be133620a7D944595683cE2B14156591EFe609);\n', '\t\n', '\t\n', '    string public name = "AGAINST GR";\n', '    string public symbol = "AGAINST";\n', '    string public comment = "AGAINST Graveyard Tokens";\n', '    address internal owner;\n', '\t\n', '\tconstructor() public {\n', '       owner = address(msg.sender); \n', '    }\n', '\t\n', '\tfunction registerToken(address _token, string _name, uint _rate, uint _buyoffer) public {\n', '\t   if (msg.sender == owner) {\n', '\t     active[_token] = false;\n', '\t\t tkname[_token] = _name;\n', '\t\t rate[_token] = _rate; //with 9 decimal places\n', '\t\t buyoffer[_token] = _buyoffer;\t//with 18 decimal places\t \n', '\t   }\n', '\t}\n', '\t\n', '\tfunction enableToken(address _token) public {\n', '\t   if (msg.sender == owner) {\n', '\t      active[_token] = true;\n', '\t   }\n', '\t}\t\n', '\t\n', '\tfunction disableToken(address _token) public {\n', '\t   if (msg.sender == owner) {\n', '\t      active[_token] = false;\n', '\t   }\n', '\t}\n', '\t\n', '\tfunction exchangeIt(address _token, uint _qtd) public payable {\n', "\t   require(active[_token],'Token Disabled');\n", '\t   uint amount = _qtd*(10**9)*rate[_token];\n', '\t   require(amount <= buyoffer[_token]);\n', '\t   buyoffer[_token] = buyoffer[_token]-amount;\n', '\t   token deadToken = token(_token);\n', '\t   deadToken.transferFrom(msg.sender,owner,_qtd);\n', '\t   tokenReward.transfer(msg.sender, amount);\n', '\t}\n', '\t\n', '}']