['pragma solidity ^0.5.0;\n', '\n', '// Check if we are on Constantinople!! \n', '// <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="b2d7c6dad7c0d5c7cbf2dfd3dbde9cd1dddf">[email&#160;protected]</a>\n', '\n', 'contract HelloWorld{\n', '    function Hello() public pure returns (string memory){\n', '        return ("Hello World");\n', '    }\n', '}\n', '\n', 'contract ConstantinopleCheck{\n', '    \n', '    address public DeployedContractAddress;\n', '    \n', '    function deploy() public {\n', '        // hex of hello world deploy bytecode\n', '        bytes memory code = hex&#39;608060405234801561001057600080fd5b50610124806100206000396000f3fe6080604052348015600f57600080fd5b50600436106044577c01000000000000000000000000000000000000000000000000000000006000350463bcdfe0d581146049575b600080fd5b604f60c1565b6040805160208082528351818301528351919283929083019185019080838360005b8381101560875781810151838201526020016071565b50505050905090810190601f16801560b35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051808201909152600b81527f48656c6c6f20576f726c6400000000000000000000000000000000000000000060208201529056fea165627a7a72305820569c1233dc571997cbd1fa15675cd16b4cacd5615abb6c991dd85a516af1ecc80029&#39;;\n', '        uint len = code.length;\n', '        address deployed;\n', '        assembly{\n', '            deployed := create2(0, add(code, 0x20), len, "Hello Constantinople!")\n', '        }\n', '        DeployedContractAddress = deployed;\n', '    }\n', '    \n', '    // reverts if not Constantinople\n', '    function IsItConstantinople() public view returns (bool){\n', '        address target = address(this);\n', '        bytes32 hash;\n', '        assembly{\n', '            hash := extcodehash(target)\n', '        }\n', '        return (true);\n', '    }\n', '    \n', '    function Hello() public view returns (string memory) {\n', '        return (HelloWorld(DeployedContractAddress).Hello());\n', '    }\n', '    \n', '    \n', '    \n', '}']
['pragma solidity ^0.5.0;\n', '\n', '// Check if we are on Constantinople!! \n', '// etherguy@mail.com\n', '\n', 'contract HelloWorld{\n', '    function Hello() public pure returns (string memory){\n', '        return ("Hello World");\n', '    }\n', '}\n', '\n', 'contract ConstantinopleCheck{\n', '    \n', '    address public DeployedContractAddress;\n', '    \n', '    function deploy() public {\n', '        // hex of hello world deploy bytecode\n', "        bytes memory code = hex'608060405234801561001057600080fd5b50610124806100206000396000f3fe6080604052348015600f57600080fd5b50600436106044577c01000000000000000000000000000000000000000000000000000000006000350463bcdfe0d581146049575b600080fd5b604f60c1565b6040805160208082528351818301528351919283929083019185019080838360005b8381101560875781810151838201526020016071565b50505050905090810190601f16801560b35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051808201909152600b81527f48656c6c6f20576f726c6400000000000000000000000000000000000000000060208201529056fea165627a7a72305820569c1233dc571997cbd1fa15675cd16b4cacd5615abb6c991dd85a516af1ecc80029';\n", '        uint len = code.length;\n', '        address deployed;\n', '        assembly{\n', '            deployed := create2(0, add(code, 0x20), len, "Hello Constantinople!")\n', '        }\n', '        DeployedContractAddress = deployed;\n', '    }\n', '    \n', '    // reverts if not Constantinople\n', '    function IsItConstantinople() public view returns (bool){\n', '        address target = address(this);\n', '        bytes32 hash;\n', '        assembly{\n', '            hash := extcodehash(target)\n', '        }\n', '        return (true);\n', '    }\n', '    \n', '    function Hello() public view returns (string memory) {\n', '        return (HelloWorld(DeployedContractAddress).Hello());\n', '    }\n', '    \n', '    \n', '    \n', '}']
