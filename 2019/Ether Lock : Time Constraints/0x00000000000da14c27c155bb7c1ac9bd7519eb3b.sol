['pragma solidity ^0.4.23;\n', '\n', '// File: contracts/utilities/DepositAddressRegistrar.sol\n', '\n', 'interface Registry {\n', '    function setAttributeValue(address who, bytes32 what, uint val) external;\n', '    function hasAttribute(address _who, bytes32 _attribute) external view returns(bool);\n', '}\n', '\n', 'contract DepositAddressRegistrar {\n', '    Registry public registry;\n', '    \n', '    bytes32 public constant IS_DEPOSIT_ADDRESS = "isDepositAddress"; \n', '    event DepositAddressRegistered(address registeredAddress);\n', '\n', '    constructor(address _registry) public {\n', '        registry = Registry(_registry);\n', '    }\n', '    \n', '    function registerDepositAddress() public {\n', '        address shiftedAddress = address(uint(msg.sender) >> 20);\n', '        require(!registry.hasAttribute(shiftedAddress, IS_DEPOSIT_ADDRESS), "deposit address already registered");\n', '        registry.setAttributeValue(shiftedAddress, IS_DEPOSIT_ADDRESS, uint(msg.sender));\n', '        emit DepositAddressRegistered(msg.sender);\n', '    }\n', '    \n', '    function() external payable {\n', '        registerDepositAddress();\n', '        msg.sender.transfer(msg.value);\n', '    }\n', '}']
['pragma solidity ^0.4.23;\n', '\n', '// File: contracts/utilities/DepositAddressRegistrar.sol\n', '\n', 'interface Registry {\n', '    function setAttributeValue(address who, bytes32 what, uint val) external;\n', '    function hasAttribute(address _who, bytes32 _attribute) external view returns(bool);\n', '}\n', '\n', 'contract DepositAddressRegistrar {\n', '    Registry public registry;\n', '    \n', '    bytes32 public constant IS_DEPOSIT_ADDRESS = "isDepositAddress"; \n', '    event DepositAddressRegistered(address registeredAddress);\n', '\n', '    constructor(address _registry) public {\n', '        registry = Registry(_registry);\n', '    }\n', '    \n', '    function registerDepositAddress() public {\n', '        address shiftedAddress = address(uint(msg.sender) >> 20);\n', '        require(!registry.hasAttribute(shiftedAddress, IS_DEPOSIT_ADDRESS), "deposit address already registered");\n', '        registry.setAttributeValue(shiftedAddress, IS_DEPOSIT_ADDRESS, uint(msg.sender));\n', '        emit DepositAddressRegistered(msg.sender);\n', '    }\n', '    \n', '    function() external payable {\n', '        registerDepositAddress();\n', '        msg.sender.transfer(msg.value);\n', '    }\n', '}']
