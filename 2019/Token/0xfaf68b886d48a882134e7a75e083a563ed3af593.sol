['pragma solidity 0.4.24;\n', '\n', 'contract Delegate {\n', '\n', '    function mint(address _sender, address _to) public returns (bool);\n', '\n', '    function approve(address _sender, address _to, uint256 _tokenId) public returns (bool);\n', '\n', '    function setApprovalForAll(address _sender, address _operator, bool _approved) public returns (bool);\n', '\n', '    function transferFrom(address _sender, address _from, address _to, uint256 _tokenId) public returns (bool);\n', '    \n', '    function safeTransferFrom(address _sender, address _from, address _to, uint256 _tokenId) public returns (bool);\n', '\n', '    function safeTransferFrom(address _sender, address _from, address _to, uint256 _tokenId, bytes memory _data) public returns (bool);\n', '\n', '}\n', '\n', 'contract Ownable {\n', '\n', '    address public owner;\n', '\n', '    constructor() public {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    function setOwner(address _owner) public onlyOwner {\n', '        owner = _owner;\n', '    }\n', '\n', '    function getOwner() public view returns (address) {\n', '        return owner;\n', '    }\n', '\n', '    modifier onlyOwner {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '\n', '}\n', '\n', '\n', 'contract BasicMintable is Delegate, Ownable {\n', '\n', '    mapping(address => bool) public minters;\n', '\n', '    function setCanMint(address minter, bool canMint) public onlyOwner {\n', '        minters[minter] = canMint;\n', '    }\n', '\n', '    bool public canAnyMint = true;\n', '\n', '    function setCanAnyMint(bool canMint) public onlyOwner {\n', '        canAnyMint = canMint;\n', '    }\n', '\n', '    function mint(address _sender, address) public returns (bool) {\n', '        require(canAnyMint, "no minting possible");\n', '        return minters[_sender];\n', '    }\n', '\n', '    function approve(address, address, uint256) public returns (bool) {\n', '        return true;\n', '    }\n', '\n', '    function setApprovalForAll(address, address, bool) public returns (bool) {\n', '        return true;\n', '    }\n', '\n', '    function transferFrom(address, address, address, uint256) public returns (bool) {\n', '        return true;\n', '    }\n', '    \n', '    function safeTransferFrom(address, address, address, uint256) public returns (bool) {\n', '        return true;\n', '    }\n', '\n', '    function safeTransferFrom(address, address, address, uint256, bytes memory) public returns (bool) {\n', '        return true;\n', '    }\n', '\n', '}']