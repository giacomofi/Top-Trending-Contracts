['pragma solidity ^0.4.16;\n', '\n', 'interface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; }\n', '\n', 'contract PELO {\n', '    // Public variables of the token\n', '    string public name = "PELO Coin";\n', '    string public symbol = "PELO";\n', '    uint8 public decimals = 18;\n', '    // Decimals = 18\n', '    uint256 public totalSupply;\n', '    uint256 public trl2Supply = 215000000;\n', '    uint256 public buyPrice = 3000000;\n', '    address public creator;\n', '    // This creates an array with all balances\n', '    mapping (address => uint256) public balanceOf;\n', '    mapping (address => mapping (address => uint256)) public allowance;\n', '\n', '    // This generates a public event on the blockchain\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '    event FundTransfer(address backer, uint amount, bool isContribution);\n', '    \n', '    \n', '    /**\n', '     * Constrctor function\n', '     *\n', '     * Initializes contract with initial supply tokens to the creator of the contract\n', '     */\n', '    function PELO () public {\n', '        totalSupply = trl2Supply * 10 ** uint256(decimals);  // Update total supply with the decimal amount\n', '        balanceOf[msg.sender] = totalSupply;    // Give PELO Token the total created tokens\n', '        creator = msg.sender;\n', '    }\n', '    /**\n', '     * Internal transfer, only can be called by this contract\n', '     */\n', '    function _transfer(address _from, address _to, uint _value) internal {\n', '        require(_to != 0x0); //Burn\n', '        require(balanceOf[_from] >= _value);\n', '        require(balanceOf[_to] + _value >= balanceOf[_to]);\n', '        balanceOf[_from] -= _value;\n', '        balanceOf[_to] += _value;\n', '        Transfer(_from, _to, _value);\n', '      \n', '    }\n', '\n', '    function transfer(address _to, uint256 _value) public {\n', '        _transfer(msg.sender, _to, _value);\n', '    }\n', '\n', '    \n', '    \n', '    /// @notice Buy tokens from contract by sending ethereum to contract address with no minimum contribution\n', '    function () payable internal {\n', '        uint amount = msg.value * buyPrice ;                    // calculates the amount\n', '        uint amountRaised;                                     \n', '        amountRaised += msg.value;                            \n', '        require(balanceOf[creator] >= amount);               \n', '        require(msg.value >=0);                        \n', "        balanceOf[msg.sender] += amount;                  // adds the amount to buyer's balance\n", '        balanceOf[creator] -= amount;                        \n', '        Transfer(creator, msg.sender, amount);               \n', '        creator.transfer(amountRaised);\n', '    }    \n', '    \n', ' }']