['/**\n', ' *Submitted for verification at Etherscan.io on 2019-07-11\n', '*/\n', '\n', 'pragma solidity ^0.5.0;\n', '\n', '// File: ERC20Interface.sol\n', '\n', '// ----------------------------------------------------------------------------\n', '// ERC Token Standard #20 Interface\n', '// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n', '// ----------------------------------------------------------------------------\n', 'contract ERC20Interface {\n', '    function totalSupply() public view returns (uint);\n', '    function balanceOf(address tokenOwner) public view returns (uint balance);\n', '    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\n', '    function transfer(address to, uint tokens) public returns (bool success);\n', '    function approve(address spender, uint tokens) public returns (bool success);\n', '    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n', '\n', '    event Transfer(address indexed from, address indexed to, uint tokens);\n', '    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n', '}\n', '\n', '// File: BVATokenHolder.sol\n', '\n', 'contract BVATokenHolder {\n', '    ERC20Interface erc20Contract;\n', '    address payable owner;\n', '    string public name;\n', '\n', '\n', '    modifier isOwner() {\n', '        require(msg.sender == owner, "must be contract owner");\n', '        _;\n', '    }\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '    // Constructor\n', '    // ------------------------------------------------------------------------\n', '    constructor(ERC20Interface ctr, string memory _name) public {\n', '        erc20Contract = ctr;\n', '        owner         = msg.sender;\n', '        name          = _name;\n', '    }\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '    // Unlock Tokens\n', '    // ------------------------------------------------------------------------\n', '    function transferTokens(address to, uint amount) external isOwner {\n', '        erc20Contract.transfer(to, amount);\n', '    }\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '    // Withdraw ETH from this contract to `owner`\n', '    // ------------------------------------------------------------------------\n', '    function withdrawEther(uint _amount) external isOwner {\n', '        owner.transfer(_amount);\n', '    }\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '    // accept ETH\n', '    // ------------------------------------------------------------------------\n', '    function () external payable {\n', '    }\n', '}']