['// SPDX-License-Identifier: MIT\n', 'pragma solidity ^0.8.0;\n', '\n', 'import "ERC20.sol";\n', 'import "ERC20Burnable.sol";\n', 'import "ERC20Snapshot.sol";\n', 'import "Ownable.sol";\n', 'import "Pausable.sol";\n', '\n', 'contract Giant is ERC20, ERC20Burnable, ERC20Snapshot, Ownable, Pausable {\n', '    constructor() ERC20("Giant", "GIAN") {\n', '        _mint(msg.sender, 10000000 * 10 ** decimals());\n', '    }\n', '\n', '    function snapshot() public onlyOwner {\n', '        _snapshot();\n', '    }\n', '\n', '    function pause() public onlyOwner {\n', '        _pause();\n', '    }\n', '\n', '    function unpause() public onlyOwner {\n', '        _unpause();\n', '    }\n', '\n', '    function mint(address to, uint256 amount) public onlyOwner {\n', '        _mint(to, amount);\n', '    }\n', '\n', '    function _beforeTokenTransfer(address from, address to, uint256 amount)\n', '        internal\n', '        whenNotPaused\n', '        override(ERC20, ERC20Snapshot)\n', '    {\n', '        super._beforeTokenTransfer(from, to, amount);\n', '    }\n', '}']