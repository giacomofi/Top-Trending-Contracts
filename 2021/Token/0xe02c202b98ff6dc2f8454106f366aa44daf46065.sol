['// SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity >=0.6.2 <0.8.0;\n', '\n', '\n', 'import "./ERC20.sol";\n', '\n', '\n', 'contract TeamToken is ERC20 {\n', '\n', '    modifier checkIsAddressValid(address ethAddress)\n', '    {\n', '        require(ethAddress != address(0), "[Validation] invalid address");\n', '        require(ethAddress == address(ethAddress), "[Validation] invalid address");\n', '        _;\n', '    }\n', '\n', '    constructor(\n', '        string memory name,\n', '        string memory symbol,\n', '        uint8 decimals,\n', '        uint256 supply,\n', '        address owner,\n', '        address feeWallet\n', '    ) public checkIsAddressValid(owner) checkIsAddressValid(feeWallet) ERC20(name, symbol) {\n', '        require(decimals >=8 && decimals <= 18, "[Validation] Not valid decimals");\n', '        require(supply > 0, "[Validation] inital supply should be greater than 0");\n', '\n', '        _setupDecimals(decimals);\n', '        _mint(owner, supply * 995/1000);\n', '        _mint(feeWallet, supply * 5/1000);       \n', '    }\n', '}']