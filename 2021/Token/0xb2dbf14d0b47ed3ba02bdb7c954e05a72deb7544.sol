['//SPDX-License-Identifier: MIT\n', 'pragma solidity ^0.6.12;\n', 'import "./Ownable.sol";\n', 'import "./ERC20.sol";\n', '\n', 'contract MobiFi is ERC20("MobiFi", "MoFi"), Ownable {\n', '    mapping(address => bool) public Minter;\n', '    uint256 constant MaxSupply = 150e24;\n', '\n', '    constructor(address _masterAddress, uint256 _preMintAmount) public {\n', '        _mint(_masterAddress, _preMintAmount);\n', '    }\n', '\n', '    function AddMinter(address _minter) public onlyOwner {\n', '        Minter[_minter] = true;\n', '    }\n', '\n', '    function RemoveMinter(address _minter) public onlyOwner {\n', '        Minter[_minter] = false;\n', '    }\n', '\n', '    modifier onlyMinter {\n', '        require(Minter[msg.sender]);\n', '        _;\n', '    }\n', '\n', '    function mint(address account, uint256 amount) public onlyMinter {\n', '        uint256 TotalSupply = totalSupply();\n', '        if (TotalSupply.add(amount) > MaxSupply) {\n', '            _mint(account, MaxSupply.sub(TotalSupply));\n', '        } else {\n', '            _mint(account, amount);\n', '        }\n', '    }\n', '\n', '    function burn(address account, uint256 amount) public onlyMinter {\n', '        _burn(account, amount);\n', '    }\n', '}']