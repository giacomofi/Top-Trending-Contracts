['/**\n', ' *Submitted for verification at Etherscan.io on 2021-03-21\n', '*/\n', '\n', '// SPDX-License-Identifier: UNLICENSED\n', '\n', 'pragma solidity ^0.8.0;\n', '\n', 'interface IERC20 {\n', '  function totalSupply() external view returns (uint);\n', '  function balanceOf(address account) external view returns (uint);\n', '  function transfer(address recipient, uint256 amount) external returns (bool);\n', '  function approve(address spender, uint amount) external returns (bool);\n', '  function redeem(uint256 _amount) external;\n', '}\n', '\n', 'interface IBPool {\n', '  function totalSupply() external view returns (uint);\n', '  function joinPool(uint poolAmountOut, uint[] calldata maxAmountsIn) external;\n', '}\n', '\n', 'contract BPoolProposal {\n', '\n', '  function execute() public {\n', '\n', '    uint MAX_INT = 2**256 - 1;\n', '\n', '    address proposer = 0x2Cb037BD6B7Fbd78f04756C99B7996F430c58172;\n', '    address gov      = 0x3157439C84260541003001129c42FB6aBa57E758;\n', '\n', '    IERC20 adai   = IERC20(0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d);\n', '    IERC20 dai    = IERC20(0x6B175474E89094C44Da98b954EedeAC495271d0F);\n', '    IERC20 build  = IERC20(0x6e36556B3ee5Aa28Def2a8EC3DAe30eC2B208739);\n', '    IERC20 metric = IERC20(0xEfc1C73A3D8728Dc4Cf2A18ac5705FE93E5914AC);\n', '\n', '    IBPool pool = IBPool(0x4d87920D35Cd288D9D2E8f311FF4DE814225987D);\n', '    uint reward = 1000e18;\n', '\n', '    adai.redeem(adai.balanceOf(address(this)));\n', '    dai.transfer(proposer, reward);\n', '\n', '    build.approve(address(pool), MAX_INT);\n', '    metric.approve(address(pool), MAX_INT);\n', '    dai.approve(address(pool), MAX_INT);\n', '\n', '    uint daiPool   = dai.balanceOf(address(pool));\n', '    uint daiGov    = dai.balanceOf(address(this));\n', '    uint poolShare = (pool.totalSupply() * daiGov / daiPool) - pool.totalSupply();\n', '\n', '    uint[] memory amounts = new uint[](3);\n', '    amounts[0] = MAX_INT;\n', '    amounts[1] = MAX_INT;\n', '    amounts[2] = MAX_INT;\n', '\n', '    pool.joinPool(poolShare, amounts);\n', '  }\n', '}']