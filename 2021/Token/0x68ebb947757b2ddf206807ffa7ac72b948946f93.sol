['// File: contracts/Bamboo.sol\n', '\n', 'pragma solidity ^0.8.0;\n', '\n', 'import "FlattenBambooPrefix.sol";\n', '\n', '/**\n', ' * @title Bamboo\n', ' * \n', ' * MMMMMMMMMMMMMMMMMWWWWNNNXXKK0OOOxl;;;:ldk0XWMMMMMMMMMMMMMMMM\n', " * MMMMMMMMMMMMMWNNNNNNNNNNNNNNNNNNN0xl;'''.';cd0NWMMMMMMMMMMMM\n", " * MMMMMMMMMMN0k0XNNNNNXXXXXXXXXXNNNXXKOxc'.....,cd0NMMMMMMMMMM\n", " * MMMMMMMWXkxxkKXNNXXXKK0KKKK0KKKXKKKKKOc'.....',';lkXWMMMMMMM\n", " * MMMMMMXx::x0XXXXXKKK00OO00OOO0K0OOkkkd;......''','';xXMMMMMM\n", " * MMMMWO:',okO000000O00OOkkxxkkkkxodxkxl,.....','''....:OWMMMM\n", " * MMMNx,.'cxddxkOOOkxxxkOkkxxkxdl:'':ooc,.....',,.......'dXMMM\n", " * MMKo;..:dxlcdxkOxl;:ldO000000xdl,':odc'.....,;;,....''',oXMM\n", " * MXl''.;dkxl:ldxxo:',cox0KKXXK0Okdddxxc'.....,;,',,...''''lXM\n", " * Nx,''.:xkdc;cokkOkxxxxO0KKK0OOO000Okd:.....',,'',,'......'dN\n", " * O:','.'coo:,;lxkOO00KKKKOdc:,;cdO0Oxl,.....',,'',,'.......;O\n", " * o;,,;'..':c::ldxkkxkOKKOxc'..';cxxdo:'.....'',,,,,'........c\n", " * ;,,,;,...;oooodddxxxxkkxdl;,,;:clccc:,'...'';okdl;...''....'\n", " * ..,,,,...,oxxxxxxxxxdooolccccccc::::;,'...';dKXX0d;........'\n", " * ..,,,,....;oxxkOOkkxddollllllccc::cc;''...,lOKXXXKd;........\n", " * ..',,;'...,oxkkOO0OOkxxdooolllllllol;''...;dKXXXXKkc,.......\n", " * ..';;:,..'ckOOOO0000OOOkxddooooooooc,''..';dKXXXXKOo;......'\n", " * ;.':::,..,oO0000KXXXKK00Okkxddddddoc,'''.':dO0KKKK0x:'.....:\n", " * o..,:;'..'oOK0O0KXXKKKK000Okxdddddo:,''..,:oxkO0K0Od;.....,x\n", " * K;..;,'..:x0XK00KXXXKK000Okxxdddxxo:'''.';cdkO000Oko;....'lK\n", " * Wk,.,;,,,:d0KXKKXXXXKK00Okkxxxxxxdl;'''.';okO000Okxl;....,OW\n", " * MWO:;;,,;:lkKKXXXXXXKK0kxxkkkkkxxdl,''',:lxkOO0Okxo:,'..,kWM\n", " * MMW0l:,,;:cdOKK000KK0kxxkkkkOkkkxdl,';cdkOO0OOOkxl;'...;OWMM\n", " * MMMWKd:,,;;:dkOO00K0OkkOOOkkkkkkkxl::dO000000Okxdc,'..c0WMMM\n", " * MMMMMNOc,'..;oxkO0OO00KK0000OOOOkxxxO0KK000Okkxddc,,lONMMMMM\n", ' * MMMMMMWXx:...;oxkkkOO00KKKKKKXXXK0KXKK000OkkxxdddllkXMMMMMMM\n', ' * MMMMMMMMMXOo;,:odxxxkkO000KKKKKKKXXNXK0OkxxxdddxOKNWMMMMMMMM\n', ' * MMMMMMMMMMMWKkolodddddxxkkkkkkkkOKXXXK0OkxddxOKNWMMMMMMMMMMM\n', ' * MMMMMMMMMMMMMMWXKKOkxdddddxxxxxxxkkOkkOOOO0KNWMMMMMMMMMMMMMM\n', ' * MMMMMMMMMMMMMMMMMMWNXKOkxdddddddddxkO0KXNWMMMMMMMMMMMMMMMMMM\n', ' * \n', ' * References\n', ' * \n', ' * - https://github.com/OpenZeppelin/openzeppelin-contracts\n', ' */\n', 'contract Bamboo is ERC20 {\n', '    event Sacrifice(uint256 amount_);\n', '\n', '    /**\n', '     * @dev Initializes the contract.\n', '     */\n', '    constructor () ERC20("Bamboo", "BMB") {\n', '        ERC20._mint(_msgSender(), (10 ** 15) * (10 ** 18));\n', '        sacrifice(5 * (10 ** 14) * (10 ** 18)); // :)\n', '    }\n', '\n', '    /**\n', '     * @dev Same as `burn`, but emitted.\n', '     */\n', '    function sacrifice(uint256 amount) public virtual {\n', '        transfer(0x000000000000000000000000000000000000dEaD, amount);\n', '        emit Sacrifice(amount); // WHOOOOOOOOOOOOOOOA\n', '    }\n', '\n', '    /**\n', '     * @dev Same as `burnFrom`, but emitted.\n', '     */\n', '    function sacrificeFrom(address account, uint256 amount) public virtual {\n', '        transferFrom(account, 0x000000000000000000000000000000000000dEaD, amount);\n', '        emit Sacrifice(amount); // WHOOOOOOOOOOOOOOOA\n', '    }\n', '\n', '    /**\n', '     * @dev Approves token to max value.\n', '     */\n', '    function approve(address spender) public virtual returns (bool) {\n', '        _approve(_msgSender(), spender, type(uint256).max);\n', '        return true;\n', '    }\n', '}']