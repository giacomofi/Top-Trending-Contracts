['pragma solidity 0.7.2;\n', '\n', '// SPDX-License-Identifier: JPLv1.2-NRS Public License; Special Conditions with IVT being the Token, ItoVault the copyright holder\n', '\n', 'import "./ERC20.sol";\n', '\n', 'contract BackedToken is ERC20 {\n', '    address public owner;\n', '    \n', '    constructor (string memory name_, string memory symbol_) ERC20(name_, symbol_) public {\n', '        owner = msg.sender;\n', '    }\n', '    \n', '    function ownerMint (address account, uint amount) public {\n', '        require(msg.sender == owner, "Only owner may mint");\n', '        _mint(account, amount);\n', '    }\n', '    \n', '    function ownerBurn (address account, uint amount) public {\n', '        require(msg.sender == owner, "Only owner may burn third party");\n', '        _burn(account, amount);        \n', '    }\n', '    \n', '    function selfBurn (uint amount) public {\n', '        _burn(msg.sender, amount);        \n', '    }\n', '}']