['/**\n', ' *Submitted for verification at Etherscan.io on 2021-04-27\n', '*/\n', '\n', '// Proof of concept using Tornado.cash with flashbots\n', '\n', '//SPDX-License-Identifier: MIT\n', 'pragma solidity ^0.7.0;\n', '\n', 'interface ITornadoProxy {\n', '    function withdraw(\n', '        address _tornado,\n', '        bytes calldata _proof,\n', '        bytes32 _root,\n', '        bytes32 _nullifierHash,\n', '        address payable _recipient,\n', '        address payable _relayer,\n', '        uint256 _fee,\n', '        uint256 _refund\n', '    ) external payable;\n', '}\n', '\n', 'contract TornadoMEV {\n', '    ITornadoProxy public immutable tornadoProxy = ITornadoProxy(0x722122dF12D4e14e13Ac3b6895a86e84145b6967);\n', '    \n', '    fallback() external payable {}\n', '    receive() external payable {}\n', '\n', '    function withdraw(\n', '        address _tornado,\n', '        bytes calldata _proof,\n', '        bytes32 _root,\n', '        bytes32 _nullifierHash,\n', '        address payable _recipient,\n', '        address payable _relayer,\n', '        uint256 _fee,\n', '        uint256 _refund\n', '    ) external {\n', '        require(_relayer == address(this), "Incorrect relayer address");\n', '        uint balance = address(this).balance;\n', '        \n', '        tornadoProxy.withdraw(_tornado, _proof, _root, _nullifierHash, _recipient, _relayer, _fee, _refund);\n', '        require(address(this).balance - balance == _fee, "Fee is invalid");\n', '        \n', '        block.coinbase.transfer(_fee);\n', '    }\n', '}']