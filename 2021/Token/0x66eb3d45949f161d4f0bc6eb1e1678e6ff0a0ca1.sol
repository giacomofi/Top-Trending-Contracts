['/**\n', ' *Submitted for verification at Etherscan.io on 2021-06-25\n', '*/\n', '\n', '// SPDX-License-Identifier: GPL-3.0\n', '\n', 'pragma solidity ^0.8.0;\n', '\n', 'contract TokenGovernance {\n', '    string public name;\n', '    string public symbol;\n', '    uint8 public decimals;\n', '    uint256 public totalSupply;\n', '    uint256 public maxSupply;\n', '\n', '    mapping(address => uint256) public balanceOf;\n', '    mapping(address => mapping(address => uint256)) private allowances;\n', '\n', '    constructor() {\n', '        name = "RUNCOIN";\n', '        symbol = "RUN";\n', '        decimals = 18;\n', '        totalSupply = 30000000 * (uint256(10)**decimals);\n', '        balanceOf[msg.sender] = totalSupply;\n', '        maxSupply = totalSupply ;\n', '    }\n', '\n', '    function transfer(address recipient, uint256 amount)\n', '        external\n', '        returns (bool success)\n', '    {\n', '        require(balanceOf[msg.sender] >= amount);\n', '        balanceOf[msg.sender] -= amount;\n', '        balanceOf[recipient] += amount;\n', '        emit Transfer(msg.sender, recipient, amount);\n', '\n', '        return true;\n', '    }\n', '\n', '    function transferFrom(\n', '        address sender,\n', '        address recipient,\n', '        uint256 amount\n', '    ) external returns (bool success) {\n', '        require(balanceOf[sender] >= amount);\n', '        require(allowances[sender][msg.sender] >= amount);\n', '        balanceOf[sender] -= amount;\n', '        balanceOf[recipient] += amount;\n', '        allowances[sender][msg.sender] -= amount;\n', '        emit Transfer(sender, recipient, amount);\n', '        return true;\n', '    }\n', '\n', '    function approve(address spender, uint256 amount) external returns (bool success) {\n', '        allowances[msg.sender][spender] = amount;\n', '        emit Approval(msg.sender, spender, amount);\n', '        return true;\n', '    }\n', '\n', '\n', '\n', '\n', '    function burn(uint256 _amount) external  returns (bool success) {\n', '        require(balanceOf[msg.sender] >= _amount);\n', '        balanceOf[msg.sender] -= _amount;\n', '        totalSupply -= _amount;\n', '        maxSupply -= _amount;\n', '        emit Transfer(msg.sender, address(0), _amount);\n', '        return true;\n', '    }\n', '\n', '    function allowance(address owner, address spender) external view returns (uint256) {\n', '        return allowances[owner][spender];\n', '    }\n', '\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '  \n', '\n', '    event Approval(\n', '        address indexed owner,\n', '        address indexed spender,\n', '        uint256 value\n', '    );\n', '}']