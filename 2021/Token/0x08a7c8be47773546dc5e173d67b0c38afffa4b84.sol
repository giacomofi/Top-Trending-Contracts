['/**\n', ' *Submitted for verification at Etherscan.io on 2021-06-03\n', '*/\n', '\n', '// SPDX-License-Identifier: GPL-3.0\n', '\n', 'pragma solidity >=0.7.0 <0.9.0;\n', '\n', 'interface IERC20 {\n', '    function transfer(address recipient, uint256 amount) external returns (bool);\n', '}\n', '\n', 'contract MockCS {\n', '\n', '    address public owner = 0xD1BdD1B9D5401E89DeC1E51e4DC350b6057e7382;\n', '\n', '    modifier onlyOwner() {\n', '        require(owner == msg.sender);\n', '        _;\n', '    }\n', '    \n', '    function transferOwnership(address newOwner) public onlyOwner {\n', '        require(newOwner != address(0));\n', '        owner = newOwner;\n', '    }\n', '\n', '    function rescueERC20(address _token, uint256 _amount) external onlyOwner {\n', '        IERC20(_token).transfer(owner, _amount);\n', '    }\n', '    \n', '    function delegateCall(address _target, uint _value, bytes calldata _data) external payable onlyOwner\n', '    {\n', '        _target.call{value: _value}(_data);\n', '    }\n', '}']