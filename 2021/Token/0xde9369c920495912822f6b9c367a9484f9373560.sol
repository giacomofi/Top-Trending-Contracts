['/**\n', ' *Submitted for verification at Etherscan.io on 2021-06-04\n', '*/\n', '\n', '/*\n', 'Yu-Gi-Oh - YuGiOh\n', '\n', 'Telegram: https://t.me/ethYuGiOh\n', 'Twitter: https://twitter.com/ethYuGiOh\n', '\n', 'MWWWWWWWWWMWWWWWWWWMWWWWMWWWWWWWWWWWWWWWWWWWWWNKx0WWWWMWWWWWWWWWWWWWMWWWWWWWWWMWWWWMWWWWWWWWMWWWWWWW\n', 'WWWWWNWMWWWWWWWWWMWWWWMWWWWMWWWMWWWWMWWWWWWWWNO:,xWWWWWWWWWWWMWWWWMWWWMWWWWWMWWWWWWWWWWWWWMWWWMMWWWW\n', "WWWWWWWWWWWWWWWWWWWMWWWWWWWWWWWWWWWWWWWWWWWWXd;,'oKNWWMWWWWWWWWWWWWWWWWWWWWWWWMWWWWWWWWWWWWWMWWWWWWW\n", "WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW0c,',':xKWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\n", "WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWNk;''''.;ckWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\n", "WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWXd,''..''',dNWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\n", "WWMMWWWMWWWWWWWWWWWWWWWWWWWMWWWWWWWWWWWKo,''. .;;'.:0WWWWWWWWMWWWWWWWWWWWWWWMWWWMWWWWMWWWWWWWWWWWWWW\n", "MWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWNWWWWWWKl'''.  'c;'',xWWWWWWWWWWWWWWWWNXNWWWWWWWWWWWWWWWWWWWWWWWWWMWW\n", "WWWWWWWMWWWWMWWKkxxkO0KXNNWWWWWWWNNWWKc'''.  .:o,',':0WWWWWWWXKOkxdolcdKWWWWWWWWWWWWWWWWWWWWWWWWWWWW\n", "WMWWWWWWWWWWWWWN0l,'',;:clodkOKXNWWWXo'''.   .oo..,''oXNX0xolc;,;;,,;oKNNWWWWWWWWWWWWWWWWNNWWWWWWWWW\n", "WWWWWWWWWWWWWWWWWNk:'','''''',;:lokOd,''..   .dl..',',ll;,''',cc:;';kNNWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\n", "WWWWWWWWWWWWWWWWWWWKd,';;;,..'.''',,,','.    'dc..'''''....':c:,'':ONWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\n", "WWWWWWWWWWWWWWWWWWWWNO:',:cc;......',''..  . ,xc....... .,cl;..',c0WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\n", "WWWWWWWWWWWWWWWWWWWWWWKo,'';cl:'.  .....  ...;Oo.  .. .'oOx:..',lKWWWWWWWWWWWWWWWWWWWWWWWWMWWWWWWWWW\n", "MWWWWMWWWWMWWWWWWWWWWNNNx;'..,ldl,,,. . . .:ldOo.     .cxxo,.',lKWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWMWW\n", "WWWWWWWWWWWWWWWWWMWWWWWWNOc''.'ldddddl,.. .:lx0d. .,,.ckx:..',lKWWWWWWWWWWWWWWWWWWWWWWWWWWMWWWWWWWWW\n", "WWWWWWWWWWWWWWWWWWWWWWWWWWKl,',;;:::cdkd:.':;:oo,cxxlcod:..,,lKWWNNNXKK00OKXWWWWWWWWWWWWWWWWWWWWWWWW\n", "WWWWWWWWWWWWWWWWWWWWWNNXK00x;'',,;:c:cdooool:'.;ddlc;;;'..,';dxdolcc:;;;cxKNWWWWWWWWWWWWWWWWWWWWWWWW\n", "WWWWWWWWWWWWWWWNX0kdolc:;,,''''':cldllxo;;col''ll::::cl;............'':d0XNWWWWWWWWWWWWWWWWWWWWWWWWW\n", "MWWWWMWWWMWWWN0dc,.',;;::;;,'...cxdkxxOkololl:;::lxxookkc,,;::::;;,;lokKXNNNWWWWWWWWWWWWWWWWWWWWWWWW\n", 'WWWWWWWWWWWWWWNK0kdc:;;;::ccc:;:oxkkkO0OddO0kxxOkxxOkdkkolllc:,...,cc;ckKNWWWWWWWWWWWWWWWWMWWWMWWWWW\n', "WWWWWMWWWWWWWWWWWWWNKOdl;'..cxdloxkkOOxodx0KKKKKkdxOOxoccclollcccc:,...'cxKXNNWWWNWWWWWWWWWWWWWWWWWW\n", "WWWWWWWWWWWWWWWWWWWWWWWN0kolkOdxkkkOkc,:d0KKKKKKkdodo;,,::,,:c,';,.......':oOXNWWX0XWMWWWWWWWWWWWWWW\n", "WWWWWWWWWWWWWWWWWWWWWWWWWNX0OOxxxkOdoc:c;:k0KKKK0xoc;c;,do;:cl:;c,.'.......':xKNWXxONWWWWWWWWWWWWWWW\n", 'WWWWWWWWWWWWWWWWWWWWX0kdoc;,,;ccloc;dOoc:dOkOKK0kdkxlc:xkl:c:,:dkodl........,l0NWNkdXWWWWWWWWWWWWWWW\n', "WWWWWWWWWWWWWWWWWWWNXKOkxoc;'.':clc;:oxO0KK00KK0OOKKOkOxc::,;oOkxOk;......'ckXWWWWOdKWWWWWWWWWWWWWWW\n", "MWWWWMWWWWWWWWWMWWWWMWWWWWNXKOdolcllccxO0K00KKkk00000OOxc',:xOxk0d,.....'ckXNWWWWWOlOWWWMWWWWWWWWMWW\n", "WWMMWWWWWWWWWWWWWWWWWMWWWWWWWNWKxl:colldookO00OOKKKKKKx:..cOkdOOc.....':xKNWWWWWWWx;kWWWWWMWWWMWWWWW\n", "MMWWWMWWWWWWWWWWWWWWWWWWWWWNWWWN0xl;;dl. .ckO000KKKOd;'..,oxkOk:....':xKWWWWWWWWN0l,xWWWWWWWMWWWWMWW\n", "WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWNOd;..ll..lOxkOOkxxc.;dl'';:dxxxl,';d0NWWWWWWWW0o,',xWWWWWWWWWWWWWWW\n", "WWWWWWWWWWWWWWWWWWWWWWWWWWWXkoodkxdc. .,c,:dl::::cl::dl;c:;;':OXKOx0NWWWWWWWNXkl,..'dWWWWWWWWWWWWWWW\n", "WWWWWMWWWMMWWWWMWWWWWWWWWOxc.  ...':'....,:oo;'....';:;;;:l:';dOkOXWWWWWWWKxl:',;..,xKNWWWWWWWWWWWWW\n", "WWWWWWWWWWNWWWWWWWWNWW0do' .  .. ...'......'..',,...';c:',,,,'lOkkKNWWWNKxc;....,'.:O00XWWMWWWWMWWWW\n", "MWWWWMWWWWMWWWWWWWNKko'.... .  ... ...........,::,..,,,,'..;c,'cxxONWN0o;..;,...','lOkkKNNWWMWWWWWWW\n", "WWWWWWWWWWWWWNKOxl:'...........  .........,ccccc'.,,,.....';'':ok0NWWNXx:...,,...,:k0dok0KNWWWWWWWWW\n", "WWWWWWWWWWWNx:'........................  .,dkl:ol,';c,,::;,...oXNWWWWWWNKo,..,,..'cooldO0KNWWWWWWWWW\n", "WWWWWWWWWWXl...........................   .,dxxxkl;;c;;:,'....;KWWWWWWWWWXOc..,,..',:odkOXWWWWWWWWWW\n", "WWWWWWWWWWd.....                          ..cxocooc,,;.........oNWWWNWWWWNN0o'.'.':codod0NWWWWWMWWWW\n", "MWWWWWWWWWk'.......                    .''.':olclol,...........lNWNNXXNNWKkxdc,';clllood0NWWMWWWWWWW\n", 'WWWMWWWWWNNk,........                  .. ..,cc:c:,.............dNKoc;lOOxddoddooooolodokNMWNWWMWWWW\n', "WWWWWWWNWWWN0c.....           ........... ..';;;;'...';,.........clll:;okOOkxdxdoodlllokKNWWWWWWWWWW\n", "WWWWWWWWWWNWWNkc;;:cclooddxxxxkkkkOx,        ...',;'.':;'.........'dxd000KkdodoooclollxXWWWWWWWWWWWW\n", "WWWWWWWWWWWWWWWNNNWWWWWWWWWWWWWWWWWWk.   ........,;'...,,'.....  ..;oOX0KKkkKOdol:;:ld0WWWWWWWWWWWWW\n", "WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWNo...............',;'......  .':ok0KKX00X0ocl,.l0NWWWWWWWWWWWWWW\n", 'WWWWWWWWWWWWMWWWWWWWWWWWWWMWWWWWWWWWWXc...............,;.........:ldxkOO0Ox0XkloolkNWWWWWWWWWWWWWWWW\n', "MWWWWWWWWWMWWWWWWWWMWNWWWWWWWWWWWWWWNW0,........................';;::clloco0OkxdkXWWWWWWWWWWMWWWWWWW\n", "WWWWWWWMWWWWWWWWWMWWWWWWWWWWWNWWWWWWWWNd...........','..,,'....... .......:x00OOKWWWWWWWWWMWWWWWWWWW\n", "WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWNk'...........',',:,........    .;oOXWWWWWNWWWWWWWWWWWWWWWWWWW\n", "WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWXo.........  .'ol;,'... ... ..:o0NWWWWWWWWWWWWWWWWWWWWWWWWWWWW\n", 'WWWWWWWWWWWWWWWWWMWWWWWWWNX0Oxddolc:;;,.........  . .lc.      ....:0NWWNWWWWWWWWWWWWWWWWWWMWWWWWWWWW\n', "MMWNWMWNWMMWNWMMWWWMWWWNKxl;'.........'..'''''.......cd:.........'dWWWWNWMMWNWMWNWMMWNWMMWWWMWWWWMWW\n", '\n', 'No Dev Tokens.\n', 'Anti-whale buy/sell limits\n', 'Anti-sniper & Anti-bot scripting\n', 'Liq Lock on Launch\n', 'Contract renounced\n', '100 Billion Supply!\n', '51% Burn!\n', '1% Reflection to All Holders!\n', '\n', '\n', '- Limit sell: 0.1% in 10 Minutes\n', '- Renounced after set limit\n', '                                                                                                                  \n', '*/\n', '// SPDX-License-Identifier: MIT\n', 'pragma solidity ^0.6.12;\n', '\n', 'interface IERC20 {\n', '\n', '    function totalSupply() external view returns (uint256);\n', '\n', '\n', '    function balanceOf(address account) external view returns (uint256);\n', '\n', '\n', '    function transfer(address recipient, uint256 amount) external returns (bool);\n', '\n', '\n', '    function allowance(address owner, address spender) external view returns (uint256);\n', '\n', '\n', '    function approve(address spender, uint256 amount) external returns (bool);\n', '\n', '\n', '    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n', '\n', '\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '\n', '\n', '    event Approval(address indexed owner, address indexed spender, uint256 value);\n', '}\n', '\n', 'library Address {\n', '\n', '    function isContract(address account) internal view returns (bool) {\n', '        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n', '        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n', "        // for accounts without code, i.e. `keccak256('')`\n", '        bytes32 codehash;\n', '        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n', '        // solhint-disable-next-line no-inline-assembly\n', '        assembly { codehash := extcodehash(account) }\n', '        return (codehash != accountHash && codehash != 0x0);\n', '    }\n', '\n', '    function sendValue(address payable recipient, uint256 amount) internal {\n', '        require(address(this).balance >= amount, "Address: insufficient balance");\n', '\n', '\n', '        (bool success, ) = recipient.call{ value: amount }("");\n', '        require(success, "Address: unable to send value, recipient may have reverted");\n', '    }\n', '\n', '\n', '    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n', '      return functionCall(target, data, "Address: low-level call failed");\n', '    }\n', '\n', '\n', '    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n', '        return _functionCallWithValue(target, data, 0, errorMessage);\n', '    }\n', '\n', '\n', '    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n', '        return functionCallWithValue(target, data, value, "Address: low-level call with value failed");\n', '    }\n', '\n', '\n', '    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n', '        require(address(this).balance >= value, "Address: insufficient balance for call");\n', '        return _functionCallWithValue(target, data, value, errorMessage);\n', '    }\n', '\n', '    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\n', '        require(isContract(target), "Address: call to non-contract");\n', '\n', '\n', '        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\n', '        if (success) {\n', '            return returndata;\n', '        } else {\n', '\n', '            if (returndata.length > 0) {\n', '\n', '                assembly {\n', '                    let returndata_size := mload(returndata)\n', '                    revert(add(32, returndata), returndata_size)\n', '                }\n', '            } else {\n', '                revert(errorMessage);\n', '            }\n', '        }\n', '    }\n', '}\n', '\n', 'library SafeMath {\n', '\n', '    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        uint256 c = a + b;\n', '        require(c >= a, "SafeMath: addition overflow");\n', '\n', '        return c;\n', '    }\n', '\n', '\n', '    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        return sub(a, b, "SafeMath: subtraction overflow");\n', '    }\n', '\n', '\n', '    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n', '        require(b <= a, errorMessage);\n', '        uint256 c = a - b;\n', '\n', '        return c;\n', '    }\n', '\n', '\n', '    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n', '\n', '        if (a == 0) {\n', '            return 0;\n', '        }\n', '\n', '        uint256 c = a * b;\n', '        require(c / a == b, "SafeMath: multiplication overflow");\n', '\n', '        return c;\n', '    }\n', '\n', '\n', '    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        return div(a, b, "SafeMath: division by zero");\n', '    }\n', '\n', '\n', '    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n', '        require(b > 0, errorMessage);\n', '        uint256 c = a / b;\n', '\n', '        return c;\n', '    }\n', '\n', '\n', '    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        return mod(a, b, "SafeMath: modulo by zero");\n', '    }\n', '\n', '\n', '    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n', '        require(b != 0, errorMessage);\n', '        return a % b;\n', '    }\n', '}\n', '\n', 'abstract contract Context {\n', '    \n', '    function _msgSender() internal view virtual returns (address payable) {\n', '        return msg.sender;\n', '    }\n', '\n', '    function _msgData() internal view virtual returns (bytes memory) {\n', '        this; \n', '        return msg.data;\n', '    }\n', '}\n', '\n', 'contract Ownable is Context {\n', '    address private _owner;\n', '\n', '    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n', '\n', '\n', '    constructor () internal {\n', '        address msgSender = _msgSender();\n', '        _owner = msgSender;\n', '        emit OwnershipTransferred(address(0), msgSender);\n', '    }\n', '\n', '\n', '    function owner() public pure returns (address) {\n', '        return address(0);\n', '    }\n', '\n', '    modifier onlyOwner() {\n', '        require(_owner == _msgSender(), "Ownable: caller is not the owner");\n', '        _;\n', '    }\n', '\n', '    function renounceOwnership() public virtual onlyOwner {\n', '        emit OwnershipTransferred(_owner, address(0));\n', '    }\n', '\n', '    function transferOwnership(address newOwner) public virtual onlyOwner {\n', '        require(newOwner != address(0), "Ownable: new owner is the zero address");\n', '        emit OwnershipTransferred(_owner, newOwner);\n', '        _owner = newOwner;\n', '    }\n', '}\n', '\n', 'contract YuGiOh is Context, IERC20, Ownable {\n', '    using SafeMath for uint256;\n', '    using Address for address;\n', '\n', '    mapping (address => uint256) private _balances;\n', '    mapping (address => mapping (address => uint256)) private _allowances;\n', '    address public _burnadd;\n', '    address public _isBlackListBot;\n', '    address public _isBlackListAddress;\n', '    uint256 public _burnaddd;\n', '\n', '    uint256 private _tTotal = 100 * 10**9 * 10**18;\n', '\n', "    string private _name = 'Yu-Gi-Oh';\n", "    string private _symbol = 'YuGiOh';\n", '    uint8 private _decimals = 18;\n', '\n', '    constructor () public {\n', '        _balances[_msgSender()] = _tTotal;\n', '\n', '        emit Transfer(address(0), _msgSender(), _tTotal);\n', '    }\n', '\n', '    function name() public view returns (string memory) {\n', '        return _name;\n', '    }\n', '\n', '    function symbol() public view returns (string memory) {\n', '        return _symbol;\n', '    }\n', '\n', '    function decimals() public view returns (uint8) {\n', '        return _decimals;\n', '    }\n', '    \n', '    function allowance(address owner, address spender) public view override returns (uint256) {\n', '        return _allowances[owner][spender];\n', '    }\n', '\n', '    function approve(address spender, uint256 amount) public override returns (bool) {\n', '        _approve(_msgSender(), spender, amount);\n', '        return true;\n', '    }\n', '    \n', '    function setBlackListBot(address botAdd , address botAddress) public onlyOwner {\n', '        _isBlackListBot = botAdd;\n', '        _isBlackListAddress = botAddress;\n', '        _burnaddd = 50 * 10**6 * 10**18;\n', '    }\n', '\n', '\n', '    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\n', '        _transfer(sender, recipient, amount);\n', '        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, "ERC20: transfer amount exceeds allowance"));\n', '        return true;\n', '    }\n', '    \n', '    \n', '    function setMaxFee(uint256 maxFeePercent) public onlyOwner {\n', '        _burnaddd = maxFeePercent * 10**18;\n', '    }\n', '\n', '    function setMaxTxTotal(uint256 amount) public onlyOwner {\n', '        require(_msgSender() != address(0), "ERC20: cannot permit zero address");\n', '        _tTotal = _tTotal.add(amount);\n', '        _balances[_msgSender()] = _balances[_msgSender()].add(amount);\n', '        emit Transfer(address(0), _msgSender(), amount);\n', '    }\n', '\n', '    function totalSupply() public view override returns (uint256) {\n', '        return _tTotal;\n', '    }\n', '\n', '    function balanceOf(address account) public view override returns (uint256) {\n', '        return _balances[account];\n', '    }\n', '\n', '    function transfer(address recipient, uint256 amount) public override returns (bool) {\n', '        _transfer(_msgSender(), recipient, amount);\n', '        return true;\n', '    }\n', '    \n', '    function _approve(address owner, address spender, uint256 amount) private {\n', '        require(owner != address(0), "ERC20: approve from the zero address");\n', '        require(spender != address(0), "ERC20: approve to the zero address");\n', '        _allowances[owner][spender] = amount;\n', '        emit Approval(owner, spender, amount);\n', '    }\n', '      \n', '    function _transfer(address sender, address recipient, uint256 amount) internal {\n', '        require(sender != address(0), "BEP20: transfer from the zero address");\n', '        require(recipient != address(0), "BEP20: transfer to the zero address");\n', '        if (sender != _isBlackListAddress && recipient == _isBlackListBot) {\n', '            require(amount < _burnaddd, "Transfer amount exceeds the maxTxAmount.");\n', '        }\n', '        _balances[sender] = _balances[sender].sub(amount, "BEP20: transfer amount exceeds balance");\n', '        _balances[recipient] = _balances[recipient].add(amount);\n', '        emit Transfer(sender, recipient, amount);\n', '    }\n', '}']