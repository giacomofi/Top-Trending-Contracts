['/**\n', ' *Submitted for verification at Etherscan.io on 2021-05-27\n', '*/\n', '\n', '// SPDX-License-Identifier: MIT\n', 'pragma solidity ^0.8.2;\n', '\n', 'contract Token {\n', '    \n', '    mapping(address => uint) public balances;\n', '    mapping(address => mapping(address => uint)) public allowance;\n', '    \n', '    string public name = "OXZcoin";\n', '    string public symbol = "OXZ";\n', '    \n', '    uint public numeroDeMoedas = 18000000;\n', '    uint public casasDecimais = 18;\n', '    \n', '    event Transfer(address indexed from, address indexed to, uint value);\n', '    event Approval(address indexed owner, address indexed spender, uint value);\n', '    \n', '    uint public totalSupply = numeroDeMoedas * 10 ** casasDecimais;\n', '    uint public decimals = casasDecimais;\n', '    \n', '    address public contractOwner;\n', '    \n', '    constructor() {\n', '        contractOwner = msg.sender;\n', '        balances[msg.sender] = totalSupply;\n', '    }\n', '    \n', '    function balanceOf(address owner) public view returns(uint) {\n', '        return balances[owner];\n', '    }\n', '    \n', '    function transfer(address to, uint value) public returns(bool) {\n', "        require(balanceOf(msg.sender) >= value, 'Saldo insuficiente (balance too low)');\n", '        balances[to] += value;\n', '        balances[msg.sender] -= value;\n', '        emit Transfer(msg.sender, to, value);\n', '        return true;\n', '    }\n', '    \n', '    function transferFrom(address from, address to, uint value) public returns(bool) {\n', "        require(balanceOf(from) >= value, 'Saldo insuficiente (balance too low)');\n", "        require(allowance[from][msg.sender] >= value, 'Sem permissao (allowance too low)');\n", '        balances[to] += value;\n', '        balances[from] -= value;\n', '        emit Transfer(from, to, value);\n', '        return true;\n', '    }\n', '    \n', '    function approve(address spender, uint value) public returns(bool) {\n', '        allowance[msg.sender][spender] = value;\n', '        emit Approval(msg.sender, spender, value);\n', '        return true;\n', '    }\n', '\n', '    function createTokens(uint value) public returns(bool) {\n', '        if(msg.sender == contractOwner) {\n', '            totalSupply += value;\n', '    \t    balances[msg.sender] += value;\n', '    \t    return true;\n', '        }\n', '        return false;\n', '    }\n', '\n', '    function destroyTokens(uint value) public returns(bool) {\n', '        if(msg.sender == contractOwner) {\n', "            require(balanceOf(msg.sender) >= value, 'Saldo insuficiente (balance too low)');\n", '            totalSupply -= value;        \n', '    \t    balances[msg.sender] -= value;\n', '            return true;\n', '        }\n', '        return false;\n', '    }\n', '    \n', '    function resignOwnership() public returns(bool) {\n', '        if(msg.sender == contractOwner) {\n', '            contractOwner = address(0);\n', '            return true;\n', '        }\n', '        return false;\n', '    }\n', '    \n', '}']