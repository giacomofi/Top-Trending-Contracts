['// SPDX-License-Identifier: F-F-F-FIAT!!!\n', 'pragma solidity ^0.7.4;\n', '\n', 'import "./ERC20.sol";\n', 'import "./TokensRecoverable.sol";\n', '\n', 'contract Fiat is ERC20, TokensRecoverable {\n', '    \n', '    mapping(address => bool) public approvedMinters;\n', '\n', '    constructor() ERC20("Fiat", "FIAT") {}   \n', '\n', '    function setMinter(address minter, bool canMint) public ownerOnly() {\n', '        approvedMinters[minter] = canMint;\n', '    }\n', '\n', '    function mint(address account, uint256 amount) public {\n', '        require (approvedMinters[msg.sender], "Not an approved minter");\n', '        _mint(account, amount);\n', '    }\n', '\n', '    function burn(address account, uint256 amount) public {\n', '        require (approvedMinters[msg.sender], "Not an approved minter");\n', '        _burn(account, amount);\n', '    }\n', '\n', '    function publicBurn(uint amount) public {\n', '        _burn(msg.sender, amount);\n', '    }\n', '}']