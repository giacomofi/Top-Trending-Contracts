['/**\n', ' *Submitted for verification at Etherscan.io on 2021-03-14\n', '*/\n', '\n', '// SPDX-License-Identifier: MIT\n', 'pragma solidity =0.7.5;\n', '\n', '/**\n', ' * @title Interface of VokenTB.\n', ' */\n', 'interface IVokenTB {\n', '    function address2voken(address account) external view returns (uint160);\n', '    function balanceOf(address account) external view returns (uint256);\n', '    function vestingOf(address account) external view returns (uint256);\n', '    function availableOf(address account) external view returns (uint256);\n', '    function isBank(address account) external view returns (bool);\n', '    function referrer(address account) external view returns (address payable);\n', '}\n', '\n', '/**\n', ' * @dev VokenTB Account Data\n', ' */\n', 'contract VokenTBAccountData {\n', '    IVokenTB private immutable VOKEN_TB = IVokenTB(0x1234567a022acaa848E7D6bC351d075dBfa76Dd4);\n', '\n', '    function query(address account)\n', '        public\n', '        view\n', '        returns (\n', '            uint160 voken,\n', '            uint256 balance,\n', '            uint256 vesting,\n', '            uint256 available,\n', '            bool isBank,\n', '            address payable referrer\n', '        )\n', '    {\n', '        voken = VOKEN_TB.address2voken(account);\n', '        balance = VOKEN_TB.balanceOf(account);\n', '        vesting = VOKEN_TB.vestingOf(account);\n', '        available = VOKEN_TB.availableOf(account);\n', '        isBank = VOKEN_TB.isBank(account);\n', '        referrer = VOKEN_TB.referrer(account);\n', '    }\n', '}']