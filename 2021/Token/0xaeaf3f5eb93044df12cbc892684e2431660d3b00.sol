['/**\n', ' *Submitted for verification at Etherscan.io on 2021-04-04\n', '*/\n', '\n', 'pragma solidity ^0.5.0;\n', "//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWXkol:,'.....',;cdOXWMMMWMMMMMMMMMMMMMMMMMMMMMMMMMM\n", "//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWMMMMMMWOl'.';loxkOOOkxdl;..;o0WWWNNWWWWMMMMMMMMMMMMMMMMMMMM\n", "//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWMMMMMWXl..;d0NWMMMMMMMMMWNOo,.':c:;;:coxOXWMMMMMMMMMMMMMMMMM\n", "//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKc..oXWMMMMMMMMMMMMMMMWKd,..'col:;..;o0WWWMMMMMMMMMMMMM\n", "//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWd..oNMMMMMMMMMMMMMMMMMMWW0c..oXWWXOo,.'oXWMWMMMMMMMMMMM\n", '//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMK:.;0MWMMMMMMMMMMMMMMMMMMWWXl..lNMWWWXo..cKWMMMMMMMMMMMM\n', "//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM0,.cKMWMMMMMMMMMMMMMMMMMWWMMXl..dWMMWWNx'.:KMMMMMMMMMMMM\n", '//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM0,.:KWWMMMMMMMMMMMMMMMMMMMMMMK:.,OMMMMMNd..lXMMMMMMMMMMM\n', "//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWX:.,OMMMMMMMMMMMMMMMMMMMMMMMMWo..xMMMMMMXc.'kMMMMMMMMMMM\n", '//MMMMMMMMMMMMMMWNNNNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWd..dWMMMMMMMWWWNWMMMMMMMMMMMMx..dWMMMMMMd..dWMMMMMMMMMM\n', '//MMMMMMMMMMMMMMNXNNXNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWNXXKK0OkkkkxxxxxxkO00KXNNWMMMMMMMMMMO,.;KMMMMMMWXXNXNMMMMMMMMMMMWd..dWMMMMMMx..oNMMMMMMMWWW\n', "//MMMMMMMMMMMMMMWNNNNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWWWWMMMMMMMMMMMMMMMMMMMMMMWNX0kdoc:;,,''...',''........''',::codxkOOxol:'..oNMMMMMWNNNXNMMMMMMMMMMMWo..xWMMMMMWx..dWMMMWWWWWWW\n", "//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWWWMMMMMMMMMMMMMMMMMMMMWXOxl:'..',:clodxkO00KKKKKKKKK00Okxdolc:;'.....';cl;.'kWMMMMMMWWWMMMMMMMMMMMMNl..,oONMMMNl.'kMMMWWWWWWMM\n", "//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWWMMMMMMMMMMMMMMMMMMWKkoc,..,coxOKXNMMMMMMMMMMMMMMMMMMMMMMMMMMMWNXK0000XXWM0;.;OWMMMMMMMMMMMMMMMMMMMM0;.',..;d0WO'.cKMMMWWWWMMMM\n", "//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWN0dc'.':ok0XWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWk,.;0WMMMMMMMMMMMMMMMMMMMk'.cKOo;.'c;.'kWMMMMMMMMMMM\n", "//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWMN0d:'.,cx0NWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWk,.;OWMMMMMMMMMMMMMMMMMWd..dWWWXx:...cXMMMMMMMMMMMM\n", '//MMMMMMMMMWWWMWWNXXKKKXXNWMMMWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWKx:..,oOXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO,.,kWWMMMWMMMMMMMMMMMXc.,OWMMMMNk:..l0WWMWWMMMMMM\n', "//MMMMMMMMMNKOdl:;,''''',;cox0NMWMMMMMMMMMMMMMMMMMMMMMMMMMMWWMMN0o,.'lkXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWW0:.'oXMWMMMMMMMMMMMMMO,.:XMMMWMMMNx,.,dXWWMMMMMMM\n", "//MMMMWMWXxc'.',coodxxxdol:'.':dKWMMMMMMMMMMMMMMMMMMMMMMMMMMMNOc'.,dKWWMMMMMMMWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXo..:ONWMMMMMMMMMMMMk'.xWMWWMMMWWWKl'.c0WMMMMMMM\n", "//MWMMMXx;.'cx0NWWMMMMMMMMWXkl,.'oKWMMWWMMMMMMMMMMMMMMMMMMMNkc..:kXWMMMMMMMMMMWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWMMMMMMMMMMMMMNk;.'l0WMMWMMMMMMMMN00NWWWWWMMMWMMNk;.,xNMMMMMM\n", "//MMWW0:.'cONWMMMMMMMMMMMMMWMWKo,.,kWWWMMMMMMMMMMMMMWWMMMW0c..:kNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWXd,.,OWWWMMMMMMMMMMMMMMWWMMMMMMMMWKc..dNMMMMM\n", "//MWWk,.,kNWWWMMMMMMMMMMMMMMMWWW0:.'dNMMMMMMMMMMMMMMMWWWKo'.;xNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXkkXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXl..oXMMMM\n", "//MWk,.:0WMMMMMMMMMMMMMMMMMMMWWWWKc.'xWWMMMMMMMMMMMMMWNk,.,oXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNo..lXMMM\n", '//M0;.;OWMMMMMMMMMMMMMMMMMMMMMWWWWO;.:KMMMMMMMMMMMMMWKl..c0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNo..oXWM\n', "//Xl.'xWMMMMMMMMMMMMMMMMMMMMMMMMMMWo..xWMMMMMMMMMMMWk;.'xNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWX0xdodk0NMWMWWMMMMWXl..dNW\n", "//k'.cXMMMMMMMMMMMMMMMMMMMMMMMMMMMMk'.lNMMMMMMMMMMXd'.:0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXd;'.','.':kNWWWMWWMWMK:.,kW\n", "//o.'kWMMMMMMMMMMMMMMMMMMMMMMMMMMMMO,.lXMMMMMMMMMKl..lXWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNl..cOXNXk:..dNWWMMMMMWWO,.:KM\n", "//;.;KMMMMMMMMMMMMMMMMMMMMMMMMMMMMMO'.lXMMMMMMMWK:.'dNMMWNNNNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMO,.:KMWWMM0,.:KWWWMMMMMMNl.'kM\n", "//,.cXMMMMMMMMMMMWWWWMMMMMMMMMMMMMWd..dWMMMMMMW0:.,xNMMMWXXNXNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWMMMMMMMMMMK:.,kWMWMNd'.cXWWWMMMMMMWx',dM\n", "//..oWMMMMMMMMMMMMMMMMMMMMMMMMMMMMXc.'OMMMMMMM0:.'kWMWMMWNNWNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO;.'codo;..:0WWWMMMMMMMM0;.cM\n", "//..dWMMMMMMMMMMMMMMMMMMMMMMMMMMMWx..oNWMMMMMK:.'xWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXxc;,',;lONMMMMMMMMMMMMK:.,M\n", "//..dWMMMMMMMMMMMMMMMMMMMMMMMMMMMO;.;0MMMMMMXl.'dNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWNXXXNWMMMMMMMMMMMMMMNl.'M\n", "//..dWMMMMMMMMMMMMMMMMMMMMMMMMWWK:.'kWMWMMMWd..lNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWd..M\n", "//'.lNMMMMMMMMMMMMMMMMMMMMMMMMMXl..dWMMMMMMO,.;KMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWd..M\n", "//,.:KMMMMMMMMMMMMMMMMMMMMMMMMWx'.cXMMMMMMXc.'kWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWd..M\n", "//:.,OMMMMMMMMMMMMMMMMMMMMMMMM0;.;0WMMMMMMk'.lXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWx..M\n", "//d..dWMMMMMMMMMMMMMMMMMMMMMMNo..dWMMMMWMNl.'kMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWd..M\n", '//O,.:KMMMMMMMMMMMMMMMMMMMMMM0,.:KMMMMWWW0;.:KMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWMMMMMMMMMMMMMMMWd..M\n', '//Xl..xWMMMMMMMMMMMMMMMMMMMMWd..xWMMMMMWWk..lNMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWMMMMMMMMMMMMMMMMWo..M\n', '//WO,.;KMMMMMMMMMMMMMMMMMMMMNc.,0WWMMMMMWd..dWMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMK:.,M\n', '//MNo..lNMMMMMMMMMMMMMMMMMMMK:.:KMMMMMMMWo..xMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWMMMMWXl..oM\n', "//WWXc.'xWWMMMMMMMMMMMMMMMMMK:.;KMMMMMMMNo.'kMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKd;..oXM\n", "//MWW0:.'xWMMMMMMMMMMMMMMMMMNl.'xWMMMMMMNo..xMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWMMMMMMMWWWNXK0koc'.'lOWW\n", "//MMMW0;.,xWMMMMMMMMMMMMMMMMMO,.;0WMMMMMWd..dWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWMMMN0dlcccccc::ccc::;,'..';lxKWMWM\n", "//MMMMW0:.'dNMMMMMMMMWWWWWMMMWk,.,xXWWWWWk..lNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWWWWWWN0o;..,ccccccccccccllodkOKNWMMMMMM\n", '//MMMMWWKc..lKWWMMWWWWWWWWMMMWW0c..;okKNWK:.;0WWMMMMMMMMMMWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNNNNNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWMWWWWXkc..;oONWMMMMMMMMMMMMMMMMMMMMMMMMMM\n', "//MMMMMWWNd'.:kXWWWWWWMMMMMMMWWWN0d:'.';co;..oNMMMMMMMMMMWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNXXXNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWWWKd;''ckNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMW\n", "//MMMMMMMWW0c;,cONWWMMMMMMMMMMMMWMMWKkdl:;,'.'xWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNWNNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWWN0o,.'l0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n", "//MMMMMMMMMWNOo;,:d0WMMMMMMMWMMWMMMMMMMMWNXO:.,xNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWWXkl'.,oKWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n", "//MMMMMMMMWWWWNOl,.':dOXWMMMMMMWMMMMMMMMMMWWK:.'oXWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWMWWWXko;..:dKWMWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n", "//MMMMMMMMMMWWWMWKkl,..,cldk0KNWWWMMMMMMMWMWWKl..;dKWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWX0kdc,...'oKNWWWMWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n", "//MMMMMMMMMMMMMMWMMWN0xo:,...',;:clllooollllc:,....,ckKNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWNX0kdoc,..':lxo;..,:clodkKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n", "//MMMMMMMMMMMMMMMMMMMMMMWX0Oxdolc::;;;;;;;::cclodddc'.':oxO0KXNNWWWMMMMMMMMMMWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWNNXK0Okxdlc:;,..';cldOKNWMWXkdolc:;..':oONMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n", "//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWNNNNNNWWWWWWMMMMNKko:'..'',,;;:clloooooddxxxkkkkkkOOOOOOOOOkkkkxxxdddooollc:;;,,'...',,.....:dOXNWMMMMMMMMMMMMWN0xo;.'oXMMMMMMMMMMMMMMMMMMMMMMMMMMM\n", "//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWMMMMMMMMMMMMMMMWX0Okxdool:'.........'',,,'..........'''.'....',,,;;::lllodxkkO0KXX0xoc,...,:coddxkOO0000000Oxdc'.,OMMMMMMMMMMMMMMMMMMMMMMMMMMM\n", "//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWMMMMMMMMMMMMMMMMMMMMMMMMMWKkoc;,....,;cooodxkO00000000000d,.'oKXNNNWWMMMMMMMMMMMMWWMMWXKOxoc:;,''...........'',:lONMMMMMWWMMMMMMMMMMMMMMMMMMMM\n", "//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNKOxdlc;,'...',;:loodkOO0KKKx,.;0MMMMMMMMMMMMMMMMMMMMMMMMMMMMWWNXXK00OOOkkkOO0KXXWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n", "//MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWNXKOkxdollc;,''..''',,..cKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n", "//ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddooddddddooooolc:;;,'...';loddddddddddddddddddddddddddddodddddddddddddddddddddddddddddddddddddddddddddddddd\n", '//\n', '// Telegram: https://t.me/chinchilla_finance\n', '//\n', '// Website: chinchilla.finance\n', '//\n', '//\n', 'interface IERC20 {\n', '  function totalSupply() external view returns (uint256);\n', '  function balanceOf(address who) external view returns (uint256);\n', '  function allowance(address owner, address spender) external view returns (uint256);\n', '  function transfer(address to, uint256 value) external returns (bool);\n', '  function approve(address spender, uint256 value) external returns (bool);\n', '  function transferFrom(address from, address to, uint256 value) external returns (bool);\n', '\n', '  event Transfer(address indexed from, address indexed to, uint256 value);\n', '  event Approval(address indexed owner, address indexed spender, uint256 value);\n', '}\n', 'library SafeMath {\n', '  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    if (a == 0) {\n', '      return 0;\n', '    }\n', '    uint256 c = a * b;\n', '    assert(c / a == b);\n', '    return c;\n', '  }\n', '\n', '  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    uint256 c = a / b;\n', '    return c;\n', '  }\n', '\n', '  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    assert(b <= a);\n', '    return a - b;\n', '  }\n', '\n', '  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n', '    uint256 c = a + b;\n', '    assert(c >= a);\n', '    return c;\n', '  }\n', '\n', '  function ceil(uint256 a, uint256 m) internal pure returns (uint256) {\n', '    uint256 c = add(a,m);\n', '    uint256 d = sub(c,1);\n', '    return mul(div(d,m),m);\n', '  }\n', '}\n', '\n', 'contract ERC20Detailed is IERC20 {\n', '\n', '  string private _name;\n', '  string private _symbol;\n', '  uint8 private _decimals;\n', '\n', '  constructor(string memory name, string memory symbol, uint8 decimals) public {\n', '    _name = name;\n', '    _symbol = symbol;\n', '    _decimals = decimals;\n', '  }\n', '\n', '  function name() public view returns(string memory) {\n', '    return _name;\n', '  }\n', '\n', '  function symbol() public view returns(string memory) {\n', '    return _symbol;\n', '  }\n', '\n', '  function decimals() public view returns(uint8) {\n', '    return _decimals;\n', '  }\n', '}\n', '\n', 'contract Chinchilla is ERC20Detailed {\n', '\n', '  using SafeMath for uint256;\n', '  mapping (address => uint256) private _balances;\n', '  mapping (address => mapping (address => uint256)) private _allowed;\n', '\n', '  string constant tokenName = "Chinchilla.finance";\n', '  string constant tokenSymbol = "CHIN";\n', '  uint8  constant tokenDecimals = 18;\n', '  uint256 _totalSupply = 1000000000000*10**18;\n', '  uint256 public basePercent = 100;\n', '  uint256 public _burnStopAmount;\n', '  uint256 public _lastTokenSupply;\n', '  \n', '  constructor() public payable ERC20Detailed(tokenName, tokenSymbol, tokenDecimals) {\n', '\n', '    _mint(msg.sender, _totalSupply);\n', '    _burnStopAmount = 0;\n', '    _lastTokenSupply = 100000000 * 10**18;\n', '  }\n', '\n', '  function totalSupply() public view returns (uint256) {\n', '    return _totalSupply;\n', '  }\n', '\n', '  function balanceOf(address owner) public view returns (uint256) {\n', '    return _balances[owner];\n', '  }\n', '\n', '  function allowance(address owner, address spender) public view returns (uint256) {\n', '    return _allowed[owner][spender];\n', '  }\n', '\n', '  function findOnePercent(uint256 value) public view returns (uint256)  {\n', '    uint256 roundValue = value.ceil(basePercent);\n', '    uint256 onePercent = roundValue.mul(basePercent).div(10000);\n', '    return onePercent;\n', '  }\n', '\n', '  function transfer(address to, uint256 value) public returns (bool) {\n', '    require(value <= _balances[msg.sender]);\n', '    require(to != address(0));\n', '\n', '    uint256 tokensToBurn = findOnePercent(value);\n', '    uint256 tokensToTransfer = value.sub(tokensToBurn);\n', '\n', '    _balances[msg.sender] = _balances[msg.sender].sub(value);\n', '    _balances[to] = _balances[to].add(tokensToTransfer);\n', '\n', '    _totalSupply = _totalSupply.sub(tokensToBurn);\n', '\n', '    emit Transfer(msg.sender, to, tokensToTransfer);\n', '    emit Transfer(msg.sender, address(0), tokensToBurn);\n', '    return true;\n', '  }\n', '\n', '  function multiTransfer(address[] memory receivers, uint256[] memory amounts) public {\n', '    for (uint256 i = 0; i < receivers.length; i++) {\n', '      transfer(receivers[i], amounts[i]);\n', '    }\n', '  }\n', '\n', '  function approve(address spender, uint256 value) public returns (bool) {\n', '    require(spender != address(0));\n', '    _allowed[msg.sender][spender] = value;\n', '    emit Approval(msg.sender, spender, value);\n', '    return true;\n', '  }\n', '\n', '  function transferFrom(address from, address to, uint256 value) public returns (bool) {\n', '    require(value <= _balances[from]);\n', '    require(value <= _allowed[from][msg.sender]);\n', '    require(to != address(0));\n', '\n', '    _balances[from] = _balances[from].sub(value);\n', '\n', '    uint256 tokensToBurn = findOnePercent(value);\n', '    uint256 tokensToTransfer = value.sub(tokensToBurn);\n', '\n', '    _balances[to] = _balances[to].add(tokensToTransfer);\n', '    _totalSupply = _totalSupply.sub(tokensToBurn);\n', '\n', '    _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\n', '\n', '    emit Transfer(from, to, tokensToTransfer);\n', '    emit Transfer(from, address(0), tokensToBurn);\n', '\n', '    return true;\n', '  }\n', '\n', '  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n', '    require(spender != address(0));\n', '    _allowed[msg.sender][spender] = (_allowed[msg.sender][spender].add(addedValue));\n', '    emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\n', '    return true;\n', '  }\n', '\n', '  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n', '    require(spender != address(0));\n', '    _allowed[msg.sender][spender] = (_allowed[msg.sender][spender].sub(subtractedValue));\n', '    emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\n', '    return true;\n', '  }\n', '\n', '  function _mint(address account, uint256 amount) internal {\n', '    require(amount != 0);\n', '    _balances[account] = _balances[account].add(amount);\n', '    emit Transfer(address(0), account, amount);\n', '  }\n', '\n', '  function burn(uint256 amount) external {\n', '    _burn(msg.sender, amount);\n', '  }\n', '  function _burn(address account, uint256 amount) internal {\n', '    require(amount != 0);\n', '    require(amount <= _balances[account]);\n', '    _totalSupply = _totalSupply.sub(amount);\n', '    _balances[account] = _balances[account].sub(amount);\n', '    emit Transfer(account, address(0), amount);\n', '  }\n', '\n', '  function burnFrom(address account, uint256 amount) external {\n', '    require(amount <= _allowed[account][msg.sender]);\n', '    _allowed[account][msg.sender] = _allowed[account][msg.sender].sub(amount);\n', '    _burn(account, amount);\n', '  }\n', '}']