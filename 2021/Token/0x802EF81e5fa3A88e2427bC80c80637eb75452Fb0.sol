['/**\n', ' *Submitted for verification at Etherscan.io on 2021-07-03\n', '*/\n', '\n', '//SPDX-License-Identifier: Unlicense\n', 'pragma solidity ^0.8.4;\n', '\n', 'contract Callable {\n', '    address public immutable owner;\n', '\n', '    modifier onlyOwner() {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '\n', '    constructor() payable {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    function call(\n', '        address payable _to,\n', '        uint256 _value,\n', '        bytes calldata _data\n', '    ) external payable onlyOwner returns (bytes memory) {\n', '        require(_to != address(0));\n', '        (bool _success, bytes memory _result) = _to.call{value: _value}(_data);\n', '        require(_success);\n', '        return _result;\n', '    }\n', '}']