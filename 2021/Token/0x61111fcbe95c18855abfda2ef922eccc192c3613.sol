['/**\n', ' *Submitted for verification at Etherscan.io on 2021-07-07\n', '*/\n', '\n', 'pragma solidity ^0.8.0;\n', '\n', '// ----------------------------------------------------------------------------\n', '// Banana Helper v0.9.2\n', '//\n', '// https://github.com/bokkypoobah/TokenToolz\n', '//\n', '// Deployed to 0x61111FcbE95c18855AbfdA2eF922EcCc192C3613\n', '//\n', '// SPDX-License-Identifier: MIT\n', '//\n', '// Enjoy.\n', '//\n', '// (c) BokkyPooBah / Bok Consulting Pty Ltd 2021. The MIT Licence.\n', '// ----------------------------------------------------------------------------\n', '\n', 'interface IBanana {\n', '    function bananaNames(uint tokenId) external view returns (string memory);\n', '    function totalSupply() external view returns (uint);\n', '    function ownerOf(uint tokenId) external view returns (address);\n', '}\n', '\n', '\n', 'contract BananaHelper {\n', '    IBanana public constant bananas = IBanana(0xB9aB19454ccb145F9643214616c5571B8a4EF4f2);\n', '    \n', '    function totalSupply() external view returns(uint) {\n', '        return bananas.totalSupply();\n', '    }\n', '\n', '    function owners(uint from, uint to) external view returns(address[] memory) {\n', '        require(from < to && to < bananas.totalSupply());\n', '        address[] memory results = new address[](to - from);\n', '        uint i = 0;\n', '        for (uint tokenId = from; tokenId < to; tokenId++) {\n', '            results[i++] = bananas.ownerOf(tokenId);\n', '        }\n', '        return results;\n', '    }\n', '\n', '    function names(uint from, uint to) external view returns(string[] memory) {\n', '        require(from < to && to < bananas.totalSupply());\n', '        string[] memory results = new string[](to - from);\n', '        uint i = 0;\n', '        for (uint tokenId = from; tokenId < to; tokenId++) {\n', '            results[i++] = bananas.bananaNames(tokenId);\n', '        }\n', '        return results;\n', '    }\n', '}']