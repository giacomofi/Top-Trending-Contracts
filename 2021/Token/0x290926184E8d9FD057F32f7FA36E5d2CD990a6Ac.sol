['// SPDX-License-Identifier: MIT\n', 'pragma solidity ^0.7.0;\n', '\n', 'import "../Ownable.sol" ;\n', '\n', '//@title SEPA Token contract interface\n', 'interface SEPA_token {                                     \n', '    function balanceOf(address owner) external returns (uint256);\n', '    function transfer(address to, uint256 amount) external returns (bool);\n', '    function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\n', '    function _approve(address owner, address spender, uint256 amount) external ; \n', '}\n', '\n', '//@title SEPA Team Tokens Lock Contract\n', 'contract SEPA_ReserveRepay is Ownable {\n', '    \n', '    address public token_addr ; \n', '    SEPA_token token_contract = SEPA_token(token_addr) ;\n', '\n', '    uint256 public locked ; \n', '\n', '    function withdraw(uint256 amount, address _addr) external onlyOwner {\n', '        token_contract.transfer(_addr, amount) ; \n', '    }\n', '\n', '    function set_token_contract(address addr) external onlyOwner {\n', '        token_addr = addr ;\n', '        token_contract = SEPA_token(token_addr) ;\n', '    }\n', '    \n', '\n', '}']