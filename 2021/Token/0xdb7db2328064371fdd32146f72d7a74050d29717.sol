['/**\n', ' *Submitted for verification at Etherscan.io on 2021-03-08\n', '*/\n', '\n', 'pragma solidity ^0.8.0;\n', '\n', '// Author: 0xKiwi.\n', '\n', 'interface IERC721 {\n', '    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n', '    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n', '    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n', '    function balanceOf(address owner) external view returns (uint256 balance);\n', '    function ownerOf(uint256 tokenId) external view returns (address owner);\n', '    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n', '    function transferFrom(address from, address to, uint256 tokenId) external;\n', '    function approve(address to, uint256 tokenId) external;\n', '    function getApproved(uint256 tokenId) external view returns (address operator);\n', '    function setApprovalForAll(address operator, bool _approved) external;\n', '    function isApprovedForAll(address owner, address operator) external view returns (bool);\n', '    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n', '    function changeName(uint256 tokenId, string memory newName) external;\n', '    function tokenNameByIndex(uint256 index) external view returns (string memory);\n', '}\n', '\n', 'interface IERC20 {\n', '    function totalSupply() external view returns (uint256);\n', '    function balanceOf(address account) external view returns (uint256);\n', '    function transfer(address recipient, uint256 amount) external returns (bool);\n', '    function allowance(address owner, address spender) external view returns (uint256);\n', '    function approve(address spender, uint256 amount) external returns (bool);\n', '    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n', '}\n', '\n', 'contract NFTAtomicSwap {\n', '    uint256 public constant NAME_COST = 1830 ether;\n', '    IERC721 public constant WAIFUSION = IERC721(0x2216d47494E516d8206B70FCa8585820eD3C4946);\n', '    IERC20 public constant WET = IERC20(0x76280AF9D18a868a0aF3dcA95b57DDE816c1aaf2);\n', '\n', '    address owner;\n', '    \n', '    constructor() {\n', '        owner = msg.sender;\n', '        WET.approve(address(WAIFUSION), 2**255);\n', '    }\n', '    \n', '    function atomicNameTransfer(uint256 inNFT, uint256 outNFT, string memory tempName) external {\n', '        WET.transferFrom(msg.sender, address(this), NAME_COST * 2);\n', '        WAIFUSION.transferFrom(msg.sender, address(this), inNFT);\n', '        WAIFUSION.transferFrom(msg.sender, address(this), outNFT);\n', '        string memory oldName = WAIFUSION.tokenNameByIndex(inNFT);\n', '        WAIFUSION.changeName(inNFT, tempName);\n', '        WAIFUSION.changeName(outNFT, oldName);\n', '        WAIFUSION.transferFrom(address(this), msg.sender, inNFT);\n', '        WAIFUSION.transferFrom(address(this), msg.sender, outNFT);\n', '    }\n', '    \n', '    function atomicNameSwap(uint256 inNFT, uint256 outNFT, string memory tempName) external {\n', '        WET.transferFrom(msg.sender, address(this), NAME_COST * 3);\n', '        WAIFUSION.transferFrom(msg.sender, address(this), inNFT);\n', '        WAIFUSION.transferFrom(msg.sender, address(this), outNFT);\n', '        string memory inOldName = WAIFUSION.tokenNameByIndex(inNFT);\n', '        string memory outOldName = WAIFUSION.tokenNameByIndex(outNFT);\n', '        WAIFUSION.changeName(outNFT, tempName);\n', '        WAIFUSION.changeName(inNFT, outOldName);\n', '        WAIFUSION.changeName(outNFT, inOldName);\n', '        WAIFUSION.transferFrom(address(this), msg.sender, inNFT);\n', '        WAIFUSION.transferFrom(address(this), msg.sender, outNFT);\n', '    }\n', '}']