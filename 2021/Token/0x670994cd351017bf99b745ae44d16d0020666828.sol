['/**\n', ' *Submitted for verification at Etherscan.io on 2021-06-01\n', '*/\n', '\n', 'pragma solidity 0.6.6;\n', '// ----------------------------------------------------------------------------\n', "// 'Pink Panda' token contract\n", '//\n', '//                             _,add8ba,\n', '//                            ,d888888888b,\n', '//                           d8888888888888b                        _,ad8ba,_\n', '//                          d888888888888888)                     ,d888888888b,\n', '//                          I8888888888888888 _________          ,8888888888888b\n', '//                __________`Y88888888888888P"""""""""""baaa,__ ,888888888888888,\n', '//            ,adP"""""""""""9888888888P""^                 ^""Y8888888888888888I\n', '//         ,a8"^           ,d888P"888P^                           ^"Y8888888888P\'\n', "//       ,a8^            ,d8888'                                     ^Y8888888P'\n", '//      a88\'           ,d8888P\'                                        I88P"^\n', '//    ,d88\'           d88888P\'                                          "b,\n', "//   ,d88'           d888888'                                            `b,\n", "//  ,d88'           d888888I                                              `b,\n", "//  d88I           ,8888888'            ___                                `b,\n", "// ,888'           d8888888          ,d88888b,              ____            `b,\n", '// d888           ,8888888I         d88888888b,           ,d8888b,           `b\n', '//,8888           I8888888I        d8888888888I          ,88888888b           8,\n', "//I8888           88888888b       d88888888888'          8888888888b          8I\n", "//d8886           888888888       Y888888888P'           Y8888888888,        ,8b\n", '//88888b          I88888888b      `Y8888888^             `Y888888888I        d88,\n', '//Y88888b         `888888888b,      `""""^                `Y8888888P\'       d888I\n', '//`888888b         88888888888b,                           `Y8888P^        d88888\n', '// Y888888b       ,8888888888888ba,_          _______        `""^        ,d888888\n', '// I8888888b,    ,888888888888888888ba,_     d88888888b               ,ad8888888I\n', '// `888888888b,  I8888888888888888888888b,    ^"Y888P"^      ____.,ad88888888888I\n', '//  88888888888b,`888888888888888888888888b,     ""      ad888888888888888888888\'\n', '//  8888888888888698888888888888888888888888b_,ad88ba,_,d88888888888888888888888\n', '//  88888888888888888888888888888888888888888b,`"""^ d8888888888888888888888888I\n', "//  8888888888888888888888888888888888888888888baaad888888888888888888888888888'\n", '//  Y8888888888888888888888888888888888888888888888888888888888888888888888888P\n', "//  I888888888888888888888888888888888888888888888P^  ^Y8888888888888888888888'\n", "//  `Y88888888888888888P88888888888888888888888888'     ^88888888888888888888I\n", "//   `Y8888888888888888 `8888888888888888888888888       8888888888888888888P'\n", "//    `Y888888888888888  `888888888888888888888888,     ,888888888888888888P'\n", "//     `Y88888888888888b  `88888888888888888888888I     I888888888888888888'\n", '//       "Y8888888888888b  `8888888888888888888888I     I88888888888888888\'\n', '//         "Y88888888888P   `888888888888888888888b     d8888888888888888\'\n', '//            ^""""""""^     `Y88888888888888888888,    888888888888888P\'\n', '//                             "8888888888888888888b,   Y888888888888P^\n', '//                              `Y888888888888888888b   `Y8888888P"^\n', '//                                "Y8888888888888888P     `""""^\n', '//                                  `"YY88888888888P\'\n', '\n', '// Deployed to : 0xCFCC41ccC8392f48bfc952e01F38FaF33E02Eaad\n', '// Symbol      : PINKPANDA\n', '// Name        : Pink Panda \n', '// Total supply: 500000000000000000000\n', '// Decimals    : 9\n', '//\n', '// Enjoy.\n', '//\n', '// (c) by Pink Panda Team.\n', '\n', '// ----------------------------------------------------------------------------\n', '\n', 'contract SafeMath {\n', '    function safeAdd(uint a, uint b) public pure returns (uint c) {\n', '        c = a + b;\n', '        require(c >= a);\n', '    }\n', '    function safeSub(uint a, uint b) public pure returns (uint c) {\n', '        require(b <= a);\n', '        c = a - b;\n', '    }\n', '    function safeMul(uint a, uint b) public pure returns (uint c) {\n', '        c = a * b;\n', '        require(a == 0 || c / a == b);\n', '    }\n', '    function safeDiv(uint a, uint b) public pure returns (uint c) {\n', '        require(b > 0);\n', '        c = a / b;\n', '    }\n', '}\n', '\n', '\n', 'abstract contract ERC20Interface {\n', '    function totalSupply() virtual public view returns (uint);\n', '    function balanceOf(address tokenOwner) virtual public view returns (uint balance);\n', '    function allowance(address tokenOwner, address spender) virtual public view returns (uint remaining);\n', '    function transfer(address to, uint tokens) virtual public returns (bool success);\n', '    function approve(address spender, uint tokens) virtual public returns (bool success);\n', '    function transferFrom(address from, address to, uint tokens) virtual public returns (bool success);\n', '\n', '    event Transfer(address indexed from, address indexed to, uint tokens);\n', '    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n', '}\n', '\n', '\n', '\n', 'abstract contract ApproveAndCallFallBack {\n', '    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) virtual public;\n', '}\n', '\n', '\n', '\n', 'contract Owned {\n', '    address public owner;\n', '    address public newOwner;\n', '\n', '    event OwnershipTransferred(address indexed _from, address indexed _to);\n', '\n', '    constructor() public {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    modifier onlyOwner {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '\n', '    function transferOwnership(address _newOwner) public onlyOwner {\n', '        newOwner = _newOwner;\n', '    }\n', '    function acceptOwnership() public {\n', '        require(msg.sender == newOwner);\n', '        emit OwnershipTransferred(owner, newOwner);\n', '        owner = newOwner;\n', '        newOwner = address(0);\n', '    }\n', '}\n', '\n', '\n', '\n', 'contract PINKPANDA is ERC20Interface, Owned, SafeMath {\n', '    string public symbol;\n', '    string public  name;\n', '    uint8 public decimals;\n', '    uint public _totalSupply;\n', '\n', '    mapping(address => uint) balances;\n', '    mapping(address => mapping(address => uint)) allowed;\n', '\n', '\n', '\n', '    constructor() public {\n', '        symbol = "PINKPANDA";\n', '        name = "Pink Panda";\n', '        decimals = 9;\n', '        _totalSupply = 500000000 * 10**6 * 10**9;\n', '        balances[0xCFCC41ccC8392f48bfc952e01F38FaF33E02Eaad] = _totalSupply;\n', '        emit Transfer(address(0), 0xCFCC41ccC8392f48bfc952e01F38FaF33E02Eaad, _totalSupply);\n', '    }\n', '\n', '\n', '\n', '    function totalSupply() public override view returns (uint) {\n', '        return _totalSupply - balances[address(0)];\n', '    }\n', '\n', '\n', '\n', '    function balanceOf(address tokenOwner) public override view returns (uint balance) {\n', '        return balances[tokenOwner];\n', '    }\n', '\n', '\n', '    function transfer(address to, uint tokens) public override returns (bool success) {\n', '        balances[msg.sender] = safeSub(balances[msg.sender], tokens);\n', '        balances[to] = safeAdd(balances[to], tokens);\n', '        emit Transfer(msg.sender, to, tokens);\n', '        return true;\n', '    }\n', '\n', '\n', '\n', '    function approve(address spender, uint tokens) public override returns (bool success) {\n', '        allowed[msg.sender][spender] = tokens;\n', '        emit Approval(msg.sender, spender, tokens);\n', '        return true;\n', '    }\n', '\n', '\n', '\n', '    function transferFrom(address from, address to, uint tokens) public override returns (bool success) {\n', '        balances[from] = safeSub(balances[from], tokens);\n', '        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);\n', '        balances[to] = safeAdd(balances[to], tokens);\n', '        emit Transfer(from, to, tokens);\n', '        return true;\n', '    }\n', '\n', '\n', '\n', '    function allowance(address tokenOwner, address spender) public override view returns (uint remaining) {\n', '        return allowed[tokenOwner][spender];\n', '    }\n', '\n', '    function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\n', '        allowed[msg.sender][spender] = tokens;\n', '        emit Approval(msg.sender, spender, tokens);\n', '        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\n', '        return true;\n', '    }\n', '\n', '\n', '\n', '\n', '    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\n', '        return ERC20Interface(tokenAddress).transfer(owner, tokens);\n', '    }\n', '}']