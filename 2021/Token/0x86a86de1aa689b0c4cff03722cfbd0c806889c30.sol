['/**\n', ' *Submitted for verification at Etherscan.io on 2021-06-30\n', '*/\n', '\n', 'pragma solidity ^0.5.0;\n', '\n', '// From https://ethereum.stackexchange.com/a/88292\n', 'contract Ownable {\n', '\n', '    address private owner;\n', '\n', '    modifier onlyOwner {\n', '        require(msg.sender == owner, "Ownable: You are not the owner, Bye.");\n', '        _;\n', '    }\n', '\n', '    constructor () public {\n', '        owner = msg.sender;\n', '    }\n', '}\n', '\n', 'contract Upgradable is Ownable {\n', '\n', '    address private newAddress;\n', '\n', '    modifier notUpgraded {\n', '\n', '        require(newAddress == address(0), "Contract has been upgraded" );\n', '        _;\n', '    }\n', '\n', '    function upgrade(address _newAddress) public onlyOwner notUpgraded {\n', '\n', '        newAddress = _newAddress;\n', '\n', '    }\n', '\n', '    function getUpgradedAddress() public view returns (address) {\n', '\n', '        return newAddress;\n', '\n', '    }\n', '\n', '}\n', '\n', 'contract Claims is Ownable, Upgradable {\n', '\n', '    //    uint claimCount = 0;\n', '\n', '    event Claim(string publicHash, string publicLocator, string privateHash);\n', '\n', '    function claim(string memory publicHash, string memory publicLocator, string memory privateHash) public onlyOwner notUpgraded {\n', '\n', '        //        claimCount += 1;\n', '\n', '        emit Claim(publicHash, publicLocator, privateHash);\n', '\n', '    }\n', '\n', '    //    function getClaimCount() public view returns (uint) {\n', '    //\n', '    //        return claimCount;\n', '    //\n', '    //    }\n', '\n', '}']