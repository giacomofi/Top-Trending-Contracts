['/**\n', ' *Submitted for verification at Etherscan.io on 2021-06-08\n', '*/\n', '\n', '// SPDX-License-Identifier: MIT\n', 'pragma solidity ^0.8.4;\n', '\n', 'contract Token{\n', '    \n', '    mapping (address => uint) public balances;\n', '    mapping (address => mapping(address => uint)) public allowance;\n', '\n', '    uint public totalSupply = 1000000 ;\n', '    string public name = "Tommy Token";\n', '    string public symbol = "TMY";\n', '    uint public decimals = 0;\n', '\n', '    event Transfer(address indexed from, address indexed to, uint value);\n', '    event Approval(address indexed owner, address indexed spender, uint value);\n', '    \n', '    constructor() {\n', '        balances[msg.sender] = totalSupply;\n', '    } \n', '\n', '    function balanceOf(address owner) public view returns(uint) {\n', '        return balances[owner];\n', '    }\n', '\n', '\n', '    function Tranfer(address to, uint value) public returns(bool) {\n', '        require(balanceOf(msg.sender) >= value, "balance too low");\n', '        balances[to] += value;\n', '        balances[msg.sender] -= value;\n', '        emit Transfer(msg.sender, to, value);\n', '        return true;         \n', '    }\n', '\n', '    function TransferFrom(address from, address to, uint value) public returns (bool){\n', '        require(balanceOf(from) >= value, "Balance is too low");\n', '        require (allowance[from][msg.sender] >= value, "Allowance too low" );\n', '        balances[to] += value;\n', '        balances [from] -= value;\n', '        emit Transfer(from, to, value);\n', '        return true;\n', '    }\n', '\n', '    function Approve(address spender, uint value) public returns(bool) {\n', '        allowance[msg.sender][spender] = value;\n', '        emit Approval(msg.sender, spender, value);\n', '        return true;\n', '    }\n', '}']