['pragma solidity ^0.4.23;\n', '\n', 'import "./FreezableToken.sol";\n', 'import "./IKYTE.sol";\n', '\n', '/**\n', ' * @title KYTE Token\n', ' *\n', ' * @dev Constructor of the deployment\n', ' */\n', 'contract KYTE is FreezableToken, IKYTE {\n', '    string private _name;\n', '    string private _symbol;\n', '    uint256 private _decimals;\n', '\n', '    /**\n', '     * @dev constructor\n', '     */\n', '    constructor() public {\n', '        _name = "Kambria Yield Tuning Engine";\n', '        _symbol = "KYTE";\n', '        _decimals = 18;\n', '        _totalSupply = 25000000 * 10**(_decimals); // 25000000\n', '\n', '        balances[msg.sender] = _totalSupply; // coinbase\n', '    }\n', '\n', '    function name() public view returns (string) {\n', '        return _name;\n', '    }\n', '\n', '    function symbol() public view returns (string) {\n', '        return _symbol;\n', '    }\n', '\n', '    function decimals() public view returns (uint256) {\n', '        return _decimals;\n', '    }\n', '}']