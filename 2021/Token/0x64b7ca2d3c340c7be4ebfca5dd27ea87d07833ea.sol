['/**\n', ' *Submitted for verification at Etherscan.io on 2021-05-09\n', '*/\n', '\n', 'pragma solidity >=0.5 <0.6;\n', 'contract niubInterface{\n', '    string public name;\n', '  string public symbol;\n', '  uint8 public  decimals;\n', '  uint public totalSupply;\n', '    \n', '    function transfer(address _to, uint256 _value) public returns (bool success);\n', '    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n', '    function approve(address _spender, uint256 _value) public returns (bool success);\n', '    function allowance(address _owner, address _spender) public view returns (uint256 remaining);\n', '    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n', '    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n', '}\n', '\n', 'contract niub is niubInterface{\n', '    mapping (address => uint256) private balanceOf;\n', '    mapping (address => mapping (address => uint256)) internal allowed;\n', '    \n', '    constructor() public {\n', '        totalSupply = 100000000000000*1e18; \n', '        name = "NIUB";\n', '        symbol = "NIUB";\n', '        decimals = 18;\n', '        balanceOf[msg.sender] = totalSupply;\n', '    }\n', '\n', '\n', '    function transfer(address _to, uint _value) public returns (bool success) {\n', '        require(_to != address(0));\n', '        require(_value <= balanceOf[msg.sender]);\n', '        require(balanceOf[_to] + _value >= balanceOf[_to]);\n', '\n', '        balanceOf[msg.sender] -= _value;\n', '        balanceOf[_to] += _value;\n', '        emit Transfer(msg.sender, _to, _value);\n', '        return true;\n', '    }\n', '\n', '      function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n', '        require(_to != address(0));\n', '        require(_value <= balanceOf[_from]);\n', '        require(_value <= allowed[_from][msg.sender]);\n', '        require(balanceOf[_to] + _value >= balanceOf[_to]);\n', '\n', '        balanceOf[_from] -= _value;\n', '        balanceOf[_to] += _value;\n', '\n', '        allowed[_from][msg.sender] -= _value;\n', '        emit Transfer(_from, _to, _value);\n', '        return true;\n', '      }\n', '\n', '  function approve(address _spender, uint256 _value) public  returns (bool success) {\n', '          allowed[msg.sender][_spender] = _value;\n', '    emit Approval(msg.sender, _spender, _value);\n', '    return true;\n', '  }\n', '\n', '  function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n', '      return allowed[_owner][_spender];\n', '  }\n', '}']