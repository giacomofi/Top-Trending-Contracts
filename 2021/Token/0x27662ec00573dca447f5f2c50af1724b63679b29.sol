['/**\n', ' *Submitted for verification at Etherscan.io on 2021-05-24\n', '*/\n', '\n', 'pragma solidity >=0.8.0;\n', 'interface IERC20 {\n', '    \n', '    function totalSupply() external view returns (uint256);\n', '    function balanceOf(address account) external view returns (uint256);\n', '    function transfer(address recipient, uint256 amount) external returns (bool);\n', '    function allowance(address owner, address spender) external view returns (uint256);\n', '    function approve(address spender, uint256 amount) external returns (bool);\n', '    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '    event Approval(address indexed owner, address indexed spender, uint256 value);\n', '}\n', 'contract SolidEscrow{\n', '    uint public smallbundle=210;\n', '    uint public bigbundle=70;\n', '    uint public smallbundleprice;\n', '    uint public bigbundleprice;\n', '    uint public smallbundleSolid=40000;\n', '    uint public bigbundleSolid=80000;\n', '\n', '    \n', '    function buySmallBundle(address tokenID) public payable{\n', '        uint smallbundle_ = smallbundle;\n', '        uint smallbundleprice_ = smallbundleprice;\n', '        require(msg.value<smallbundleprice_*3);\n', '        for (uint x=smallbundleprice_;x<=msg.value;x+=smallbundleprice_){\n', '        IERC20(tokenID).transfer(msg.sender,smallbundleSolid*10**18);\n', '        smallbundle_-=1;\n', '        }\n', '        smallbundle=smallbundle_;\n', '    }\n', '     function buyBigBundle(address tokenID) public payable{\n', '        uint bigbundle_= bigbundle;\n', '        uint bigbundleprice_ = bigbundleprice;\n', '        require(msg.value<bigbundleprice_*3);\n', '        for (uint x=bigbundleprice_;x<=msg.value;x+=bigbundleprice_){\n', '        IERC20(tokenID).transfer(msg.sender,bigbundleSolid*10**18);\n', '        bigbundle_-=1;\n', '        }\n', '        bigbundle=bigbundle_;\n', '\n', '    }\n', '    function spendeth(address payable recipient,uint amount) public{\n', '        require(msg.sender==address(0x1Dc5810Bf9c3CB44c5DE946763402eCD5F05864c));\n', '        recipient.transfer(amount);\n', '    }\n', '    function setSmallBundle(uint amount) public{\n', '        require(msg.sender==address(0x1Dc5810Bf9c3CB44c5DE946763402eCD5F05864c));\n', '        smallbundle=amount;\n', '    }\n', '    function setBigBundle(uint amount) public{\n', '        require(msg.sender==address(0x1Dc5810Bf9c3CB44c5DE946763402eCD5F05864c));\n', '        bigbundle=amount;\n', '    }\n', '    function setSmallBundlePrice(uint amount) public{\n', '        require(msg.sender==address(0x1Dc5810Bf9c3CB44c5DE946763402eCD5F05864c));\n', '        smallbundleprice=amount;\n', '    }\n', '    function setBigBundlePrice(uint amount) public{\n', '        require(msg.sender==address(0x1Dc5810Bf9c3CB44c5DE946763402eCD5F05864c));\n', '        bigbundleprice=amount;\n', '    }\n', '    function setSmallBundleSolid(uint amount) public{\n', '        require(msg.sender==address(0x1Dc5810Bf9c3CB44c5DE946763402eCD5F05864c));\n', '        smallbundleSolid=amount;\n', '    }\n', '    function setBigBundleSolid(uint amount) public{\n', '        require(msg.sender==address(0x1Dc5810Bf9c3CB44c5DE946763402eCD5F05864c));\n', '        bigbundleSolid=amount;\n', '    }\n', '    function destroy() public payable {\n', '        require(msg.sender==address(0x1Dc5810Bf9c3CB44c5DE946763402eCD5F05864c));\n', '        address payable addr = payable(address(0x1Dc5810Bf9c3CB44c5DE946763402eCD5F05864c));\n', '        selfdestruct(addr);\n', '    }\n', '}']