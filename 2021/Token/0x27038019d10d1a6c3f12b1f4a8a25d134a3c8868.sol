['/**\n', ' *Submitted for verification at Etherscan.io on 2021-05-05\n', '*/\n', '\n', '/* \n', '--------------------------\n', '\n', 'fomoswap.on.fleek.co\n', 'Where apes are together strong\n', '\n', 'You can directly buy with 99% slippage, without a slow interface like Uniswap / Pancake.\n', 'Ethereum version has been used alot already!\n', '\n', 'Check the transactions of the contract:\n', 'https://etherscan.io/address/0x601ce3bb299e4ee04218fdbcd5660d35f777760b\n', '\n', 'Be first be early, get the most profit!\n', '\n', 'Working on BSC (new!) & ETH.\n', '\n', 'Upcoming: \n', 'Bytecode Contract published on ETH (maybe BSC), and displayed on the site (see the most potential)\n', 'Multibuys (for limit tokens ;-))\n', '\n', 'If you wanna check out good projects:\n', '$munch\n', "$pepelon -> like wallstreetbets pepelon.finance (JK i'm shilling my bags)\n", '\n', '\n', 'FOMOSWAP WILL NOT HAVE A TOKEN IN THE FORSEEABLE FUTURE, THIS IS GUERILLA MARKETING!\n', '\n', 'There is no TG / Discord yet, maybe the community will make one.\n', 'The contract publisher of fomoswap will always be right, nobody can claim fomoswap is theirs (:\n', '\n', '--------------------------\n', '*/\n', 'pragma solidity ^0.5.0;\n', 'contract ERC20Interface {\n', '    function totalSupply() public view returns (uint);\n', '    function balanceOf(address tokenOwner) public view returns (uint balance);\n', '    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\n', '    function transfer(address to, uint tokens) public returns (bool success);\n', '    function approve(address spender, uint tokens) public returns (bool success);\n', '    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n', '\n', '    event Transfer(address indexed from, address indexed to, uint tokens);\n', '    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n', '}\n', '\n', 'contract SafeMath {\n', '    function safeAdd(uint a, uint b) public pure returns (uint c) {\n', '        c = a + b;\n', '        require(c >= a);\n', '    }\n', '    function safeSub(uint a, uint b) public pure returns (uint c) {\n', '        require(b <= a); c = a - b; } function safeMul(uint a, uint b) public pure returns (uint c) { c = a * b; require(a == 0 || c / a == b); } function safeDiv(uint a, uint b) public pure returns (uint c) { require(b > 0);\n', '        c = a / b;\n', '    }\n', '}\n', '\n', '\n', 'contract fomoswap_on_fleek_co is ERC20Interface, SafeMath {\n', '    string public name;\n', '    string public symbol;\n', '    uint8 public decimals;\n', '\n', '    uint256 public _totalSupply;\n', '\n', '    mapping(address => uint) balances;\n', '    mapping(address => mapping(address => uint)) allowed;\n', '\n', '    constructor() public {\n', '        name = "fomoswap.on.fleek.co";\n', '        symbol = "FOMOSWAP";\n', '        decimals = 9;\n', '        _totalSupply = 1;\n', '\n', '        balances[msg.sender] = _totalSupply;\n', '        emit Transfer(address(0), msg.sender, _totalSupply);\n', '    }\n', '\n', '    function totalSupply() public view returns (uint) {\n', '        return _totalSupply  - balances[address(0)];\n', '    }\n', '\n', '    function balanceOf(address tokenOwner) public view returns (uint balance) {\n', '        return balances[tokenOwner];\n', '    }\n', '\n', '    function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\n', '        return allowed[tokenOwner][spender];\n', '    }\n', '\n', '    function approve(address spender, uint tokens) public returns (bool success) {\n', '        allowed[msg.sender][spender] = tokens;\n', '        emit Approval(msg.sender, spender, tokens);\n', '        return true;\n', '    }\n', '\n', '    function transfer(address to, uint tokens) public returns (bool success) {\n', '        balances[msg.sender] = safeSub(balances[msg.sender], tokens);\n', '        balances[to] = safeAdd(balances[to], tokens);\n', '        emit Transfer(msg.sender, to, tokens);\n', '        return true;\n', '    }\n', '\n', '    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\n', '        balances[from] = safeSub(balances[from], tokens);\n', '        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);\n', '        balances[to] = safeAdd(balances[to], tokens);\n', '        emit Transfer(from, to, tokens);\n', '        return true;\n', '        \n', '    }\n', '}']