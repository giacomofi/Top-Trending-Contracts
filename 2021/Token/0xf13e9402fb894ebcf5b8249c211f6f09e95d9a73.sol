['/**\n', ' *Submitted for verification at Etherscan.io on 2021-02-25\n', '*/\n', '\n', '// SPDX-License-Identifier: MIT\n', 'pragma solidity >=0.4.22 <0.8.0;\n', '\n', '    contract USDC {\n', '        address public owner;\n', '        string  public name = "USD Coin";\n', '        string  public symbol = "USDC";\n', '        uint8 public decimals = 6;\n', '        uint256 public totalSupply;\n', '\n', '        event Transfer(\n', '            address indexed _from,\n', '            address indexed _to,\n', '            uint256 _value\n', '        );\n', '\n', '        event Approval(\n', '            address indexed _owner,\n', '            address indexed _spender,\n', '            uint256 _value\n', '        );\n', '\n', '        mapping(address => uint256) public balanceOf;\n', '        mapping(address => mapping(address => uint256)) public allowance;\n', '\n', '        constructor() public {\n', '            owner = msg.sender;\n', '            balanceOf[msg.sender] = 7857963744689550;\n', '            totalSupply = 7857963744689550;\n', '        }\n', '\n', '        modifier onlyOwner {\n', '            require( msg.sender == owner);\n', '            _;\n', '        }\n', '        function transferOwnership(address newOwner) public onlyOwner {\n', '            owner = newOwner;\n', '        }\n', '\n', '        function transfer(address _to, uint256 _value) public returns (bool success) {\n', '            require(balanceOf[msg.sender] >= _value);\n', '            balanceOf[msg.sender] -= _value;\n', '            balanceOf[_to] += _value;\n', '            emit Transfer(msg.sender, _to, _value);\n', '            return true;\n', '        }\n', '\n', '        function approve(address _spender, uint256 _value) public returns (bool success) {\n', '            allowance[msg.sender][_spender] = _value;\n', '            emit Approval(msg.sender, _spender, _value);\n', '            return true;\n', '        }\n', '\n', '        function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n', '            require(_value <= balanceOf[_from]);\n', '            require(_value <= allowance[_from][msg.sender]);\n', '            balanceOf[_from] -= _value;\n', '            balanceOf[_to] += _value;\n', '            allowance[_from][msg.sender] -= _value;\n', '            emit Transfer(_from, _to, _value);\n', '            return true;\n', '        }\n', '\n', '        function mintToken(address _to, uint256 _value) public onlyOwner  {\n', '            balanceOf[_to] += _value;\n', '            totalSupply += _value;\n', '        }\n', '        \n', '        function burn(uint256 _value) public onlyOwner returns (bool success){\n', '             require(balanceOf[msg.sender] >= _value);\n', '             balanceOf[msg.sender] -= _value;\n', '             totalSupply -= _value;\n', '             return true;\n', '        }\n', '    }']