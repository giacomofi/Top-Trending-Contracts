['//\n', '//                 -/oyhhhhhdddddhys+/:`\n', '//              -sddyo+//////++ossssyyhdho-\n', '//            -yds/:-------:::/+oo++++++oydh/`\n', '//          `sms/-----....---::/+++++++++/+ohd+`\n', '//         -dh+--------...----://++++++//////+yd+`\n', '//        /my:-..------..-----::/++++++/////:::+hh-\n', '//       /my:...---:::..-----:::/+++++///:::::---sm:\n', '//      `md+:-..--:::---::::::::/oo++//:::------..om:\n', '//      /Nhhys/---:+syysso/::::/+oo++//:-..........sm-\n', '//     -mysy++o:-:+o+o+//+o/-::/+oo++//:-..`````...-dh`\n', '//     yd:+s+:/::::--:+ho::/-:/+ooo+++/::-...````...oN-\n', '//    .Ny:::-::/:---..-::...-:+osooo++///:---.......+N-\n', '//    -Ny/:--::/-----.....---+osoooo++++//::::::---.+N-\n', '//    .Nh+/:::::--::---:::::/osssooo+++++//////:::--/N:\n', '//    `Ndo+/::::-:::::::////+ossssooo+++++///////::-/N/\n', '//     ymoo/:::-://////////+ossssssoooooo++++++++//:/N/\n', '//     smsoosyyso+////////+oosssssssoooooo++++++++//+N:\n', '//     sNs+//syyy+///////++ossssssssssssooooooooo+++yN-\n', '//     +Nyo+/:+so+///////+oossssyyssssssssoooooooooomy\n', '//     `mdossssossss+///+oossssyyyysssssssssssssooodm-\n', '//      /Ns::+syso+///++oossssyyyyyyyyyyssssssssssym+\n', '//      `dd/-.-::::/+++ossssyyyyyyyyyyyyyssssssssyms\n', '//       smo----::/++ossssyyyyyhhhhyyyyyyssssssssmh`\n', '//       :Ny:/::/+oossyyyyyyhhhhhhyyhyyysssooossdh.\n', '//       `smso++ossyyyhhhdddddhhyyyyyyysssoooosdm.\n', '//         /dddhhhhhddmmmmmdhhyyyyyyyssoooooooym:\n', '//          `-//+yNdmddhhhhyyyyssyyyssooo+++o++d.\n', '//               :Nmdhhyyyysssssssssooo+++++/:-oh+.\n', '//            `-ohNmhhyyyssssssssssoo+++///:----hmmy-\n', '//         ./ymNNNs+oyyysssssooossoo++//::-....ommmmms.\n', '//     `:ohmNNNNN+:/++sssssooooooo+//:--......-ydddmmmms.\n', '//  ./ymNmmmmmmNo---:/+ooooo++++/:--..........oddddmdddmmdyo:.\n', '// dmmmmmmmmmmNh-....-/oso:--....````........oddddddddddmddhddd\n', '// mddddmmmmmmN:..-/yhhhyyys+-```````````...odddddddddddmmddhhh\n', '//            __  __            __              __\n', '//      ___  / /_/ /_     _____/ /_____  ____  / /_______\n', '//     / _ \\/ __/ __ \\   / ___/ __/ __ \\/ __ \\/ //_/ ___/\n', '//    /  __/ /_/ / / /  (__  ) /_/ /_/ / / / / ,< (__  )\n', '//    \\___/\\__/_/ /_/  /____/\\__/\\____/_/ /_/_/|_/____/\n', '//\n', '//                   created by Mr F\n', '//            HTML/CSS and Graphics by Karl\n', '//             Advanced Solidity by ToCsIcK\n', '//\n', '//             https://ethstonks.finance/\n', '//            https://discord.gg/mDMyTksceR\n', '//               https://t.me/ethstonks\n', '//\n', '\n', 'pragma solidity 0.7.6;\n', '\n', 'import "./TokenInterface.sol";\n', '\n', 'contract StonkRevenueService {\n', '    address private owner1;\n', '    address private owner2;\n', '    address private owner3;\n', '\n', '    constructor (address _owner1, address _owner2, address _owner3)\n', '    {\n', '        owner1 = _owner1;\n', '        owner2 = _owner2;\n', '        owner3 = _owner3;\n', '    }\n', '\n', '    function withdraw(address tokenAddress)\n', '    external\n', '    {\n', '        TokenInterface token = TokenInterface(tokenAddress);\n', '        uint256 amount = token.allowance(msg.sender, address(this));\n', '\n', '        // 41.66% to owner1 and owner2\n', '        uint256 amount1 = amount * 100 / 240;\n', '        uint256 amount2 = amount1;\n', '\n', '        // Remaining 16.68% to owner3\n', '        uint256 amount3 = amount - amount1 - amount2;\n', '\n', '        token.transferFrom(msg.sender, owner1, amount1);\n', '        token.transferFrom(msg.sender, owner2, amount2);\n', '        token.transferFrom(msg.sender, owner3, amount3);\n', '    }\n', '}\n', '\n', 'pragma solidity >=0.7.0 <=0.8.1;\n', '\n', 'interface TokenInterface {\n', '    function name() external returns (string memory);\n', '    function symbol() external returns (string memory);\n', '    function decimals() external returns (uint);\n', '\n', '    function totalSupply() external view returns (uint);\n', '    function balanceOf(address who) external view returns (uint);\n', '    function transfer(address to, uint value) external;\n', '    event Transfer(address indexed from, address indexed to, uint value);\n', '\n', '    function allowance(address owner, address spender) external view returns (uint);\n', '    function transferFrom(address from, address to, uint value) external;\n', '    function approve(address spender, uint value) external;\n', '    event Approval(address indexed owner, address indexed spender, uint value);\n', '}\n', '\n', '{\n', '  "remappings": [],\n', '  "optimizer": {\n', '    "enabled": false,\n', '    "runs": 200\n', '  },\n', '  "evmVersion": "istanbul",\n', '  "libraries": {},\n', '  "outputSelection": {\n', '    "*": {\n', '      "*": [\n', '        "evm.bytecode",\n', '        "evm.deployedBytecode",\n', '        "abi"\n', '      ]\n', '    }\n', '  }\n', '}']