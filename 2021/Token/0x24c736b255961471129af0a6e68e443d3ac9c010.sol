['/**\n', ' *Submitted for verification at Etherscan.io on 2021-06-17\n', '*/\n', '\n', '// SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity >=0.7.0 <0.8.0;\n', '\n', '\n', '\n', 'interface RaribleInterface {\n', '    function balanceOf(address _owner, uint256 _id) external view returns (uint256);\n', '    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external;\n', '    function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external;\n', '    function setApprovalForAll(address _operator, bool _approved) external;\n', '}\n', '\n', 'contract NFTStakingTest {\n', '    \n', '    RaribleInterface rarible =  RaribleInterface(0xd07dc4262BCDbf85190C01c996b4C06a461d2430);\n', '\n', '    function depositNFT(uint id, uint value) public {\n', '        rarible.setApprovalForAll(address(this), true);\n', '        require(rarible.balanceOf(address(msg.sender), id) >= value);\n', '        rarible.safeTransferFrom(address(msg.sender), address(this), id, value, "");\n', '    }\n', '\n', '    function withdrawNFT(uint id, uint value) public {\n', '        rarible.safeTransferFrom(address(this), address(msg.sender), id, value, "");\n', '    }\n', '\n', '    function nftIDBalance(uint id) public view returns(uint) {\n', '        uint nftBalance = rarible.balanceOf(address(msg.sender), id);\n', '        return nftBalance;\n', '    }\n', '}']