['/**\n', ' *Submitted for verification at Etherscan.io on 2021-05-04\n', '*/\n', '\n', '// SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity >=0.7.0 <0.8.0;\n', '\n', '\n', '\n', '\n', 'interface StarBoundInterface {\n', '    function burn(uint amount) external;\n', '    function balanceOf(address account) external;\n', '}\n', '\n', 'contract IonThrusters {\n', '    \n', '    StarBoundInterface StarBound =  StarBoundInterface( 0x801EA8C463a776E85344C565e355137b5c3324CD );\n', '    \n', '    \n', '    address public throttleController;\n', '    \n', '    constructor () {\n', '        throttleController = msg.sender;\n', '    }\n', '    \n', '    modifier onlyThrottleController {\n', '        require(msg.sender == throttleController);\n', '        _;\n', '    }\n', '    \n', '    event AfterBurnersEngaged(address, address,  uint);\n', '    \n', '    function IonThrustersResult() public pure returns(string memory) {\n', '        return "The StarBound in this contract can only be burned! Engaging Ion Thrusters will consume StarBound by decreasing total supply.";\n', '    }\n', '    \n', '    function engageIonThrusters(uint amount ) public onlyThrottleController {\n', '        StarBound.burn(amount);\n', '    }\n', '    \n', '}']