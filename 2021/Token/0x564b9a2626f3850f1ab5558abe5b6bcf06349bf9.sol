['/**\n', ' *Submitted for verification at Etherscan.io on 2021-04-04\n', '*/\n', '\n', 'pragma solidity ^0.5.0;\n', "//.............''''''''''''''''''''''''''''''''.                                                                          ..............................\n", "//............'',,,,,,,,,,,,,,,,,,,,,,,,',,'....'''.'''.....'''...............................'..................'''....................................\n", "//,,,',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.. .;k0OO00000000000000000000000000000000000000000000O0000O00000000000000OO00Ol.   ..........................\n", "//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,'....,::d0KKKKKKKKK0KKKK00KKKK0000000KKKKKKKKK00KKKKKKKKKKKKKK0KKKKKKKKKKKKKKKKKKKkc;,.   .......................\n", "//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',..  .dKKKKKKKKKKK000000000000000000000000000000000000000000000000000000000KKKKKKKKKKKO;    ......................\n", '//,,,,,,,,,,,,;::::::::::::::::::::::::,.  .dKKKKKKKKKK00000000000000000000000OOkxxkO00000OOOkxkO000000000000000000KKKKKKKKKO;    ......................\n', '//,,,,,,,,,,,;:odxxxxxxxxxxxxxxxxxxdxxd:.  .dKXKKKKK0000000000OO000000000000OOOkdlloxO00000OxolokOO0000000000000O00000KKKKKKO;    ......................\n', '//llllccccllllodxxxxxxxxxxxxxxxxxxxxxxxc.  .dKKKKKK0000OkkkkO0O000000000000000OkxoodkO00000OxdodkOO00000OO000000000000KKKKKKO;    ......................\n', '//xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxc.  .dKKK000000OkdlloxO000000000000000O00OOOOO000OO00OOOO0000000000000OO0O000000000KKO;    ......................\n', '//xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxc.  .dKKK000000OkdoldkO00000000000000000000000000000kl::::cc:cdO0000OOOkkkOO0000000KKO;    .....      ...........\n', '//xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxc.  .dKK00O00000OOOOOO000000000000000000000000OO000Oo.       .:k0000OkdoloxO0000000KKO;    ...         ..........\n', "//kkxxxxxxxxxxkOOOOOOOOOOOOOOOOOOOOOOOOl.  .dKK00000000000000000000000000000000000000O0Odll:,.......';clldO0OxdddkO0000000KKO;       .........   .......\n", '//0kxxxxxxxxxkOKXXXXXXXXXXXXXXXXXXXXXXXd.  .dKK0000000000000000000000000000000000000000k;. .cdddddddo,   ,x000OOOO00000000KKO;       .ldddddo,    ......\n', "//K00000000000KXXXXXXXXXXXXXXXXXXXXXXXXd.  .dKK00O000000000000000000000000OkkxkkO000000k;  .cddddddddc;;,;;;cxO00000000000KKO;   .';,:odddddo,    ......\n", "//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXd.  .dKK000000000000000000000000000OxollokO00000k;  .cdddddddddddd;  .lO00000000000KKO;   'odddddddddo,    ......\n", "//XXXXXXXXXXXX0dllllllllllllllldOXXXXXXd.  .dKK000000000000000000000000000OxolodkO00000k;  .cddddddddddddl,',;:::::::::::cccc;'',codddddddddo'    ......\n", "//XXXXXXXXXXXXd.               .dKXXXXXd.  .dKKK000000000000OO0000000000000OkkkOO000000k;  .cddddddddddddddxl.               ;odddddddddddddo'    ......\n", "//0KXXXXXXOddoc,............   .;ooodoo;.  .dKKK00000000000OkxxkO0000000000000000000000k;  .cdddddddddddddddo;'.............'codddddddddddddo'    ......\n", "//kOKXXXXKo.  .cddddddddddo:.              .dKKK0000000000Okdlldk0000000000000000000000k;  .cdddddddddddddddddddddddddddddddddddddddddddddddo'    ......\n", "//xkOOOOOOc.   .',cddddddddl;,;,,,,.       .dKK00000000000OOxooxO0000000000000OOkxkxdool;..,ldddddddddddddddddddddddddddddddddddddddddddddddo:..... ....\n", "//xxxxxxxx:.      ,oddddddddddxddxd;       .dKK0000O0000000OOOOO00000000000000Okollc'. .,lddddddddddddddddddddddddddddddddddddddddddddddddddddooo,    ..\n", "//xxxxxxxxl;,,,,,,,,,,,,,,,,,,,;;,,,,,'.   .dKK0000OkkkOO000000000000000000000Okdooc.   ,oddddddddddxkO00d:,;ldddddddddddddddddddkO00d:,;lddddddd;    ..\n", "//xxxxxxxxxxxxxxxo,.               'oxd:.  .dKK000OkolldkO00OO00000000000000000OOOOd'   ,oddddddddddxKWWNd. .;odddddddddddddddddx0NMWx. .;odddddd;    ..\n", "//xxxxxxxxxxxxxxxo:''''''''''''.   .,;;'   .dKK000OkolodkOOOO0000000000000O00000O00x'   ,oddddddddddddddd;  .;odddddddddoc;;:lddddddd;. .;ddddddd;    ..\n", "//oxxxxxxxxxxxdolllccccclclcclc;.          .dKKK000OkkkkOOOOO00000000O00OO000000000x'   ,oddddddddddo,.     .:ddddddddddc.  .;oxo;.     .;odddddd;    ..\n", "//ldddddddddddolccccccccccccccc:'.......   .dKKK00000000000000000000OkkxkOO00000000x'   ,odxxxxxxxxxd:......'cddddddddddl,...:dxd:......'cdxxxxxx;    ..\n", "//clccccccclllcccccccccccccccclccccccc:'.  .dKKK000000000000OO00000OkdlloxO00000000x'   ,odxkOOOOOOOkxdodddddddddddddddddddddddddddddddddxOOkkkOk:    ..\n", "//ccccccccccccccccccccccccccccccccccccc,.  .dKKK0000000OOkkkOO000000kdoodkO00000000x'   ,odxkOOOkOOOkxdddc;,:ldddddddc;,;ldddddddc;,,:oddkkOOkkOkc.   ..\n", "//ccccccccccccccccccccccccccccccccccccc,.  .dKKKKKK000OkdllokO0000000OOOOO000000000x'   ,odxkOOOOOOOOkddd;. .:dddddxo,  .:dddddxo,   .lddkOOOOOOk:    ..\n", "//cccccccccccccccccccccccccccccccc:;,',.   .dKXKKKKK000kdoodkOO00000000000000000000kl;,,,;;cdkkkkkkkxxxdd;   .;;;;;;,.   .;;;;;;,.   .lddxkkxoc::'.  ...\n", '//:ccccccccccc::;;;;;;;;;;;;;;;;;;,.       .dKXKKKKKKKK0OOOOO000000000000000000000000OOx;  .cdddddddddddd;                           .ldddddo,    ......\n', "//;:::::c::cc::;;;;;;;;;;;;;;;;,''..       .:odkKKKKKKKK0000000000000000000000000000000Ol,',;::coddddddddc'..........................;lddl::;.    ......\n", "//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;'.             .:OXKKKKKXKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK0d.  .:ddddddddddddddddddddddddddddddddddddddxl'    ..........\n", "//;;;;;;;;;;;;;;;;;;;;;;;;;,'''.............   'dxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxc.  .,ccccccccccccccccccccccccccccccccccccccc:.    ..........\n", '//;;;;;;;;;;;;;;;;;;;;;;;;,..  .:oooooooooo:.    ..........................................                                              ...............\n', '//;;;;;;;;;;;;;,,,,,,,,,,,,.   .:dddddddlll;.        .......                                     ........             .......            ...............\n', '//;;;;;;;;;;;;,.............   .:ddddddc.. ....    .:looooo:.   ............................   .;looooool,    ...    .coooooc.    ......................\n', "//''''''''''''.............     '::::::,.   ...    .;::::::,.   .............................  .,::::::::'    ....   .;:::::;.    ......................\n", '//.........................             ............            ................................              .......             ......................\n', '//..........................            ............            ................................             ........            .......................\n', '//......................................................................................................................................................\n', '//......................................................................................................................................................\n', '//\n', '// ✧･ﾟ: *✧･ﾟ:* cutest meme ever made is making a comeback *:･ﾟ✧*:･ﾟ✧\n', '//♬♩♪♩ nyan ♩♪♩♬ ♬♩♪♩ nyan ♩♪♩♬ ♬♩♪♩ nyan ♩♪♩♬ ♬♩♪♩ nyan ♩♪♩♬ ♬♩♪♩ nyan ♩♪♩♬ \n', '//\n', '//\n', '// website: nyan.cat \n', '//\n', '// license: MIT\n', '//-------------------------------------------\n', 'contract ERC20Interface {\n', '    function totalSupply() public view returns (uint);\n', '    function balanceOf(address tokenOwner) public view returns (uint balance);\n', '    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\n', '    function transfer(address to, uint tokens) public returns (bool success);\n', '    function approve(address spender, uint tokens) public returns (bool success);\n', '    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n', '\n', '    event Transfer(address indexed from, address indexed to, uint tokens);\n', '    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n', '}\n', '\n', '// ----------------------------------------------------------------------------\n', '// Safe Math Library\n', '// ----------------------------------------------------------------------------\n', 'contract SafeMath {\n', '    function safeAdd(uint a, uint b) public pure returns (uint c) {\n', '        c = a + b;\n', '        require(c >= a);\n', '    }\n', '    function safeSub(uint a, uint b) public pure returns (uint c) {\n', '        require(b <= a); c = a - b; } function safeMul(uint a, uint b) public pure returns (uint c) { c = a * b; require(a == 0 || c / a == b); } function safeDiv(uint a, uint b) public pure returns (uint c) { require(b > 0);\n', '        c = a / b;\n', '    }\n', '}\n', '\n', '\n', 'contract nyan_cat is ERC20Interface, SafeMath {\n', '    string public name;\n', '    string public symbol;\n', '    uint8 public decimals; // 18 decimals is the strongly suggested default, avoid changing it\n', '\n', '    uint256 public _totalSupply;\n', '\n', '    mapping(address => uint) balances;\n', '    mapping(address => mapping(address => uint)) allowed;\n', '\n', '    /**\n', '     * Constrctor function\n', '     *\n', '     * Initializes contract with initial supply tokens to the creator of the contract\n', '     */\n', '    constructor() public {\n', '        name = "nyan.cat";\n', '        symbol = "NYAN";\n', '        decimals = 9;\n', '        _totalSupply = 1000000000000000000000;\n', '\n', '        balances[msg.sender] = _totalSupply;\n', '        emit Transfer(address(0), msg.sender, _totalSupply);\n', '    }\n', '\n', '    function totalSupply() public view returns (uint) {\n', '        return _totalSupply  - balances[address(0)];\n', '    }\n', '\n', '    function balanceOf(address tokenOwner) public view returns (uint balance) {\n', '        return balances[tokenOwner];\n', '    }\n', '\n', '    function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\n', '        return allowed[tokenOwner][spender];\n', '    }\n', '\n', '    function approve(address spender, uint tokens) public returns (bool success) {\n', '        allowed[msg.sender][spender] = tokens;\n', '        emit Approval(msg.sender, spender, tokens);\n', '        return true;\n', '    }\n', '\n', '    function transfer(address to, uint tokens) public returns (bool success) {\n', '        balances[msg.sender] = safeSub(balances[msg.sender], tokens);\n', '        balances[to] = safeAdd(balances[to], tokens);\n', '        emit Transfer(msg.sender, to, tokens);\n', '        return true;\n', '    }\n', '\n', '    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\n', '        balances[from] = safeSub(balances[from], tokens);\n', '        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);\n', '        balances[to] = safeAdd(balances[to], tokens);\n', '        emit Transfer(from, to, tokens);\n', '        return true;\n', '        \n', '    }\n', '}']