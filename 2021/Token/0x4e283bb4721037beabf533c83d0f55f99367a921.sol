['/**\n', ' *Submitted for verification at Etherscan.io on 2021-03-02\n', '*/\n', '\n', 'pragma solidity ^0.5.0;\n', '\n', '                                                                                                                                                       \n', '//                                                  ..`                                                                                                 \n', '//                                      `          .yoo.yy.                                                                                             \n', '//                             -o-//+syyh/:::--..`  :dosy.                -ys.`oy+                                                                      \n', '//                             /NmNNNNNNd`````..-:/::ooy//------.......````+ysoh-`                                                                      \n', '//                             ommmNNMMMd`            ````````........-::://+os+:::---...oyo/::+-                                                       \n', '//                             ydMMMMMMNh-.`                                  `````......:/:://so:/o+                                                   \n', '//                             oydMMMdyhmdd+:::://+oo+::::------.......```                      ``.+h                                                   \n', '//                             `.-/ymhmNNNN-     -hmmNmNNmdhhmmmdddddmmdhdhhhhyooooo//:--..``   `` /h                                                   \n', '//                                 +MNNNMMN-      o+.-oN+/:..-://////ossyhhdmmNNNMMMMNmmmyh::/::y+/+o                                                   \n', '//                                 /NNNNMMN-      o+  -m.                ```..h/-:ommNNNMhd-    h-``                                                    \n', '//                                 /NMNNMMN-      o+  -m.                    `h-  .dhNMMMdd/    h-                                                      \n', '//                                 /MMmmMMNo      o+  -N/                    `h-  `hNMMMMNd:   `h.                                                      \n', '//                                 +NMNNMMNs      o+  -No                    `h-  .mNMMMMmd:   -y`                                                      \n', '//                                `ydMNMMMms      o+  -No                    `h-  .NNMMMmNN:   -h`                                                      \n', '//                                 ydMMNMMNs      o+  .mo     `.` `-.        `h-  .NMMMNmMN:   -h`                                                      \n', '//                                `ymMMmMMms      o+  `do     +ss:yy/        `h-  .mMMMNMMm:   -h`                                                      \n', '//                                `hNNmMMMms      o+  `do     `:mhh-h/       `h:  .mNdmmNNh:   `h-                                                      \n', '//                                `hMmyMMMms      oo:::ys:::-..+h+++ms```````.dh``-dmmNNMMN:    h-                                                      \n', '//                                .mMmhMMMds      o+```````.-...-:--::::::::::++:::/oosyhdd`    h-                                                      \n', '//                                .NMNmMMMds      o+                                     .h`    h-                                                      \n', '//                                .NMMMMMMhs      o+                                     `h`    h-                                                      \n', '//                                :MMMMMMMos      o+                                     `d`    h-                                                      \n', '//                                oMMMMMMMos      o+                                     `h`    h-                                                      \n', '//                                oMMMNMMMos     `y-                                     `h`   .h`                                                      \n', '//                                oMMMNMMMMs     `h.                                     `h`   -h`                                                      \n', '//                                oMMMMMMMMh` `/`-dssssssssso+ossys+oosyo++++ooo/:+osoys+/h`   -h`                                                      \n', '//                                oMMMMMMMM+  .d///``````````` `.m/-d+.``...-:--:::-:sNMMMNdh: -y`                                                      \n', '//                                oMMMMMMMMo  +o               oo:/NMNdo             /dMMMMMMd`-h`                                                      \n', '//                                oMMMMMMMM+  +o              /y` .NNy:ss/           /mMNMMMMm.-h`                                                      \n', '//                                +MMNMMMMN-  +o              /s///+:-`-oo           /NMMMNNNm.-h`                                                      \n', '//                                .NMMMMMMN-  o+              os-`-oss+:`            /NMmhdmNM/-h`                                                      \n', '//                                .NMMMMMMd` `y-             :hmNmo/++++///:-.`      /MNhhmMMMs`h-                                                      \n', '//                                .NMMMMNMh` `d:             sMMNm:```-:os+++/////--./NMNNNMNMo h-                                                      \n', '//                                .NMMMMMMh` `h:             sNNNN/     :y``-:////:::+shNMNmNN+ h-                                                      \n', '//                                .NMMMMMMh` `y-             sNNNN+     -h     ``.:/ssossyso+o+`o:`.---.`                                               \n', '//                                `mMMMMMMd`  :///`          sysdNy     -y        `ss/oss+ohsoo+h+hs+osss//-`                                           \n', '//                    /o+s`       `dMMMMMMN`    `++          smmmhy     -y        +d+/+//.so`.:yhoh-/`:`/++oso+:-.`                                     \n', '//                   `os+h        `dMMMMMMN`     :s          sNmmdy`````/h.......-smhyysssm+   .odsos+o+:-.+-o-+/yoy+/:`                                \n', '//                 .ydmNNNys-....--dMMMMMNN`     :d:-://:////ssoooo//++/oo:://////+ososhmdNy    +y```.-/osyss/:-:/`-:/sss+:-.`                          \n', '//                 `hmNNNMMMmmmdhy+dmMMMMMN.     :hosyo++oyyyyyyhddddmhyhdddmdhdmmmNNNNMNNdh    +y       `.-:/oyyhyod+/-//+/+ooo/-`                     \n', '//                 `yMNNMMMMMMMNNm+hMMMNMMN-     :hmMMMMMNmNMNmMMMMMNNNNMMMMMNNNNNNNNMMmNmNy    +y             `..-/syyyhssy:---:+ho                    \n', '//                 :sdmNmmmmNdNNmmddMMMNMMm-     :mdhddddddyyyshNMMdhdNNdo+:::::---+NmmdNmyh    os                     ``.-:/+oosoy.                    \n', '//                   .NN+o+.-:/o+shmMMMNMMd.     :y.```````    `:oymydN+.          :mmNNMMNy    h:                              ```                     \n', '//                   `NN+o+       `hMMMMMNh`     :y               -msym.           `yNMMMMMd`   h/                                                      \n', '//                   .NN+s+       `hMMMMMNh`     .h`              ohoyN-            .yhNMMMMs   +s                                                      \n', '//                   :Nmoso       `hMMMMMNy`  `--o/            ``-ddosdo-``........` `/NmMMM+   +y                                                      \n', '//                   +Ndyso       `hMMMMMNh`  -m/-``:--://+ooooo+oyd+++sd/:////+//+oo+oNymNM+   +y                                                      \n', '//                   +Nhmso       `hMMMMMdh`  .doyhymy/:-.``````..-/++++////+///+/+oosyhddmN/   +y                                                      \n', '//                   +Mhdso        yMMMMMNh`  .mmyNMMNdmhs/////++///:::::-.........```````.m:   +y                                                      \n', '//                   +Mddso        +MMMMMNh`  .mmmNNNMNNNN:           `           ````````-ho   +mo//+::-.``                                            \n', '//                   +Mhdso        +MMMMMNh`  .mohsssdmNNNy::/+++++++ooooooooooossssssssssos+:::smoosyhhhddhoooooo/-..```                               \n', '//                   +Nddso        +MMMMMMh`  .Nsdysoooymdo/:-----://:::::::::+ooo++++++++/:::://:...:/osydhoooosyys//+om-                              \n', '//                   +Nyhho        /NMNNMMy   .mhdmNNmdhssyyyhhyyso:--...```.``````..-///++ooooo+++++::-........://////omh                              \n', '//                   +Myymo        .mMNNMN:   .dso-/oydmNNMNmdhysssso+osso+///+++o+++/---.---.-//+oooooo+oo+++++:-:::://oh                              \n', '//                   +M+ydhs+/--.` /dNMMMMo   `yo+yyosssyyyyshhdmNNMmhyo/::--/oooooooooooo++++/---.`....:///oooooooooo+/oh                              \n', '//                  .sd-:ymm+yyyo//ommMMMMy    yssyo+oyo/osysh+dssdhddmmNNNo-.:::-+ooooooooooooooooo+///:--.````    `/syyh:                             \n', '//                 .ddmhdmmh/-++shoymmMMMM+    yysy/oy//so+++/+:/+/ooossms////-..-` ` ````--/--`                 -yshMMddNyo                            \n', '//                 ym+++shsssoo+s+/:mNMMMM/    yyoymmNdyhsy/s/o/.o+o/+::m+              :dNmdsh/                 +dyhmmmmNhmyy:--``                     \n', '//                 -dyyss:+soysysyosdmMMMM+    +do++o:+hshmddmNdhyhsh+s+d+            :+dNNmmN/h.`.-://+oooooooooooo:/oosymNsmyooyyyysso+:-.`           \n', '//                  `-dNdmdyh+oy-oyyNNMMMMd`  `od++:-+/./o+/-o//hysdmhdNNh.-----:/++++smmNNNmhhmyd//:...````            ```.....::oymNmmmNmNs           \n', '//                   `mN/h--+oyyhs./dNMMMMh`   :m::+:///++-/+./+-:+/:+/odhyhysso+-......`..:+ohNsd.       `...-:/+++++oooooooo+////:-://oNdNN:          \n', '//                   .NN-h.    `.:oydNMMMMy   `ymhs+o-:o-:o:/+:/+::+::+:-//-:/-/o/+o++s+/:.`` `--.`-:/+oooo+++::......`.--.::++sssyyhyssyhNMN:          \n', '//                   /mN-d.        /ymMMMMs   `odddhsys/s/:o://-/+-:+-./:./:.-+:.-//++-+o/smmhhhdso/:-.....:::++oyydddyhhdhsso+++/oo+ooo+yMMN`          \n', '//                   +dN-h.        /hNMNmMs    `.y:`..-:+oyoy+o+-:/:-/--//-:+:-:/:+/-/+++ohMNMNdm//oyhhddhhdhhdhysssosssooo+oo/::-::://+oydhy`          \n', '//                   +dN-o/        /dMMNNM+      y:       `.::++ss+/s//+-//-:+:///://:+++/+MMMMMdssooossooo++/:::-.-..--::/+smysoody/:-.````            \n', '//                   +dN-o+        /dMMMMM+      y-             ``.:mNmdhs+y//+///::++o/:/sMMMMM+:-...````.-:://+oooo+//::-.+NN/``d:                    \n', '//                   +dN-o+        /dMMMMM+     .h`                `dMNM:.-:/ooy+:+doo-+/.+MMMNN.`-:/++yds/:ohy/.``         /Nm/ `d:                    \n', '//                   +dN-o+        /mMMMMM+     `h.                `dNNM:     `.-:odhyyy/ssNMMNdo+/:-.`hN/  /ys-            -Nhs `d:                    \n', '//                   +dN/o+        :dNMMMM/     `h:                `dNMM:          :mNMMMmmhd+/:hs.    oM/  /yy:            .mmh `d:                    \n', '//                   +dMoo+        `dmMMMM/     .m:                `hmMM:          :MMMNNmh`.   dys    +Mo  /yy-            .mNh `d:                    \n', '//                   +mNso+        `mNMMMM/     sN/                `dmNM:          :NMMNNmh`    hdo    +Md` /yy-            .mNh `d:                    \n', '//                   +Nmoo+        .mmMMMM/     +N:                `hmmMo          :NNMNMNd`    +M+    /Md` :hy:            .mmh `d:                    \n', '//                   +Mdoo+        /hNMMMM+     .m:                `hsMMh`         :dNMNMNy     +M+    /Nd` `mh:            `dsh``h:                    \n', '//                   +Mdoo+        /dMMMMNy`     h/              ``.ymMMm`         `dNMMMMs     /M+    .md` `mh:             ssd. oo                    \n', '//                   +Mdoo+        +mMMMMNh`    `d:     ``..--/+ooyhdmMMh`         `dNMMMMs     .N/    .md` `moo             ssh/ +y                    \n', '//                   +Mmoo+        oNMMMMNy`    -m:-:/++ooosyhhddhyysyddhs/-.      `hdMMMNs     .m.    .md` `m+s             ssso +s                    \n', '//                   oNhoo+      ``ymMMMMNh`  `.oNhhhyhhyyssoosssyyyssso+oooho/.`  `smNMMms     .m.    .mm- `m+s             +yso +s                    \n', '//                  `dmd+so--/+ssyyhMMMMMNh`  .-oMyso+ssosoo+o++/++oo++//+ooooo+so/sdNMMNhy`    .m.    .dN- `my+             -dy+ +y                    \n', '//               `:/sdNNymNNNMMNNNmyMMMMMNh`   .+Nho++/:+//++osooo+///::/o+o+++++//+ohmNNmN-    -yo:   .mN-  sm+             -mm. +y                    \n', '//              `yNMmdNMNNNmNNmddhhdMMMMMNh`     hhsssoo++/++//+++++ooosooo/+osysso+o/+yssms-`    .so` `hN:  oms             -mN. +y                    \n', '//             `oNNNNMNMMNMmhyyyyyymMMMMMNh`     hy+//////+++o++/////++++/+ooo+/:///+/++/oomNy-    `/h- /M+  oms             -mN. .m`                   \n', '//              `-+smmhmNMMMmddhysomMMMMMNh`     hy+/////++o+////:+o+o+///:::/+osyyo+//--`.mMmm-     +h`:My  -N:              dN. .m`                   \n', '//                  ./ymNMMMMNdmdyyNhNNMMdh-     yy///////::://///+///+++oyhyo/-`   ``-/+dhMNNmd.    `h/:Ny  `do              hN/ `m`                   \n', '//                     ./hNMNmmmMMmMMNhNMhy-     /d::////+////++oossso++/:.```.-:++oooo+sydNmMNNd:/++oh+-mm`  yy              +Mo `d-                   \n', '//                        :ymNNNNMNNMMNMNmm:`.:oyyd+`:++osysso++/:-.````./oooo+/-.`       `.:/odmmo/-``  dN.  +h              /Mo  y+                   \n', '//                          `:sdNNNdMMMMMMMmo/:::-.ydyo+:-.```.-/+ooooo+/-`                     ``      .dh+  +h              -Ns  y+                   \n', '//                              -sNNNMNNMMMMy`      ss`../oooo+:.``                                     :hy+  +h              `md` y+                   \n', '//                                `/smNNMMNMMy`     `hd:-.`                                              dm+  +h              `mh` so                   \n', '//                                   `:+dMMNNNo      :m`                                                 dm+  +d`              ys  :d                   \n', '//                                      `:shmNm.:/oshdh`                                                 dhs  /N-              sm` :d                   \n', '//                                          .+yd+-..```                                                  doh` /N.              sm` `d-                  \n', '//                                             ``                                                        dm+  sm`              /m. .do/`                \n', '//                                                                                                       dN+  +h           .-//yMdhmdhm.                \n', '//                                                                                                       dN+  +h    ``-/+sddmmdhhs/-`.d-                \n', '//                                                                                                       dN+  sd-:+yhhddhys+:-```    .d-                \n', '//                                                                                                     ./mM+/sdNdmdhso/-.`        `.:sd`                \n', '//                                                                                                     /mNNNyhyys/-.``        `.:++o+::/                 \n', '//                                                                                                    `yMMy/-.``         `.-/o+/-.``                     \n', '//                                                                                                     oMMo        `.-:/+/:-.`                           \n', '//                                                                                                     sMMh```.-:///:-.``                                \n', '//                                                                                                    .+hh+//:-.`                                       \n', '//                                                                                                      `.`                                             \n', '                                                                                                                         \n', '                                                                                                                                                      \n', '                                                                                                                                                                                                                                                          \n', '\n', '/*\n', ' * @dev Provides information about the current execution context, including the\n', ' * sender of the transaction and its data. While these are generally available\n', ' * via msg.sender and msg.data, they should not be accessed in such a direct\n', ' * manner, since when dealing with GSN meta-transactions the account sending and\n', ' * paying for execution may not be the actual sender (as far as an application\n', ' * is concerned).\n', ' *\n', ' * This contract is only required for intermediate, library-like contracts.\n', ' */\n', 'contract Context {\n', '    // Empty internal constructor, to prevent people from mistakenly deploying\n', '    // an instance of this contract, which should be used via inheritance.\n', '    constructor () internal { }\n', '    // solhint-disable-previous-line no-empty-blocks\n', '\n', '    function _msgSender() internal view returns (address payable) {\n', '        return msg.sender;\n', '    }\n', '\n', '    function _msgData() internal view returns (bytes memory) {\n', '        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n', '        return msg.data;\n', '    }\n', '}\n', '\n', '// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n', '\n', 'pragma solidity ^0.5.0;\n', '\n', '/**\n', ' * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n', ' * the optional functions; to access them see {ERC20Detailed}.\n', ' */\n', 'interface IERC20 {\n', '    /**\n', '     * @dev Returns the amount of tokens in existence.\n', '     */\n', '    function totalSupply() external view returns (uint256);\n', '\n', '    /**\n', '     * @dev Returns the amount of tokens owned by `account`.\n', '     */\n', '    function balanceOf(address account) external view returns (uint256);\n', '\n', '    /**\n', "     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n", '     *\n', '     * Returns a boolean value indicating whether the operation succeeded.\n', '     *\n', '     * Emits a {Transfer} event.\n', '     */\n', '    function transfer(address recipient, uint256 amount) external returns (bool);\n', '\n', '    /**\n', '     * @dev Returns the remaining number of tokens that `spender` will be\n', '     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n', '     * zero by default.\n', '     *\n', '     * This value changes when {approve} or {transferFrom} are called.\n', '     */\n', '    function allowance(address owner, address spender) external view returns (uint256);\n', '\n', '    /**\n', "     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n", '     *\n', '     * Returns a boolean value indicating whether the operation succeeded.\n', '     *\n', '     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n', '     * that someone may use both the old and the new allowance by unfortunate\n', '     * transaction ordering. One possible solution to mitigate this race\n', "     * condition is to first reduce the spender's allowance to 0 and set the\n", '     * desired value afterwards:\n', '     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n', '     *\n', '     * Emits an {Approval} event.\n', '     */\n', '    function approve(address spender, uint256 amount) external returns (bool);\n', '\n', '    /**\n', '     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n', "     * allowance mechanism. `amount` is then deducted from the caller's\n", '     * allowance.\n', '     *\n', '     * Returns a boolean value indicating whether the operation succeeded.\n', '     *\n', '     * Emits a {Transfer} event.\n', '     */\n', '    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n', '\n', '    /**\n', '     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n', '     * another (`to`).\n', '     *\n', '     * Note that `value` may be zero.\n', '     */\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '\n', '    /**\n', '     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n', '     * a call to {approve}. `value` is the new allowance.\n', '     */\n', '    event Approval(address indexed owner, address indexed spender, uint256 value);\n', '}\n', '\n', '// File: @openzeppelin/contracts/math/SafeMath.sol\n', '\n', 'pragma solidity ^0.5.0;\n', '\n', '/**\n', " * @dev Wrappers over Solidity's arithmetic operations with added overflow\n", ' * checks.\n', ' *\n', ' * Arithmetic operations in Solidity wrap on overflow. This can easily result\n', ' * in bugs, because programmers usually assume that an overflow raises an\n', ' * error, which is the standard behavior in high level programming languages.\n', ' * `SafeMath` restores this intuition by reverting the transaction when an\n', ' * operation overflows.\n', ' *\n', ' * Using this library instead of the unchecked operations eliminates an entire\n', " * class of bugs, so it's recommended to use it always.\n", ' */\n', 'library SafeMath {\n', '    /**\n', '     * @dev Returns the addition of two unsigned integers, reverting on\n', '     * overflow.\n', '     *\n', "     * Counterpart to Solidity's `+` operator.\n", '     *\n', '     * Requirements:\n', '     * - Addition cannot overflow.\n', '     */\n', '    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        uint256 c = a + b;\n', '        require(c >= a, "SafeMath: addition overflow");\n', '\n', '        return c;\n', '    }\n', '\n', '    /**\n', '     * @dev Returns the subtraction of two unsigned integers, reverting on\n', '     * overflow (when the result is negative).\n', '     *\n', "     * Counterpart to Solidity's `-` operator.\n", '     *\n', '     * Requirements:\n', '     * - Subtraction cannot overflow.\n', '     */\n', '    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        return sub(a, b, "SafeMath: subtraction overflow");\n', '    }\n', '\n', '    /**\n', '     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n', '     * overflow (when the result is negative).\n', '     *\n', "     * Counterpart to Solidity's `-` operator.\n", '     *\n', '     * Requirements:\n', '     * - Subtraction cannot overflow.\n', '     *\n', '     * _Available since v2.4.0._\n', '     */\n', '    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n', '        require(b <= a, errorMessage);\n', '        uint256 c = a - b;\n', '\n', '        return c;\n', '    }\n', '\n', '    /**\n', '     * @dev Returns the multiplication of two unsigned integers, reverting on\n', '     * overflow.\n', '     *\n', "     * Counterpart to Solidity's `*` operator.\n", '     *\n', '     * Requirements:\n', '     * - Multiplication cannot overflow.\n', '     */\n', '    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n', "        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n", "        // benefit is lost if 'b' is also tested.\n", '        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n', '        if (a == 0) {\n', '            return 0;\n', '        }\n', '\n', '        uint256 c = a * b;\n', '        require(c / a == b, "SafeMath: multiplication overflow");\n', '\n', '        return c;\n', '    }\n', '\n', '    /**\n', '     * @dev Returns the integer division of two unsigned integers. Reverts on\n', '     * division by zero. The result is rounded towards zero.\n', '     *\n', "     * Counterpart to Solidity's `/` operator. Note: this function uses a\n", '     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n', '     * uses an invalid opcode to revert (consuming all remaining gas).\n', '     *\n', '     * Requirements:\n', '     * - The divisor cannot be zero.\n', '     */\n', '    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        return div(a, b, "SafeMath: division by zero");\n', '    }\n', '\n', '    /**\n', '     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n', '     * division by zero. The result is rounded towards zero.\n', '     *\n', "     * Counterpart to Solidity's `/` operator. Note: this function uses a\n", '     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n', '     * uses an invalid opcode to revert (consuming all remaining gas).\n', '     *\n', '     * Requirements:\n', '     * - The divisor cannot be zero.\n', '     *\n', '     * _Available since v2.4.0._\n', '     */\n', '    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n', '        // Solidity only automatically asserts when dividing by 0\n', '        require(b > 0, errorMessage);\n', '        uint256 c = a / b;\n', "        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n", '\n', '        return c;\n', '    }\n', '\n', '    /**\n', '     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n', '     * Reverts when dividing by zero.\n', '     *\n', "     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n", '     * opcode (which leaves remaining gas untouched) while Solidity uses an\n', '     * invalid opcode to revert (consuming all remaining gas).\n', '     *\n', '     * Requirements:\n', '     * - The divisor cannot be zero.\n', '     */\n', '    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        return mod(a, b, "SafeMath: modulo by zero");\n', '    }\n', '\n', '    /**\n', '     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n', '     * Reverts with custom message when dividing by zero.\n', '     *\n', "     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n", '     * opcode (which leaves remaining gas untouched) while Solidity uses an\n', '     * invalid opcode to revert (consuming all remaining gas).\n', '     *\n', '     * Requirements:\n', '     * - The divisor cannot be zero.\n', '     *\n', '     * _Available since v2.4.0._\n', '     */\n', '    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n', '        require(b != 0, errorMessage);\n', '        return a % b;\n', '    }\n', '}\n', '\n', '// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n', '\n', 'pragma solidity ^0.5.0;\n', '\n', '\n', '\n', '\n', '/**\n', ' * @dev Implementation of the {IERC20} interface.\n', ' *\n', ' * This implementation is agnostic to the way tokens are created. This means\n', ' * that a supply mechanism has to be added in a derived contract using {_mint}.\n', ' * For a generic mechanism see {ERC20Mintable}.\n', ' *\n', ' * TIP: For a detailed writeup see our guide\n', ' * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n', ' * to implement supply mechanisms].\n', ' *\n', ' * We have followed general OpenZeppelin guidelines: functions revert instead\n', ' * of returning `false` on failure. This behavior is nonetheless conventional\n', ' * and does not conflict with the expectations of ERC20 applications.\n', ' *\n', ' * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n', ' * This allows applications to reconstruct the allowance for all accounts just\n', ' * by listening to said events. Other implementations of the EIP may not emit\n', " * these events, as it isn't required by the specification.\n", ' *\n', ' * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n', ' * functions have been added to mitigate the well-known issues around setting\n', ' * allowances. See {IERC20-approve}.\n', ' */\n', 'contract ERC20 is Context, IERC20 {\n', '    using SafeMath for uint256;\n', '\n', '    mapping (address => uint256) private _balances;\n', '\n', '    mapping (address => mapping (address => uint256)) private _allowances;\n', '\n', '    uint256 private _totalSupply;\n', '\n', '    /**\n', '     * @dev See {IERC20-totalSupply}.\n', '     */\n', '    function totalSupply() public view returns (uint256) {\n', '        return _totalSupply;\n', '    }\n', '\n', '    /**\n', '     * @dev See {IERC20-balanceOf}.\n', '     */\n', '    function balanceOf(address account) public view returns (uint256) {\n', '        return _balances[account];\n', '    }\n', '\n', '    /**\n', '     * @dev See {IERC20-transfer}.\n', '     *\n', '     * Requirements:\n', '     *\n', '     * - `recipient` cannot be the zero address.\n', '     * - the caller must have a balance of at least `amount`.\n', '     */\n', '    function transfer(address recipient, uint256 amount) public returns (bool) {\n', '        _transfer(_msgSender(), recipient, amount);\n', '        return true;\n', '    }\n', '\n', '    /**\n', '     * @dev See {IERC20-allowance}.\n', '     */\n', '    function allowance(address owner, address spender) public view returns (uint256) {\n', '        return _allowances[owner][spender];\n', '    }\n', '\n', '    /**\n', '     * @dev See {IERC20-approve}.\n', '     *\n', '     * Requirements:\n', '     *\n', '     * - `spender` cannot be the zero address.\n', '     */\n', '    function approve(address spender, uint256 amount) public returns (bool) {\n', '        _approve(_msgSender(), spender, amount);\n', '        return true;\n', '    }\n', '\n', '    /**\n', '     * @dev See {IERC20-transferFrom}.\n', '     *\n', '     * Emits an {Approval} event indicating the updated allowance. This is not\n', '     * required by the EIP. See the note at the beginning of {ERC20};\n', '     *\n', '     * Requirements:\n', '     * - `sender` and `recipient` cannot be the zero address.\n', '     * - `sender` must have a balance of at least `amount`.\n', "     * - the caller must have allowance for `sender`'s tokens of at least\n", '     * `amount`.\n', '     */\n', '    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n', '        _transfer(sender, recipient, amount);\n', '        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, "ERC20: transfer amount exceeds allowance"));\n', '        return true;\n', '    }\n', '\n', '    /**\n', '     * @dev Atomically increases the allowance granted to `spender` by the caller.\n', '     *\n', '     * This is an alternative to {approve} that can be used as a mitigation for\n', '     * problems described in {IERC20-approve}.\n', '     *\n', '     * Emits an {Approval} event indicating the updated allowance.\n', '     *\n', '     * Requirements:\n', '     *\n', '     * - `spender` cannot be the zero address.\n', '     */\n', '    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n', '        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n', '        return true;\n', '    }\n', '\n', '    /**\n', '     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n', '     *\n', '     * This is an alternative to {approve} that can be used as a mitigation for\n', '     * problems described in {IERC20-approve}.\n', '     *\n', '     * Emits an {Approval} event indicating the updated allowance.\n', '     *\n', '     * Requirements:\n', '     *\n', '     * - `spender` cannot be the zero address.\n', '     * - `spender` must have allowance for the caller of at least\n', '     * `subtractedValue`.\n', '     */\n', '    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n', '        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, "ERC20: decreased allowance below zero"));\n', '        return true;\n', '    }\n', '\n', '    /**\n', '     * @dev Moves tokens `amount` from `sender` to `recipient`.\n', '     *\n', '     * This is internal function is equivalent to {transfer}, and can be used to\n', '     * e.g. implement automatic token fees, slashing mechanisms, etc.\n', '     *\n', '     * Emits a {Transfer} event.\n', '     *\n', '     * Requirements:\n', '     *\n', '     * - `sender` cannot be the zero address.\n', '     * - `recipient` cannot be the zero address.\n', '     * - `sender` must have a balance of at least `amount`.\n', '     */\n', '    function _transfer(address sender, address recipient, uint256 amount) internal {\n', '        require(sender != address(0), "ERC20: transfer from the zero address");\n', '        require(recipient != address(0), "ERC20: transfer to the zero address");\n', '\n', '        _balances[sender] = _balances[sender].sub(amount, "ERC20: transfer amount exceeds balance");\n', '        _balances[recipient] = _balances[recipient].add(amount);\n', '        emit Transfer(sender, recipient, amount);\n', '    }\n', '\n', '    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n', '     * the total supply.\n', '     *\n', '     * Emits a {Transfer} event with `from` set to the zero address.\n', '     *\n', '     * Requirements\n', '     *\n', '     * - `to` cannot be the zero address.\n', '     */\n', '    function _mint(address account, uint256 amount) internal {\n', '        require(account != address(0), "ERC20: mint to the zero address");\n', '\n', '        _totalSupply = _totalSupply.add(amount);\n', '        _balances[account] = _balances[account].add(amount);\n', '        emit Transfer(address(0), account, amount);\n', '    }\n', '\n', '    /**\n', '     * @dev Destroys `amount` tokens from `account`, reducing the\n', '     * total supply.\n', '     *\n', '     * Emits a {Transfer} event with `to` set to the zero address.\n', '     *\n', '     * Requirements\n', '     *\n', '     * - `account` cannot be the zero address.\n', '     * - `account` must have at least `amount` tokens.\n', '     */\n', '    function _burn(address account, uint256 amount) internal {\n', '        require(account != address(0), "ERC20: burn from the zero address");\n', '\n', '        _balances[account] = _balances[account].sub(amount, "ERC20: burn amount exceeds balance");\n', '        _totalSupply = _totalSupply.sub(amount);\n', '        emit Transfer(account, address(0), amount);\n', '    }\n', '\n', '    /**\n', '     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n', '     *\n', '     * This is internal function is equivalent to `approve`, and can be used to\n', '     * e.g. set automatic allowances for certain subsystems, etc.\n', '     *\n', '     * Emits an {Approval} event.\n', '     *\n', '     * Requirements:\n', '     *\n', '     * - `owner` cannot be the zero address.\n', '     * - `spender` cannot be the zero address.\n', '     */\n', '    function _approve(address owner, address spender, uint256 amount) internal {\n', '        require(owner != address(0), "ERC20: approve from the zero address");\n', '        require(spender != address(0), "ERC20: approve to the zero address");\n', '\n', '        _allowances[owner][spender] = amount;\n', '        emit Approval(owner, spender, amount);\n', '    }\n', '\n', '    /**\n', '     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n', "     * from the caller's allowance.\n", '     *\n', '     * See {_burn} and {_approve}.\n', '     */\n', '    function _burnFrom(address account, uint256 amount) internal {\n', '        _burn(account, amount);\n', '        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, "ERC20: burn amount exceeds allowance"));\n', '    }\n', '}\n', '\n', '// File: @openzeppelin/contracts/token/ERC20/ERC20Detailed.sol\n', '\n', 'pragma solidity ^0.5.0;\n', '\n', '\n', '/**\n', ' * @dev Optional functions from the ERC20 standard.\n', ' */\n', 'contract ERC20Detailed is IERC20 {\n', '    string private _name;\n', '    string private _symbol;\n', '    uint8 private _decimals;\n', '\n', '    /**\n', '     * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\n', '     * these values are immutable: they can only be set once during\n', '     * construction.\n', '     */\n', '    constructor (string memory name, string memory symbol, uint8 decimals) public {\n', '        _name = name;\n', '        _symbol = symbol;\n', '        _decimals = decimals;\n', '    }\n', '\n', '    /**\n', '     * @dev Returns the name of the token.\n', '     */\n', '    function name() public view returns (string memory) {\n', '        return _name;\n', '    }\n', '\n', '    /**\n', '     * @dev Returns the symbol of the token, usually a shorter version of the\n', '     * name.\n', '     */\n', '    function symbol() public view returns (string memory) {\n', '        return _symbol;\n', '    }\n', '\n', '    /**\n', '     * @dev Returns the number of decimals used to get its user representation.\n', '     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n', '     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n', '     *\n', '     * Tokens usually opt for a value of 18, imitating the relationship between\n', '     * Ether and Wei.\n', '     *\n', '     * NOTE: This information is only used for _display_ purposes: it in\n', '     * no way affects any of the arithmetic of the contract, including\n', '     * {IERC20-balanceOf} and {IERC20-transfer}.\n', '     */\n', '    function decimals() public view returns (uint8) {\n', '        return _decimals;\n', '    }\n', '}\n', '\n', '\n', 'contract news is ERC20, ERC20Detailed {\n', '\n', '    constructor () public ERC20Detailed("Bullish Times", "BTN", 18) {\n', '        _mint(msg.sender, 100000000 * (10 ** uint256(decimals())));\n', '    }\n', '}']