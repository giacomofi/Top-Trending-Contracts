['/**\n', ' *Submitted for verification at Etherscan.io on 2021-05-26\n', '*/\n', '\n', 'pragma solidity ^0.4.24;\n', '\n', '\n', '\n', '\n', '\n', '\n', '// Symbol        : MIAB\n', '\n', '\n', '// Name          : Make It All Back\n', '\n', '\n', '// Total supply  : 100000000000\n', '\n', '\n', '// Decimals      : 18\n', '\n', '\n', '// Owner Account : 0xE289a7b3bc32ba248ef459B0895d0DbD0caF5293\n', '\n', '// Lib: Safe Math\n', '\n', '\n', '// ----------------------------------------------------------------------------\n', '\n', '\n', 'contract SafeMath {\n', '\n', '\n', '\n', '\n', '\n', '    function safeAdd(uint a, uint b) public pure returns (uint c) {\n', '\n', '\n', '        c = a + b;\n', '\n', '\n', '        require(c >= a);\n', '\n', '\n', '    }\n', '\n', '\n', '\n', '\n', '\n', '    function safeSub(uint a, uint b) public pure returns (uint c) {\n', '\n', '\n', '        require(b <= a);\n', '\n', '\n', '        c = a - b;\n', '\n', '\n', '    }\n', '\n', '\n', '\n', '\n', '\n', '    function safeMul(uint a, uint b) public pure returns (uint c) {\n', '\n', '\n', '        c = a * b;\n', '\n', '\n', '        require(a == 0 || c / a == b);\n', '\n', '\n', '    }\n', '\n', '\n', '\n', '\n', '\n', '    function safeDiv(uint a, uint b) public pure returns (uint c) {\n', '\n', '\n', '        require(b > 0);\n', '\n', '\n', '        c = a / b;\n', '\n', '\n', '    }\n', '\n', '\n', '}\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '/**\n', '\n', '\n', 'ERC Token Standard #20 Interface\n', '\n', '\n', 'https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n', '\n', '\n', '*/\n', '\n', '\n', 'contract ERC20Interface {\n', '\n', '\n', '    function totalSupply() public constant returns (uint);\n', '\n', '\n', '    function balanceOf(address tokenOwner) public constant returns (uint balance);\n', '\n', '\n', '    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\n', '\n', '\n', '    function transfer(address to, uint tokens) public returns (bool success);\n', '\n', '\n', '    function approve(address spender, uint tokens) public returns (bool success);\n', '\n', '\n', '    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n', '\n', '\n', '\n', '\n', '\n', '    event Transfer(address indexed from, address indexed to, uint tokens);\n', '\n', '\n', '    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n', '\n', '\n', '}\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '/**\n', '\n', '\n', 'Contract function to receive approval and execute function in one call\n', '\n', '\n', '\n', '\n', '*/\n', '\n', '\n', 'contract ApproveAndCallFallBack {\n', '\n', '\n', '    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\n', '\n', '\n', '}\n', '\n', '\n', '\n', '\n', '\n', '/**\n', '\n', '\n', 'ERC20 Token, with the addition of symbol, name and decimals and assisted token transfers\n', '\n', '\n', '*/\n', '\n', '\n', 'contract MIABToken is ERC20Interface, SafeMath {\n', '\n', '\n', '    string public symbol;\n', '\n', '\n', '    string public  name;\n', '\n', '\n', '    uint8 public decimals;\n', '\n', '\n', '    uint public _totalSupply;\n', '\n', '\n', '\n', '\n', '\n', '    mapping(address => uint) balances;\n', '\n', '\n', '    mapping(address => mapping(address => uint)) allowed;\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '\n', '\n', '    // Constructor\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '\n', '\n', '    constructor() public {\n', '\n', '\n', '        symbol = "MIAB";\n', '\n', '\n', '        name = "Make It All Back";\n', '\n', '\n', '        decimals = 18;\n', '\n', '\n', '        _totalSupply = 100000000000000000000000000000;\n', '\n', '\n', '        balances[0xE289a7b3bc32ba248ef459B0895d0DbD0caF5293] = _totalSupply;\n', '\n', '\n', '        emit Transfer(address(0), 0xE289a7b3bc32ba248ef459B0895d0DbD0caF5293, _totalSupply);\n', '\n', '\n', '    }\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '\n', '\n', '    // Total supply\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '\n', '\n', '    function totalSupply() public constant returns (uint) {\n', '\n', '\n', '        return _totalSupply  - balances[address(0)];\n', '\n', '\n', '    }\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '\n', '\n', '    // Get the token balance for account tokenOwner\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '\n', '\n', '    function balanceOf(address tokenOwner) public constant returns (uint balance) {\n', '\n', '\n', '        return balances[tokenOwner];\n', '\n', '\n', '    }\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '\n', '\n', "    // Transfer the balance from token owner's account to to account\n", '\n', '\n', "    // - Owner's account must have sufficient balance to transfer\n", '\n', '\n', '    // - 0 value transfers are allowed\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '\n', '\n', '    function transfer(address to, uint tokens) public returns (bool success) {\n', '\n', '\n', '        balances[msg.sender] = safeSub(balances[msg.sender], tokens);\n', '\n', '\n', '        balances[to] = safeAdd(balances[to], tokens);\n', '\n', '\n', '        emit Transfer(msg.sender, to, tokens);\n', '\n', '\n', '        return true;\n', '\n', '\n', '    }\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '\n', '\n', '    // Token owner can approve for spender to transferFrom(...) tokens\n', '\n', '\n', "    // from the token owner's account\n", '\n', '\n', '    //\n', '\n', '\n', '    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n', '\n', '\n', '    // recommends that there are no checks for the approval double-spend attack\n', '\n', '\n', '    // as this should be implemented in user interfaces\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '\n', '\n', '    function approve(address spender, uint tokens) public returns (bool success) {\n', '\n', '\n', '        allowed[msg.sender][spender] = tokens;\n', '\n', '\n', '        emit Approval(msg.sender, spender, tokens);\n', '\n', '\n', '        return true;\n', '\n', '\n', '    }\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '\n', '\n', '    // Transfer tokens from the from account to the to account\n', '\n', '\n', '    //\n', '\n', '\n', '    // The calling account must already have sufficient tokens approve(...)-d\n', '\n', '\n', '    // for spending from the from account and\n', '\n', '\n', '    // - From account must have sufficient balance to transfer\n', '\n', '\n', '    // - Spender must have sufficient allowance to transfer\n', '\n', '\n', '    // - 0 value transfers are allowed\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '\n', '\n', '    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\n', '\n', '\n', '        balances[from] = safeSub(balances[from], tokens);\n', '\n', '\n', '        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);\n', '\n', '\n', '        balances[to] = safeAdd(balances[to], tokens);\n', '\n', '\n', '        emit Transfer(from, to, tokens);\n', '\n', '\n', '        return true;\n', '\n', '\n', '    }\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '\n', '\n', '    // Returns the amount of tokens approved by the owner that can be\n', '\n', '\n', "    // transferred to the spender's account\n", '\n', '\n', '    // ------------------------------------------------------------------------\n', '\n', '\n', '    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\n', '\n', '\n', '        return allowed[tokenOwner][spender];\n', '\n', '\n', '    }\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '\n', '\n', '    // Token owner can approve for spender to transferFrom(...) tokens\n', '\n', '\n', "    // from the token owner's account. The spender contract function\n", '\n', '\n', '    // receiveApproval(...) is then executed\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '\n', '\n', '    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\n', '\n', '\n', '        allowed[msg.sender][spender] = tokens;\n', '\n', '\n', '        emit Approval(msg.sender, spender, tokens);\n', '\n', '\n', '        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\n', '\n', '\n', '        return true;\n', '\n', '\n', '    }\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '\n', '    // ------------------------------------------------------------------------\n', '\n', '\n', "    // Don't accept ETH\n", '\n', '\n', '    // ------------------------------------------------------------------------\n', '\n', '\n', '    function () public payable {\n', '\n', '\n', '        revert();\n', '\n', '\n', '    }\n', '\n', '\n', '}']