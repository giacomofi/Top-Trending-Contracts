['/**\n', ' *Submitted for verification at Etherscan.io on 2021-07-04\n', '*/\n', '\n', 'pragma solidity ^0.5.10;\n', '\n', 'interface ISimpleERC20 {\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '    \n', '    function mint(address to, uint amount) external;\n', '    function balanceOf(address account) external view returns (uint);\n', '    function transfer(address to, uint amount) external returns (bool);\n', '}\n', '\n', 'contract CF is ISimpleERC20 {\n', '    string public constant name = "GoldRise";\n', '    string public constant symbol = "GOLDRISE";\n', '    uint8 public constant decimals = 18;\n', '    \n', '    address public minter;\n', '    mapping (address => uint) private _balances;\n', '\n', '    event Transfer(address from, address to, uint amount);\n', '\n', '    constructor() public {\n', '        minter = msg.sender;\n', '    }\n', '    \n', '    function balanceOf(address account) public view returns (uint) {\n', '        return _balances[account];\n', '    }    \n', '\n', '    function mint(address to, uint amount) public {\n', '        require(msg.sender == minter);\n', '        require(amount > 0);\n', '        _balances[to] += amount;\n', '    }\n', '\n', '    function transfer(address to, uint amount) public returns (bool) {\n', '        require(amount <= _balances[msg.sender], "Insufficient balance.");\n', '        _balances[msg.sender] -= amount;\n', '        _balances[to] += amount;\n', '        emit Transfer(msg.sender, to, amount);\n', '        return true;\n', '    }\n', '}']