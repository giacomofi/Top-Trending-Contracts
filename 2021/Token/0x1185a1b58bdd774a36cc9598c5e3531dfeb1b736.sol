['pragma solidity ^0.5.13;\n', 'pragma experimental ABIEncoderV2;\n', '\n', 'import "./ERC20.sol";\n', 'import "./MultiOwned.sol";\n', 'import "./ERC20Burnable.sol";\n', 'import "./ERC20Mintable.sol";\n', 'import "./XAudTokenConfig.sol";\n', '\n', '\n', '\n', '\n', 'contract XAudToken is XAudTokenConfig, ERC20Burnable, ERC20Mintable {\n', '\n', '    constructor()\n', '        MultiOwned(\n', '            makeAddressSingleton(msg.sender),\n', '            1)\n', '        ERC20(\n', '            TOKEN_NAME,\n', '            TOKEN_SYMBOL,\n', '            TOKEN_DECIMALS,\n', '            TOKEN_INITIALSUPPLY)\n', '        ERC20Mintable(\n', '            TOKEN_MINTCAPACITY,\n', '            TOKEN_MINTPERIOD)\n', '        public\n', '    {}\n', '}']