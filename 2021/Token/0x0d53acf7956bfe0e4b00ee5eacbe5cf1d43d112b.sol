['/**\n', ' *Submitted for verification at Etherscan.io on 2021-03-31\n', '*/\n', '\n', '// SPDX-License-Identifier: GPL-3.0\n', '\n', 'pragma solidity >=0.7.0 <0.9.0;\n', '\n', 'interface IERC20 {\n', '\n', '    /**\n', '     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n', "     * allowance mechanism. `amount` is then deducted from the caller's\n", '     * allowance.\n', '     *\n', '     * Returns a boolean value indicating whether the operation succeeded.\n', '     *\n', '     * Emits a {Transfer} event.\n', '     */\n', '    function transferFrom(\n', '        address sender,\n', '        address recipient,\n', '        uint256 amount\n', '    ) external returns (bool);\n', '\n', '}\n', '\n', '\n', '/** \n', ' * @title Ballot\n', ' * @dev Implements voting process along with vote delegation\n', ' */\n', 'contract BatchTransfer {\n', '    \n', '    function batchTransfer(address token, address[] calldata toList, uint256[] calldata amountList)\n', '        external\n', '    {\n', '        require(toList.length == amountList.length, "batch transfer length not match");\n', '        \n', '        for (uint256 i = 0; i < toList.length; ++i) {\n', '            IERC20(token).transferFrom(msg.sender, toList[i], amountList[i]);\n', '        }\n', '    }\n', '   \n', '}']