['// SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity ^0.7.3;\n', '\n', 'import "./IBasket.sol";\n', '\n', 'import "./BMIZapper.sol";\n', '\n', 'contract BMIBurner is BMIZapper {\n', '    using SafeERC20 for IERC20;\n', '\n', '    constructor() {}\n', '\n', '    function burnBMIToUSDC(uint256 _amount, uint256 _minRecv) public returns (uint256) {\n', '        // Burn BMI\n', '        IERC20(BMI).safeTransferFrom(msg.sender, address(this), _amount);\n', '        (address[] memory constituients, ) = IBasket(BMI).getAssetsAndBalances();\n', '        IBasket(BMI).burn(_amount);\n', '\n', '        // Convert BMI\n', '        for (uint256 i = 0; i < constituients.length; i++) {\n', '            _fromBMIConstituentToUSDC(constituients[i], IERC20(constituients[i]).balanceOf(address(this)));\n', '        }\n', '        uint256 usdcBal = IERC20(USDC).balanceOf(address(this));\n', '        require(usdcBal >= _minRecv, "!min-usdc");\n', '        IERC20(USDC).safeTransfer(msg.sender, usdcBal);\n', '\n', '        return usdcBal;\n', '    }\n', '}']