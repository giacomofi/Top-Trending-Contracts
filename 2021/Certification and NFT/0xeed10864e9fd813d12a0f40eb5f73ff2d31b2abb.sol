['// SPDX-License-Identifier: MIT\n', 'pragma solidity ^0.8.0;\n', '\n', 'import "ERC721.sol";\n', '\n', '\n', 'contract THE_MAN_WHO_SOLD_THE_WORLD is ERC721 {\n', ' \n', '\n', '    string this_base_uri;\n', '    address this_owner;\n', '    \n', '    constructor() ERC721("THE_MAN_WHO_SOLD_THE_WORLD", "WORLD") {\n', '         this_owner = msg.sender;\n', '         this_base_uri = "https://the-man-who-sold-the-world.com/metadata.php?id=";\n', '    }\n', '    \n', '    function _baseURI() internal view override returns (string memory) {\n', '        return this_base_uri;\n', '    }\n', '    \n', '    function set_new_base_uri(string calldata new_base_uri)external{\n', '        require(this_owner ==  msg.sender,"you are not allowed");\n', '        this_base_uri = new_base_uri;\n', '    }\n', '\n', '   function claimPlot(uint16 token_id) external payable  {\n', '        require(msg.value >= .01 ether , "price is too small");\n', '        require(token_id>0 && token_id<10001,"token out of bounds");\n', '       _safeMint(msg.sender, token_id);\n', '       payable(this_owner).transfer(msg.value);\n', '    }\n', '    \n', '    function premint(uint16[5] calldata token_ids ) external {\n', '        require(this_owner ==  msg.sender,"you are not allowed");\n', '        for (uint i = 0;i<5;i++){\n', '            _safeMint(msg.sender, token_ids[i]);\n', '        }\n', '    }\n', '\n', '}']