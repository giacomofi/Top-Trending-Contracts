['// SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity 0.6.8;\n', '\n', 'import "./NFTXv9.sol";\n', '\n', 'interface KittyCoreAlt {\n', '    function transferFrom(\n', '        address _from,\n', '        address _to,\n', '        uint256 _tokenId\n', '    ) external;\n', '}\n', '\n', 'contract NFTXv10 is NFTXv9 {\n', '    function requestMint(uint256 vaultId, uint256[] memory nftIds)\n', '        public\n', '        payable\n', '        virtual\n', '        override\n', '        nonReentrant\n', '    {\n', '        onlyOwnerIfPaused(1);\n', '        require(store.allowMintRequests(vaultId), "1");\n', '        for (uint256 i = 0; i < nftIds.length; i = i.add(1)) {\n', '            if (vaultId > 6 && vaultId < 10) {\n', '                KittyCoreAlt kittyCoreAlt =\n', '                    KittyCoreAlt(store.nftAddress(vaultId));\n', '                kittyCoreAlt.transferFrom(msg.sender, address(this), nftIds[i]);\n', '            } else {\n', '                store.nft(vaultId).safeTransferFrom(\n', '                    msg.sender,\n', '                    address(this),\n', '                    nftIds[i]\n', '                );\n', '            }\n', '            store.setRequester(vaultId, nftIds[i], msg.sender);\n', '        }\n', '        emit MintRequested(vaultId, nftIds, msg.sender);\n', '    }\n', '}']