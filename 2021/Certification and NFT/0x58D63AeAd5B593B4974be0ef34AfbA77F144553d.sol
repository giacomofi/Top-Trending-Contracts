['// SPDX-License-Identifier: MIT\n', 'pragma solidity 0.6.9;\n', '\n', 'import "IIdeaTokenFactory.sol";\n', '\n', '/**\n', ' * @title AddMarketSpell\n', ' * @author Alexander Schlindwein\n', ' *\n', ' * Spell to add a market\n', ' */\n', 'contract AddMarketSpell {\n', '\n', '    /**\n', '     * Adds a market to the factory\n', '     *\n', '     * @param factory The address of the IdeaTokenFactory\n', '     * @param marketName The name of the market\n', '     * @param nameVerifier The address of the name verifier\n', '     * @param baseCost The base cost\n', '     * @param priceRise The price rise\n', '     * @param hatchTokens The amount of hatch tokens\n', '     * @param tradingFeeRate The trading fee\n', '     * @param platformFeeRate The platform fee\n', '     * @param allInterestToPlatform: If true, all interest goes to the platform instead of the token owner\n', '     */\n', '    function execute(address factory, string calldata marketName, address nameVerifier,\n', '                     uint baseCost, uint priceRise, uint hatchTokens,\n', '                     uint tradingFeeRate, uint platformFeeRate, bool allInterestToPlatform) external {\n', '\n', '        IIdeaTokenFactory(factory).addMarket(marketName, nameVerifier,\n', '                                              baseCost, priceRise, hatchTokens,\n', '                                              tradingFeeRate, platformFeeRate, allInterestToPlatform);\n', '    }\n', '}']