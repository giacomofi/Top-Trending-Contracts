['// SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity ^0.8.0;\n', '\n', 'import "./interfaces/IChainLinkOracle.sol";\n', 'import "./interfaces/IKeeperV2Oracle.sol";\n', '\n', 'contract InvOracleHelper is IChainLinkOracle {\n', '    address constant public inv = 0x41D5D79431A913C4aE7d69a668ecdfE5fF9DFB68;\n', '    address constant public weth = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\n', '    IChainLinkOracle constant public ethFeed = IChainLinkOracle(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419);\n', '    IKeeperV2Oracle constant public keeper = IKeeperV2Oracle(0x39b1dF026010b5aEA781f90542EE19E900F2Db15);\n', '\n', '    function latestAnswer() external override view returns (uint256 answer) {\n', '        (uint256 invEthPrice, ) = keeper.current(inv, 1e18, weth);\n', '        uint256 ethPrice = ethFeed.latestAnswer();\n', '        answer = invEthPrice * ethPrice /1e18;\n', '    }\n', '}\n', '\n', '// SPDX-License-Identifier: No License\n', '\n', 'pragma solidity ^0.8.0;\n', '\n', 'interface IChainLinkOracle {\n', '    function latestAnswer() external view returns (uint256);\n', '}\n', '\n', '// SPDX-License-Identifier: No License\n', '\n', 'pragma solidity ^0.8.0;\n', '\n', 'interface IKeeperV2Oracle {\n', '    function current(address, uint, address) external view returns (uint256, uint256);\n', '}\n', '\n', '{\n', '  "optimizer": {\n', '    "enabled": true,\n', '    "runs": 2000\n', '  },\n', '  "outputSelection": {\n', '    "*": {\n', '      "*": [\n', '        "evm.bytecode",\n', '        "evm.deployedBytecode",\n', '        "abi"\n', '      ]\n', '    }\n', '  },\n', '  "libraries": {}\n', '}']