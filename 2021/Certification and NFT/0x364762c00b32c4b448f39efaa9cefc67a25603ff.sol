['/**\n', ' *Submitted for verification at Etherscan.io on 2021-03-04\n', '*/\n', '\n', '// SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity 0.6.12;\n', '\n', '/// @dev brief interface for entering SUSHI bar (xSUSHI).\n', 'interface ISushiBarEnter { \n', '    function balanceOf(address account) external view returns (uint256);\n', '    function approve(address spender, uint256 amount) external returns (bool);\n', '    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n', '    function enter(uint256 amount) external;\n', '}\n', '\n', '/// @dev brief interface for depositing into AAVE lending pool.\n', 'interface IAaveDeposit {\n', '    function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external;\n', '}\n', '\n', '/// @dev contract that batches SUSHI staking into AAVE xSUSHI (aXSUSHI).\n', 'contract Saave {\n', '    ISushiBarEnter constant sushiToken = ISushiBarEnter(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2); // SUSHI token contract\n', '    ISushiBarEnter constant sushiBar = ISushiBarEnter(0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272); // xSUSHI staking contract for SUSHI\n', '    IAaveDeposit constant aave = IAaveDeposit(0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9); // AAVE lending pool contract for xSUSHI staking into aXSUSHI\n', '    \n', '    constructor() public {\n', '        sushiToken.approve(address(sushiBar), type(uint256).max); // max approve `sushiBar` spender to stake SUSHI into xSUSHI from this contract\n', '        sushiBar.approve(address(aave), type(uint256).max); // max approve `aave` spender to stake xSUSHI into aXSUSHI from this contract\n', '    }\n', '    \n', '    /// @dev stake `amount` SUSHI into aXSUSHI by batching calls to `sushiBar` and `aave` lending pool.\n', '    function saave(uint256 amount) external {\n', '        sushiToken.transferFrom(msg.sender, address(this), amount); // deposit caller SUSHI `amount` into this contract\n', '        sushiBar.enter(amount); // stake deposited SUSHI `amount` into xSUSHI\n', '        aave.deposit(address(sushiBar), sushiBar.balanceOf(address(this)), msg.sender, 0); // stake resulting xSUSHI into aXSUSHI - send to caller\n', '    }\n', '    \n', '    /// @dev stake `amount` SUSHI into aXSUSHI for benefit of `to` by batching calls to `sushiBar` and `aave` lending pool.\n', '    function saaveTo(address to, uint256 amount) external {\n', '        sushiToken.transferFrom(msg.sender, address(this), amount); // deposit caller SUSHI `amount` into this contract\n', '        sushiBar.enter(amount); // stake deposited SUSHI `amount` into xSUSHI\n', '        aave.deposit(address(sushiBar), sushiBar.balanceOf(address(this)), to, 0); // stake resulting xSUSHI into aXSUSHI - send to `to`\n', '    }\n', '}']