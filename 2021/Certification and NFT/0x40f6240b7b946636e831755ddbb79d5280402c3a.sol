['/**\n', ' *Submitted for verification at Etherscan.io on 2021-05-24\n', '*/\n', '\n', '// SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity >=0.6.6;\n', '\n', 'interface IERC20 {\n', '    function totalSupply() external view returns (uint256);\n', '\n', '    function balanceOf(address account) external view returns (uint256);\n', '\n', '    function transfer(address recipient, uint256 amount) external returns (bool);\n', '\n', '    function allowance(address owner, address spender) external view returns (uint256);\n', '\n', '    function approve(address spender, uint256 amount) external returns (bool);\n', '\n', '    function transferFrom(\n', '        address sender,\n', '        address recipient,\n', '        uint256 amount\n', '    ) external returns (bool);\n', '\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '    event Approval(address indexed owner, address indexed spender, uint256 value);\n', '}\n', '\n', 'interface UniswapV2Pair is IERC20 {\n', '    function token0() external view returns (address);\n', '\n', '    function token1() external view returns (address);\n', '\n', '    function getReserves()\n', '        external\n', '        view\n', '        returns (\n', '            uint112 reserve0,\n', '            uint112 reserve1,\n', '            uint32 blockTimestampLast\n', '        );\n', '}\n', '\n', 'interface IVoteProxy {\n', '    function decimals() external pure returns (uint8);\n', '\n', '    function totalSupply() external view returns (uint256);\n', '\n', '    function balanceOf(address _voter) external view returns (uint256);\n', '}\n', '\n', 'interface IMasterChef {\n', '    function userInfo(uint256, address) external view returns (uint256, uint256);\n', '\n', '    function poolInfo(uint256)\n', '        external\n', '        view\n', '        returns (\n', '            address lpToken,\n', '            uint256 allocPoint,\n', '            uint256 lastRewardBlock,\n', '            uint256 accRewardPerShare\n', '        );\n', '}\n', '\n', 'contract popVoteProxyImpl is IVoteProxy {\n', '    address public baseToken = 0x7fC3eC3574d408F3b59CD88709baCb42575EBF2b;\n', '\n', '    function decimals() public pure virtual override returns (uint8) {\n', '        return 18;\n', '    }\n', '\n', '    function totalSupply() public view virtual override returns (uint256) {\n', '        return IERC20(baseToken).totalSupply();\n', '    }\n', '\n', '    function getTokenInPair(\n', '        uint256 lpAmount,\n', '        address token,\n', '        address pair\n', '    ) public view returns (uint256) {\n', '        uint256 supply = UniswapV2Pair(pair).totalSupply();\n', '        (uint112 r0, uint112 r1, ) = UniswapV2Pair(pair).getReserves();\n', '        if (UniswapV2Pair(pair).token0() == token) {\n', '            return (r0 * lpAmount) / supply;\n', '        } else if (UniswapV2Pair(pair).token1() == token) {\n', '            return (r1 * lpAmount) / supply;\n', '        }\n', '        return 0;\n', '    }\n', '\n', '    function getTokenInPairMasterChef(\n', '        uint256 pid,\n', '        address chef,\n', '        address user,\n', '        address token,\n', '        address pair\n', '    ) public view returns (uint256) {\n', '        (uint256 amount, ) = IMasterChef(chef).userInfo(pid, user);\n', '        return getTokenInPair(amount, token, pair);\n', '    }\n', '\n', '    function getTokenBalanceInPair(\n', '        address user,\n', '        address token,\n', '        address pair\n', '    ) public view returns (uint256) {\n', '        return getTokenInPair(IERC20(pair).balanceOf(user), token, pair);\n', '    }\n', '\n', '    function balanceOfDetail(address user) public view virtual returns (uint256[] memory detailBalances) {\n', '        // pop\n', '        detailBalances = new uint256[](3);\n', '        detailBalances[0] = IERC20(baseToken).balanceOf(user);\n', '        // pair pop/weth\n', '        address popWethPair = 0x7E5D0da0f5BA5c24043DcEb0DA78E97dfddCA7Df;\n', '        detailBalances[1] = getTokenBalanceInPair(user, baseToken, popWethPair);\n', '\n', '        // mlp pop/weth\n', '        detailBalances[2] = getTokenInPairMasterChef(0, 0x1A13B10C13650eE3C33F0D6488a84CBB8603B47E, user, baseToken, popWethPair);\n', '    }\n', '\n', '    function balanceOf(address user) public view virtual override returns (uint256) {\n', '        uint256[] memory detailBalances = balanceOfDetail(user);\n', '        uint256 balance = 0;\n', '        for (uint8 pid = 0; pid < detailBalances.length; ++pid) {\n', '            balance += detailBalances[pid];\n', '        }\n', '        return balance;\n', '    }\n', '}']