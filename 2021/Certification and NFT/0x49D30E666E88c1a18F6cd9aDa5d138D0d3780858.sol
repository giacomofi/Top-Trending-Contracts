['// SPDX-License-Identifier: U-U-U-UPPPPP!!!\n', 'pragma solidity ^0.7.4;\n', '\n', '/* ROOTKIT: upTether\n', '\n', 'An upToken is a token that gains in value\n', 'against whatever token it is paired with.\n', '\n', '- Raise Tether using the Market Generation\n', 'and Market Distribution contracts\n', '- An equal amount of upTether will be minted\n', '- combine with an ERC-31337 version of the \n', 'raised token.\n', '- Send LP tokens to the Liquidity Controller\n', 'for efficent access to market features\n', '\n', '*/\n', '\n', 'import "./LiquidityLockedERC20.sol";\n', '\n', 'contract RootedToken is LiquidityLockedERC20("upTether", "upUSDT")\n', '{\n', '    address public minter;\n', '\n', '    function setMinter(address _minter) public ownerOnly()\n', '    {\n', '        minter = _minter;\n', '    }\n', '\n', '    function mint(uint256 amount) public\n', '    {\n', '        require(msg.sender == minter, "Not a minter");\n', '        require(this.totalSupply() == 0, "Already minted");\n', '        _mint(msg.sender, amount * 1e12); // tether!!!\n', '    }\n', '}']