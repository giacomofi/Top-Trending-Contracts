['// SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity 0.6.8;\n', '\n', 'import "./NFTXv10.sol";\n', '\n', 'contract NFTXv11 is NFTXv10 {\n', '    function revokeMintRequests(uint256 vaultId, uint256[] memory nftIds)\n', '        public\n', '        virtual\n', '        override\n', '        nonReentrant\n', '    {\n', '        for (uint256 i = 0; i < nftIds.length; i = i.add(1)) {\n', '            require(\n', '                store.requester(vaultId, nftIds[i]) == msg.sender,\n', '                "Not requester"\n', '            );\n', '            store.setRequester(vaultId, nftIds[i], address(0));\n', '            if (vaultId > 6 && vaultId < 10) {\n', '                KittyCore kittyCore = KittyCore(store.nftAddress(vaultId));\n', '                kittyCore.transfer(msg.sender, nftIds[i]);\n', '            } else {\n', '                store.nft(vaultId).safeTransferFrom(\n', '                    address(this),\n', '                    msg.sender,\n', '                    nftIds[i]\n', '                );\n', '            }\n', '        }\n', '    }\n', '}']