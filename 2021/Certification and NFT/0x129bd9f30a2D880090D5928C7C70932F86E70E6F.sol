['/**\n', ' *Submitted for verification at Etherscan.io on 2021-06-03\n', '*/\n', '\n', '// Copyright (C) 2020 Centrifuge\n', '// This program is free software: you can redistribute it and/or modify\n', '// it under the terms of the GNU Affero General Public License as published by\n', '// the Free Software Foundation, either version 3 of the License, or\n', '// (at your option) any later version.\n', '//\n', '// This program is distributed in the hope that it will be useful,\n', '// but WITHOUT ANY WARRANTY; without even the implied warranty of\n', '// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n', '// GNU Affero General Public License for more details.\n', '//\n', '// You should have received a copy of the GNU Affero General Public License\n', '// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n', 'pragma solidity >=0.5.15 <0.6.0;\n', 'pragma experimental ABIEncoderV2;\n', '\n', '// TODO: split interfaces between tests and spell. Exclude all the function that afre only used in tests\n', 'interface SpellTinlakeRootLike {\n', '    function relyContract(address, address) external;\n', '}\n', '\n', 'interface SpellMemberlistLike {\n', '    function updateMember(address, uint) external;\n', '}\n', '\n', 'interface SpellReserveLike {\n', '    function payout(uint currencyAmount) external;\n', '}\n', '\n', 'interface DependLike {\n', '    function depend(bytes32, address) external;\n', '}\n', '\n', 'interface FileLike {\n', '    function file(bytes32, uint) external;\n', '    function file(bytes32, address) external;\n', '}\n', '\n', 'interface AuthLike {\n', '    function rely(address) external;\n', '    function deny(address) external;\n', '}\n', '\n', 'interface MigrationLike {\n', '    function migrate(address) external;\n', '}\n', '\n', 'interface TrancheLike {\n', '    function totalSupply() external returns(uint);\n', '    function totalRedeem() external returns(uint);\n', '}\n', '\n', 'interface PoolAdminLike {\n', '    function relyAdmin(address) external;\n', '}\n', '\n', 'interface MgrLike {\n', '    function lock(uint) external;\n', '}\n', '\n', 'interface SpellERC20Like {\n', '    function balanceOf(address) external view returns (uint256);\n', '    function transferFrom(address, address, uint) external returns (bool);\n', '    function approve(address, uint) external;\n', '}\n', '\n', '// spell for: ns2 tranche migration\n', 'contract TinlakeSpell {\n', '\n', '// {\n', '//   "DEPLOYMENT_NAME": "NewSilver 2 mainnet deployment",\n', '//   "ROOT_CONTRACT": "0x53b2d22d07E069a3b132BfeaaD275b10273d381E",\n', '//   "TINLAKE_CURRENCY": "0x6b175474e89094c44da98b954eedeac495271d0f",\n', '//   "BORROWER_DEPLOYER": "0x9137BFdbB43BDf83DB5B8e691B5D2ceBE6475392",\n', '//   "TITLE_FAB": "0x8bA230C8b7C6B4C5d6A1bfC53B4d992CD0963661",\n', '//   "SHELF_FAB": "0xEa66cD92CaFF63c82A31BAa2BdA274ACbBA6323a",\n', '//   "PILE_FAB": "0xc1C9330Fcc5694B902CB27bCB615fB126DfACc55",\n', '//   "COLLECTOR_FAB": "0x7d882A8513C9cf5D7623222607Ea67a6C03676d2",\n', '//   "FEED_FAB": "0xC2f81D0e9744ca806f024c884FD18462Ce787550",\n', '//   "TITLE": "0x07cdD617c53B07208b0371C93a02deB8d8D49C6e",\n', '//   "PILE": "0x3eC5c16E7f2C6A80E31997C68D8Fa6ACe089807f",\n', '//   "SHELF": "0x7d057A056939bb96D682336683C10EC89b78D7CE",\n', '//   "COLLECTOR": "0x62f290512c690a817f47D2a4a544A5d48D1408BE",\n', '//   "FEED": "0x41fAD1Eb242De19dA0206B0468763333BB6C2B3D",\n', '//   "LENDER_DEPLOYER": "0xed0d554A3125E79B9E77A919c7cc651d235A3B1A",\n', '//   "OPERATOR_FAB": "0x782436a28B5d45645C8b56f4456f1593AF29FD8f",\n', '//   "ASSESSOR_FAB": "0xc2ACC63c37634f37a8Fa26F041CC2FA4331a3184",\n', '//   "ASSESSOR_ADMIN_FAB": "0xcA0fA916eB9003AD35d1356bE867c0CF28a9aab4",\n', '//   "COORDINATOR_FAB": "0x2b0E830af4353CDeED11E3FB32b35E67a6641162",\n', '//   "TRANCHE_FAB": "0xFA75dFDa070dC69EadCD6eb17fE08BAECBa23C88",\n', '//   "MEMBERLIST_FAB": "0x7E3bd3ee54febd930DA077479093C527F11d1729",\n', '//   "RESTRICTEDTOKEN_FAB": "0x0e9A86D770EDa4dea6c1d7C8cd23245318F4327a",\n', '//   "RESERVE_FAB": "0x067129E2D2f1aE84B1014c33C54eAE92D18A5454",\n', '//   "JUNIOR_OPERATOR": "0x4c4Cc6a0573db5823ECAA1d1d65EB64E5E0E5F01",\n', '//   "SENIOR_OPERATOR": "0x230f2E19D6c2Dc0c441c2150D4dD9d67B563A60C",\n', '//   "JUNIOR_TRANCHE": "0x7cD2a6Be6ca8fEB02aeAF08b7F350d7248dA7707",\n', '//   "SENIOR_TRANCHE": "0x636214f455480D19F17FE1aa45B9989C86041767",\n', '//   "JUNIOR_TOKEN": "0x961e1d4c9A7C0C3e05F17285f5FA34A66b62dBb1",\n', '//   "SENIOR_TOKEN": "0xE4C72b4dE5b0F9ACcEA880Ad0b1F944F85A9dAA0",\n', '//   "JUNIOR_MEMBERLIST": "0x42C2483EEE8c1Fe46C398Ac296C59674F9eb88CD",\n', '//   "SENIOR_MEMBERLIST": "0x5B5CFD6E45F1407ABCb4BFD9947aBea1EA6649dA",\n', '//   "ASSESSOR": "0x83E2369A33104120746B589Cc90180ed776fFb91",\n', '//   "ASSESSOR_ADMIN": "0x46470030e1c732A9C2b541189471E47661311375",\n', '//   "COORDINATOR": "0xcC7AFB5DeED34CF67E72d4C53B142F44c9268ab9",\n', '//   "RESERVE": "0xD9E4391cF31638a8Da718Ff0Bf69249Cdc48fB2B",\n', '//   "GOVERNANCE": "0xf3BceA7494D8f3ac21585CA4b0E52aa175c24C25",\n', '//   "MAIN_DEPLOYER": "0x1a5a533BcF4ef8A884732056f413114159d03058",\n', '//   "CLERK": "0xA9eCF012dD36512e5fFCD5585D72386E46135Cdd",\n', '//   "MAKER_MGR": "0x2474F297214E5d96Ba4C81986A9F0e5C260f445D",\n', '//   "COMMIT_HASH": "fc1f8e275a9d05d877e64f46810c107cde0808ce",\n', '// }\n', '\n', '// senior\n', "// dapp create 'src/lender/tranche.sol:Tranche' 0x6b175474e89094c44da98b954eedeac495271d0f 0xE4C72b4dE5b0F9ACcEA880Ad0b1F944F85A9dAA0\n", '// 0x3f06DB6334435fF4150e14aD69F6280BF8E8dA64\n', '// junior\n', "// dapp create 'src/lender/tranche.sol:Tranche' 0x6b175474e89094c44da98b954eedeac495271d0f 0x961e1d4c9A7C0C3e05F17285f5FA34A66b62dBb1\n", '// 0x53CF3CCd97CA914F9e441B8cd9A901E69B170f27\n', '\n', '    bool public done;\n', '    string constant public description = "Tinlake NS2 migration mainnet Spell";\n', '\n', '    address constant public ROOT = 0x53b2d22d07E069a3b132BfeaaD275b10273d381E;\n', '    address constant public SENIOR_TOKEN = 0xE4C72b4dE5b0F9ACcEA880Ad0b1F944F85A9dAA0;\n', '    address constant public JUNIOR_TOKEN = 0x961e1d4c9A7C0C3e05F17285f5FA34A66b62dBb1;\n', '    address constant public SENIOR_OPERATOR = 0x230f2E19D6c2Dc0c441c2150D4dD9d67B563A60C;\n', '    address constant public JUNIOR_OPERATOR = 0x4c4Cc6a0573db5823ECAA1d1d65EB64E5E0E5F01;\n', '\n', '    address constant public ASSESSOR = 0x83E2369A33104120746B589Cc90180ed776fFb91;\n', '    address constant public COORDINATOR = 0xcC7AFB5DeED34CF67E72d4C53B142F44c9268ab9;\n', '    address constant public RESERVE = 0xD9E4391cF31638a8Da718Ff0Bf69249Cdc48fB2B;\n', '\n', '    address constant public CLERK = 0xA9eCF012dD36512e5fFCD5585D72386E46135Cdd;\n', '    address constant public MGR =  0x2474F297214E5d96Ba4C81986A9F0e5C260f445D;\n', '\n', '    address constant public SENIOR_TRANCHE_OLD = 0x636214f455480D19F17FE1aa45B9989C86041767;\n', '    address constant public JUNIOR_TRANCHE_OLD = 0x7cD2a6Be6ca8fEB02aeAF08b7F350d7248dA7707;\n', '    address constant public TINLAKE_CURRENCY = 0x6B175474E89094C44Da98b954EedeAC495271d0F; // DAI\n', '\n', '    // new contracts -> to be migrated\n', '    address constant public SENIOR_TRANCHE_NEW = 0x3f06DB6334435fF4150e14aD69F6280BF8E8dA64;\n', '    address constant public JUNIOR_TRANCHE_NEW = 0x53CF3CCd97CA914F9e441B8cd9A901E69B170f27;\n', '\n', '    address self;\n', '\n', '    // permissions to be set\n', '    function cast() public {\n', '        require(!done, "spell-already-cast");\n', '        done = true;\n', '        execute();\n', '    }\n', '\n', '    function execute() internal {\n', '        SpellTinlakeRootLike root = SpellTinlakeRootLike(ROOT);\n', '        self = address(this);\n', '        // set spell as ward on the core contract to be able to wire the new contracts correctly\n', '        root.relyContract(JUNIOR_TRANCHE_OLD, self);\n', '        root.relyContract(SENIOR_TRANCHE_OLD, self);\n', '        root.relyContract(SENIOR_TRANCHE_NEW, self);\n', '        root.relyContract(JUNIOR_TRANCHE_NEW, self);\n', '        root.relyContract(SENIOR_OPERATOR, self);\n', '        root.relyContract(JUNIOR_OPERATOR, self);\n', '        root.relyContract(SENIOR_TOKEN, self);\n', '        root.relyContract(JUNIOR_TOKEN, self);\n', '\n', '        root.relyContract(ASSESSOR, self);\n', '        root.relyContract(COORDINATOR, self);\n', '        root.relyContract(RESERVE, self);\n', '\n', '        root.relyContract(CLERK, self);\n', '        root.relyContract(MGR, self);\n', '\n', '        // contract migration --> assumption: root contract is already ward on the new contracts\n', '        migrateTranches();\n', '    }\n', '\n', '    function migrateTranches() internal {\n', '\n', '        // senior\n', '        TrancheLike seniorTranche = TrancheLike(SENIOR_TRANCHE_NEW);\n', '        require((seniorTranche.totalSupply() == 0 && seniorTranche.totalRedeem() == 0), "senior-tranche-has-orders");\n', '\n', '        // dependencies\n', '        DependLike(SENIOR_TRANCHE_NEW).depend("reserve", RESERVE);\n', '        DependLike(SENIOR_TRANCHE_NEW).depend("epochTicker", COORDINATOR);\n', '        DependLike(SENIOR_OPERATOR).depend("tranche", SENIOR_TRANCHE_NEW);\n', '        DependLike(ASSESSOR).depend("seniorTranche", SENIOR_TRANCHE_NEW);\n', '        DependLike(COORDINATOR).depend("seniorTranche", SENIOR_TRANCHE_NEW);\n', '        DependLike(CLERK).depend("tranche", SENIOR_TRANCHE_NEW);\n', '        FileLike(MGR).file("tranche", SENIOR_TRANCHE_NEW);\n', '\n', '        // permissions\n', '        AuthLike(SENIOR_TRANCHE_NEW).rely(SENIOR_OPERATOR);\n', '        AuthLike(SENIOR_TRANCHE_NEW).rely(COORDINATOR);\n', '        AuthLike(SENIOR_TRANCHE_NEW).rely(CLERK);\n', '\n', '        AuthLike(SENIOR_TOKEN).deny(SENIOR_TRANCHE_OLD);\n', '        AuthLike(SENIOR_TOKEN).rely(SENIOR_TRANCHE_NEW);\n', '        AuthLike(RESERVE).deny(SENIOR_TRANCHE_OLD);\n', '        AuthLike(RESERVE).rely(SENIOR_TRANCHE_NEW);\n', '\n', '        // junior\n', '        TrancheLike juniorTranche = TrancheLike(SENIOR_TRANCHE_NEW);\n', '        require((juniorTranche.totalSupply() == 0 && juniorTranche.totalRedeem() == 0), "junior-tranche-has-orders");\n', '\n', '        // dependencies\n', '        DependLike(JUNIOR_TRANCHE_NEW).depend("reserve", RESERVE);\n', '        DependLike(JUNIOR_TRANCHE_NEW).depend("epochTicker", COORDINATOR);\n', '        DependLike(JUNIOR_OPERATOR).depend("tranche", JUNIOR_TRANCHE_NEW);\n', '        DependLike(ASSESSOR).depend("juniorTranche", JUNIOR_TRANCHE_NEW);\n', '        DependLike(COORDINATOR).depend("juniorTranche", JUNIOR_TRANCHE_NEW);\n', '\n', '        // permissions\n', '        AuthLike(JUNIOR_TRANCHE_NEW).rely(JUNIOR_OPERATOR);\n', '        AuthLike(JUNIOR_TRANCHE_NEW).rely(COORDINATOR);\n', '        \n', '        AuthLike(JUNIOR_TOKEN).deny(JUNIOR_TRANCHE_OLD);\n', '        AuthLike(JUNIOR_TOKEN).rely(JUNIOR_TRANCHE_NEW);\n', '        AuthLike(RESERVE).deny(JUNIOR_TRANCHE_OLD);\n', '        AuthLike(RESERVE).rely(JUNIOR_TRANCHE_NEW);\n', '    }\n', '}']