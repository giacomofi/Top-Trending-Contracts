['/**\n', ' *Submitted for verification at Etherscan.io on 2021-06-08\n', '*/\n', '\n', '// SPDX-License-Identifier: MIT\n', 'pragma solidity 0.8.0;\n', '\n', '/// @author [@DreWhyte](Telegram)\n', '/// @title Payable Contract\n', 'contract PayableContract {\n', '\n', '    address public owner;\n', '\n', '    address public admin;\n', '\n', '    event Transfer(address indexed _to, uint256 _value);\n', '\n', '    event Receive(address indexed _from, uint256 _value);\n', '\n', '    modifier onlyAdmin() {\n', '        require(msg.sender == admin, "Admin privilege only");\n', '        _;\n', '    }\n', '\n', '    modifier onlyOwner() {\n', '        require(msg.sender == owner, "Owner privilege only");\n', '        _;\n', '    }\n', '\n', '    /**\n', '    * @notice Set the default admin and owner\n', '    * as address that deploys contract\n', '    */\n', '    constructor() {\n', '        admin = msg.sender;\n', '        owner = admin;\n', '    }\n', '\n', '    /**\n', '    * @param _newOwner payable address of new owner\n', '    * @return status\n', '    * @dev previous owner cannot be made new owner\n', '    */\n', '    function transferOwnership(address _newOwner) public onlyAdmin returns(bool status){\n', '        require(_newOwner != address(0));\n', '\n', '        address previousOwner = owner;\n', '\n', '        require(previousOwner != _newOwner);\n', '\n', '        owner = _newOwner;\n', '\n', '        return true;\n', '    }\n', '\n', '    /**\n', '    * @dev Withdraw all funds\n', '    */\n', '    function withdrawAll() public onlyOwner {\n', '        uint amount = address(this).balance;\n', '\n', '        (bool success,) = msg.sender.call{value: amount}("");\n', '\n', '        require(success, "withdrawAll: Transfer failed");\n', '\n', '        emit Transfer(msg.sender, amount);\n', '    }\n', '\n', '    /**\n', '    * @param amount Amount to withdraw in wei\n', '    */\n', '    function withdrawPartial(uint amount) public onlyOwner {\n', '        (bool success,) = msg.sender.call{value: amount}("");\n', '\n', '        require(success, "withdrawPartial: Transfer failed");\n', '\n', '        emit Transfer(msg.sender, amount);\n', '    }\n', '\n', '\n', '    /**\n', '    * @dev This can only reply on 2300 gas been available\n', "    * @dev We can't do beyond simple ven logging\n", '    */\n', '    receive() external payable {\n', '        emit Receive(msg.sender, msg.value);\n', '    }\n', '\n', '    /**\n', '    * @dev Retrieve all funds & destroy contract\n', '    * in case of emergency\n', '    */\n', '    function killSwitch() public onlyAdmin() {\n', '      address payable _owner = payable(owner);\n', '\n', '      selfdestruct(_owner);\n', '    }\n', '}']