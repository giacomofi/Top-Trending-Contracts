['/**\n', ' *Submitted for verification at Etherscan.io on 2021-04-07\n', '*/\n', '\n', '// Root file: contracts/protocol/integration/AaveGovernanceV2Adapter.sol\n', '\n', '/*\n', '    Copyright 2021 Set Labs Inc.\n', '\n', '    Licensed under the Apache License, Version 2.0 (the "License");\n', '    you may not use this file except in compliance with the License.\n', '    You may obtain a copy of the License at\n', '\n', '    http://www.apache.org/licenses/LICENSE-2.0\n', '\n', '    Unless required by applicable law or agreed to in writing, software\n', '    distributed under the License is distributed on an "AS IS" BASIS,\n', '    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n', '    See the License for the specific language governing permissions and\n', '    limitations under the License.\n', '\n', '*/\n', '\n', 'pragma solidity 0.6.10;\n', 'pragma experimental "ABIEncoderV2";\n', '\n', '\n', '/**\n', ' * @title AaveGovernanceV2Adapter\n', ' * @author Noah Citron\n', ' *\n', ' * Governance adapter for Aave governance that returns data for voting, delegating, and creating proposals\n', ' */\n', 'contract AaveGovernanceV2Adapter {\n', '\n', '    /* ============ Constants ============ */\n', '\n', '    // Signature of delegate function\n', '    string public constant DELEGATE_SIGNATURE = "delegate(address)";\n', '\n', '    // Signature of vote function\n', '    string public constant VOTE_SIGNATURE = "submitVote(uint256,bool)";\n', '\n', '    // Signature of propose function\n', '    string public constant PROPOSE_SIGNATURE = "create(address,address[],uint256[],string[],bytes[],bool[],bytes32)";\n', '\n', '    /* ============ State Variables ============ */\n', '\n', '    // Address of Aave proto governance contract\n', '    address public immutable aaveGovernanceV2;\n', '\n', '    // Address of the Aave token\n', '    address public immutable aaveToken;\n', '\n', '    /* ============ Constructor ============ */\n', '\n', '    /**\n', '     * Set state variables\n', '     *\n', '     * @param _aaveGovernanceV2    Address of AAVE Governance V2 contract\n', '     */\n', '    constructor(address _aaveGovernanceV2, address _aaveToken) public {\n', '        aaveGovernanceV2 =  _aaveGovernanceV2;\n', '        aaveToken = _aaveToken;\n', '    }\n', '\n', '    /* ============ External Getter Functions ============ */\n', '\n', '    /**\n', '     * Generates the calldata to vote on a proposal.\n', '     *\n', '     * @param _proposalId           ID of the proposal to vote on\n', '     * @param _support              Boolean indicating whether to support proposal\n', '     *\n', '     * @return address              Target contract address\n', '     * @return uint256              Total quantity of ETH (Set to 0)\n', '     * @return bytes                Propose calldata\n', '     */\n', '    function getVoteCalldata(uint256 _proposalId, bool _support, bytes memory /* _data */) external view returns (address, uint256, bytes memory) {\n', '        bytes memory callData = abi.encodeWithSignature(VOTE_SIGNATURE, _proposalId, _support);\n', '        return (aaveGovernanceV2, 0, callData);\n', '    }\n', '\n', '    /**\n', '     * Generates the calldata to delegate votes to another ETH address. Self and zero address allowed, which is equivalent to registering and revoking in Aave.\n', '     *\n', '     * @param _delegatee            Address of the delegatee\n', '     *\n', '     * @return address              Target contract address\n', '     * @return uint256              Total quantity of ETH (Set to 0)\n', '     * @return bytes                Propose calldata\n', '     */\n', '    function getDelegateCalldata(address _delegatee) external view returns (address, uint256, bytes memory) {\n', '        bytes memory callData = abi.encodeWithSignature(DELEGATE_SIGNATURE, _delegatee);\n', '        return (aaveToken, 0, callData);\n', '    }\n', '\n', '    /**\n', '     * Generates the calldata to create a new proposal.\n', '     * The caller must have proposition power higher than PROPOSITION_THRESHOLD to create a proposal.\n', '     * Executor is a contract deployed to validate proposal creation and voting.\n', "     * There two types of proposals and each has it's own executor.\n", '     * Critical proposals that affect governance consensus (long) and proposals affecting only protocol parameters (short).\n', '     * https://docs.aave.com/developers/protocol-governance/governance#proposal-types\n', '     *\n', '     * @param _proposalData         Byte data containing data about the proposal\n', '     *\n', '     * @return address              Target contract address\n', '     * @return uint256              Total quantity of ETH (Set to 0)\n', '     * @return bytes                Propose calldata\n', '     */\n', '    function getProposeCalldata(bytes memory _proposalData) external view returns (address, uint256, bytes memory) {\n', '        (\n', '            address executor,\n', '            address[] memory targets,\n', '            uint256[] memory values,\n', '            string[] memory signatures,\n', '            bytes[] memory calldatas,\n', '            bool[] memory withDelegateCalls,\n', '            bytes32 ipfsHash\n', '        ) = abi.decode(_proposalData, (address,address[],uint256[],string[],bytes[],bool[],bytes32));\n', '\n', '        bytes memory callData = abi.encodeWithSignature(\n', '            PROPOSE_SIGNATURE,\n', '            executor,\n', '            targets,\n', '            values,\n', '            signatures,\n', '            calldatas,\n', '            withDelegateCalls,\n', '            ipfsHash\n', '        );\n', '\n', '        return (aaveGovernanceV2, 0, callData);\n', '    }\n', '\n', '    /**\n', '     * Reverts as AAVE currently does not have a register mechanism in governance\n', '     */\n', '    function getRegisterCalldata(address /* _setToken */) external view returns (address, uint256, bytes memory) {\n', '        revert("No register available in AAVE governance");\n', '    }\n', '\n', '    /**\n', '     * Reverts as AAVE currently does not have a revoke mechanism in governance\n', '     */\n', '    function getRevokeCalldata() external view returns (address, uint256, bytes memory) {\n', '        revert("No revoke available in AAVE governance");\n', '    }\n', '}']