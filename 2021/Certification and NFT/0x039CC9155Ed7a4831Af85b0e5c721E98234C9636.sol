['// SPDX-License-Identifier: LGPL-3.0-only\n', 'pragma solidity >=0.8.0;\n', '\n', 'import "../interfaces/IERC20.sol";\n', '\n', 'contract LPBalanceAdapter {\n', '    address public pair;\n', '\n', '    constructor(address _pair) {\n', '        pair = _pair;\n', '    }\n', '\n', '    function getBalance(address token, address account)\n', '        public\n', '        view\n', '        returns (uint256)\n', '    {\n', '        uint256 balance = (IERC20(token).balanceOf(pair) *\n', '            IERC20(pair).balanceOf(account)) / IERC20(pair).totalSupply();\n', '        return balance;\n', '    }\n', '}\n', '\n', '// SPDX-License-Identifier: LGPL-3.0-only\n', 'pragma solidity >=0.8.0;\n', '\n', 'interface IERC20 {\n', '    function balanceOf(address _owner) external view returns (uint256 balance);\n', '\n', '    function totalSupply() external view returns (uint256);\n', '}\n', '\n', '{\n', '  "optimizer": {\n', '    "enabled": false,\n', '    "runs": 200\n', '  },\n', '  "outputSelection": {\n', '    "*": {\n', '      "*": [\n', '        "evm.bytecode",\n', '        "evm.deployedBytecode",\n', '        "abi"\n', '      ]\n', '    }\n', '  },\n', '  "metadata": {\n', '    "useLiteralContent": true\n', '  },\n', '  "libraries": {}\n', '}']