['/**\n', ' *Submitted for verification at Etherscan.io on 2021-03-13\n', '*/\n', '\n', '/*                                                  ``  .:;:` ` `                                        \n', '                                                    .#W##@W#,` `                                       \n', '                                                  `;x#######M*`                                        \n', '                                                  [email\xa0protected]###########`                                       \n', '                                                 ,W############n.                                      \n', '                                                `#####@[email\xa0protected]#####n```                                   \n', '                                             `  ,W###Wi```i######z` `                                  \n', '                                             `  i####*`` .+######@#`                                   \n', '                                             ` `+####: ``########@@#.                                  \n', '                                               `z####,``:@###########`                                 \n', '                                             `  +####:  ####@[email\xa0protected]######```                              \n', '                                             ` `i####i `M###M:,[email\xa0protected]###W:`                               \n', '                                            ` `,n#####`.##### ``.n####n`                               \n', '                                             `;[email\xa0protected]####W;[email\xa0protected]###+`` `,M####i``                             \n', '                                          ```.M#######[email\xa0protected]###+`` ``*####M,`` ` `                        \n', '                                             *##############+ `   ,@####z` ` `                         \n', '                                          ` .x#@##[email\xa0protected]#@####### `` ``n####@;` ` `                        \n', '                                       `  ` :W###M,*@#######z     `*#####M. ``                         \n', '                                         ` `*@####``########n``````,@######` `                         \n', '                                           `z###@i `,@######x. `   `x#####@;                           \n', '                                        ` ``x###W.` `z######W,    ` [email\xa0protected]#####x.                          \n', '                                        ` ``W###M`` `[email\xa0protected]#####@:      :W######+`                         \n', '                                         ` `@###x`  `,W#####@;`  ` `.x######W,                         \n', '                                         ` [email\xa0protected]###z ` ``M#####@i   `  `+#######n`                        \n', '                                         ` :@###+     ######@i      `:#######@i` `                     \n', '                                           i####i     *######+ `     .W#######M.``                     \n', '                                           +###@:     :@#####z``     `##########` `                    \n', '                                          `z###@,     ,W#####M`      `;########@, `                    \n', '                                          `n###W.     .M#####W`       .W########n``                    \n', '                                         `.M###x.     .M#####@`     ` `z########@i  ``                 \n', '                                         `:@###z`     .x######,      ``[email\xa0protected]########M.` ``                \n', '                                       `` i####*`     .x######:       `,W###@W####+````                \n', '                                         `z####:`     `n######i`    ````x###@[email\xa0protected]###W, ` `               \n', '                                     `   ,W###W.      `n#######`      ``z####+x#####``                 \n', '                                    `  ``+####z`      `n######n`      ` *####z;@###W:`                 \n', '                                     ```:@###@;       `n######x.    ` ` ,@###x.z####n``                \n', '                                    ```,x####n`` `    .x######M.    `  `[email\xa0protected]##W:.W###@;                 \n', '                                   ` `;[email\xa0protected]###@; `      .M######W.        `n####i`+####x.                \n', '                    `    `      ` ``.*W#####+``       ,W######W:        `+#####`,M###@i` ` `           \n', '                      ````` `  `.;*[email\xa0protected]#####@#`      `  ,@######@i         ;@###n` *####M.  `            \n', '                     `    ` .;#[email\xa0protected]@######@#.     `  ``*########*         ,@###W.`.M###@*`   `          \n', '                          `*[email\xa0protected]##########@*``      ` ``n########+         `M###@:``*@###W`  `           \n', '                    ` ` `iM###########@z:`       `   ,W########z          ####@i` `x####*` `           \n', '               ` `   ``,[email\xa0protected]#########@M#:`          `  +###@n####n`  `      i####+`` [email\xa0protected]###x.`            \n', '                `   ``;W#######@x+i:.`             ``n###W;W###x ```      :@###n`  .x###@;             \n', '               ` `  `#@#####@xi.`   ````          ` :@###n`M###x`  `     `.M###M` ` i####n``           \n', '                ` `,[email\xa0protected]#####Mi`` `   `  `         ` .n###@i n###M,` `      `n###@.  `.M###@:`           \n', '                  .n#####@#. `   ```` `          ``[email\xa0protected]###M.`z###W,  `       #####.`  `+##### `          \n', '           `  `  .M#####M;``                  `   .W####*` +###@,`  `     `+####,` ``.W###@`           \n', '           ``   ,x#####n,` `                      #####M. `*###@;        ` *####:  `  z####;`          \n', '             ``.x##@##n.  `                    ` :@###@i`  +###@i ` `      i####i   ` [email\xa0protected]####`          \n', '           ` `.M######` `  ``                   [email\xa0protected]###z`   z###@;        ` :@###*`   `.M###x`          \n', '          ```,x####@#``      `               ` `[email\xa0protected]###W,  ``n###@;` `       .W###+    ``x###M.          \n', '        ` ``.n####@#`                        ``;W####+``  `n###@;`        `.W###z`   ``z###M,          \n', '      `` ` `n######`                         `,W####n`   ``n###W,`        `.W###n`   ``z###W,          \n', '        ` [email\xa0protected]###@n`                          ,x####M,`  ` `x###M.`        `.M###x`    `n###M.          \n', ' ``   `  :[email\xa0protected]####n.  `                      ``z####@i`   ` `@###x`  ``      `x###x`    .x###x.          \n', 'z*i,.`.:#@#####n.  `                     ` `[email\xa0protected]####*``     ,####z `       ` `x###M.    ,M###n`          \n', '##@[email\xa0protected]######n.                        `  :@###@z`      `i####*           `x###M.  ` :W####`          \n', '############@n.`                          .x####M,` ` ` ``z###W:           `n###M,   `[email\xa0protected]###i`          \n', '###########Wi```                          *####W, ` ` `  `x###M.           `n###W:    z###@,           \n', '[email\xa0protected]######@M#,`                            ,W###@*` ``     ,W###n`           `z###@;  ``M###W`           \n', ',;*zxMx#i,`    `                   ` ` ``[email\xa0protected]###x` `   ` ``i####+`           `####@i  `:@###n `          \n', '   ````  `                          ``  .W###W: `     ` `z####,            `####@i ``*###@*            \n', '      `  `                          ` ``+####z```      `,W###W`            `####@i  `n###W:`           \n', '`     ```                              :W###@: ` `    ``#####z``           `####@i  ,@###n.            \n', '  `       `                         ` `x####W.` `     .#####@; `           `####W; `*####* `           \n', '                                    ``[email\xa0protected]#####zi,...,:[email\xa0protected]####n``            `####W, .x###@,` `          \n', '                                     .W########@[email\xa0protected]######W,`             `####M. :W###n` `           \n', '                                   ``+####################W:` `            `####M, #####+` ``          \n', '                                   `:W####[email\xa0protected]############@x;``` `           `####M,`W###@, ` `          \n', '                                   `n####n;#[email\xa0protected]########Wni. ````            `####M.;@###n `             \n', '                                ` `[email\xa0protected]###W,``.:*#nxx#+;.` `                 `z###M:z###@i               \n', '                               `  .M##### ` `  ``..` ``  `                 `n###M*@###M.               \n', '                                ``+####M.`      ``  `                      `n###Wx#####`               \n', '                               ` ,W###@i  `          ``                    `n########@:                \n', '                              `  :@###n` `  `     `                        `x########n``               \n', '                               ` .n##W,`                                 ` `x#######@i                 \n', '                                ` .##:``                                   .M#######M` `               \n', '                              `                                           `.M######## `                \n', '                               `                                          `.W######W:                  \n', '                                 ` ` ` `                                  `.W#######``                 \n', '                                                                           ,@#####@: `                 \n', '                                                                           ;@#####n``                  \n', '                                                                          `i#####@;    `               \n', '                                                                           *#####n`````                \n', '                                                                         ` #####@i`   `                \n', '                                                                          `z####x.                     \n', '                                                                          `n####i`                     \n', '                                                                         ``x###W.`                     \n', '                                                                          :W###n``                     \n', '                                                                          +####*``                     \n', '                                                                       ``.W###@,                       \n', '                                                                     ` ``+####n`` `                    \n', '                                                                     `  ,W###@; `                      \n', '                                                                      ``z####n` `                      \n', 'n+**ii;:,,..```                   `     `            ````        `   ``[email\xa0protected]###@:`                        \n', '######@WWMxxxnnz#+*;:,..```````   `` `` `       `   `             `  `[email\xa0protected]@###z`                         \n', '####################@@WWWWMxxn#+*i;;:,,,...`    `       ``       `` `[email\xa0protected]####M.`                         \n', '#################################@@@@[email\xa0protected]#+**i:.`     `   `` `:[email\xa0protected]####W: `                         \n', '@@#@###############################################@Mz+*;,.````.,izM#####Wi` `                         \n', ':,:;;i*[email\xa0protected]@@@@#####################################@@@[email\xa0protected]#######Wi` `                          \n', '  `    ```....,,,:;**[email\xa0protected]@@#####################################x;` `  `                        \n', '`             `    ` ```````..,;i*+++#[email\xa0protected]@@#################@####@z,````                           \n', '        ``          `` ```  `  `  ``      `.,.,::;*[email\xa0protected]#############M#:` `                              \n', '   `  `                      ``````            `  ``..:;*##xxxxxz*:.` `   ``                           \n', '                                                        ``````````  `                                  \n', '                                                                                                       \n', '                                                         ```    ```                                    \n', '                                                                                                       \n', '                                                            CT6 \n', '*/\n', '\n', '// SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity ^0.5.16;\n', '\n', '/**\n', ' * @dev Interface of the ERC20 standard as defined in the EIP.\n', ' */\n', 'interface IERC20 {\n', '    /**\n', '     * @dev Returns the amount of tokens in existence.\n', '     */\n', '    function totalSupply() external view returns (uint256);\n', '\n', '    /**\n', '     * @dev Returns the amount of tokens owned by `account`.\n', '     */\n', '    function balanceOf(address account) external view returns (uint256);\n', '\n', '    /**\n', "     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n", '     *\n', '     * Returns a boolean value indicating whether the operation succeeded.\n', '     *\n', '     * Emits a {Transfer} event.\n', '     */\n', '    function transfer(\n', '        address recipient,\n', '        uint256 amount\n', '    )\n', '        external\n', '        returns (bool);\n', '\n', '    /**\n', '     * @dev Returns the remaining number of tokens that `spender` will be\n', '     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n', '     * zero by default.\n', '     *\n', '     * This value changes when {approve} or {transferFrom} are called.\n', '     */\n', '    function allowance(\n', '        address owner,\n', '        address spender\n', '    )\n', '        external\n', '        view\n', '        returns (uint256);\n', '\n', '    /**\n', "     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n", '     *\n', '     * Returns a boolean value indicating whether the operation succeeded.\n', '     *\n', '     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n', '     * that someone may use both the old and the new allowance by unfortunate\n', '     * transaction ordering. One possible solution to mitigate this race\n', "     * condition is to first reduce the spender's allowance to 0 and set the\n", '     * desired value afterwards:\n', '     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n', '     *\n', '     * Emits an {Approval} event.\n', '     */\n', '    function approve(\n', '        address spender,\n', '        uint256 amount\n', '    )\n', '        external\n', '        returns (bool);\n', '\n', '    /**\n', '     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n', "     * allowance mechanism. `amount` is then deducted from the caller's\n", '     * allowance.\n', '     *\n', '     * Returns a boolean value indicating whether the operation succeeded.\n', '     *\n', '     * Emits a {Transfer} event.\n', '     */\n', '    function transferFrom(\n', '        address sender,\n', '        address recipient,\n', '        uint256 amount\n', '    )\n', '        external\n', '        returns (bool);\n', '\n', '    /**\n', '     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n', '     * another (`to`).\n', '     *\n', '     * Note that `value` may be zero.\n', '     */\n', '    event Transfer(\n', '        address indexed from,\n', '        address indexed to,\n', '        uint256 value\n', '    );\n', '\n', '    /**\n', '     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n', '     * a call to {approve}. `value` is the new allowance.\n', '     */\n', '    event Approval(\n', '        address indexed owner,\n', '        address indexed spender,\n', '        uint256 value\n', '    );\n', '}\n', '// File: lib/SafeERC20.sol\n', '\n', '// SPDX-License-Identifier: GPL-3.0-or-later\n', '\n', 'pragma solidity ^0.5.16;\n', '\n', '\n', '// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\n', 'library SafeERC20 {\n', '    function safeApprove(\n', '        IERC20 token,\n', '        address to,\n', '        uint256 value\n', '    ) internal {\n', "        // bytes4(keccak256(bytes('approve(address,uint256)')));\n", '        /* solium-disable-next-line */\n', '        (bool success, bytes memory data) = address(token).call(\n', '            abi.encodeWithSelector(0x095ea7b3, to, value)\n', '        );\n', '\n', '        require(\n', '            success && (data.length == 0 || abi.decode(data, (bool))),\n', '            "SafeERC20: APPROVE_FAILED"\n', '        );\n', '    }\n', '\n', '    function safeTransfer(\n', '        IERC20 token,\n', '        address to,\n', '        uint256 value\n', '    ) internal {\n', "        // bytes4(keccak256(bytes('transfer(address,uint256)')));\n", '        /* solium-disable-next-line */\n', '        (bool success, bytes memory data) = address(token).call(\n', '            abi.encodeWithSelector(0xa9059cbb, to, value)\n', '        );\n', '\n', '        require(\n', '            success && (data.length == 0 || abi.decode(data, (bool))),\n', '            "SafeERC20: TRANSFER_FAILED"\n', '        );\n', '    }\n', '\n', '    function safeTransferFrom(\n', '        IERC20 token,\n', '        address from,\n', '        address to,\n', '        uint256 value\n', '    ) internal {\n', "        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n", '        /* solium-disable-next-line */\n', '        (bool success, bytes memory data) = address(token).call(\n', '            abi.encodeWithSelector(\n', '                0x23b872dd,\n', '                from,\n', '                to,\n', '                value\n', '            )\n', '        );\n', '\n', '        require(\n', '            success && (data.length == 0 || abi.decode(data, (bool))),\n', '            "SafeERC20: TRANSFER_FROM_FAILED"\n', '        );\n', '    }\n', '}\n', '// File: lib/SafeMath.sol\n', '\n', 'pragma solidity ^0.5.16;\n', '\n', 'library SafeMath {\n', '    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        if (a == 0) {\n', '            return 0;\n', '        }\n', '\n', '        uint256 c = a * b;\n', '        require(c / a == b, "SafeMath: multiplication overflow");\n', '\n', '        return c;\n', '    }\n', '\n', '    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n', '\n', '        require(b > 0, "SafeMath: division by zero");\n', '        uint256 c = a / b;\n', '\n', '        return c;\n', '    }\n', '\n', '    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        require(b <= a, "SafeMath: subtraction overflow");\n', '        uint256 c = a - b;\n', '\n', '        return c;\n', '    }\n', '\n', '    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        uint256 c = a + b;\n', '        require(c >= a, "SafeMath: addition overflow");\n', '\n', '        return c;\n', '    }\n', '}\n', '// File: lib/Ownable.sol\n', '\n', '// SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity ^0.5.16;\n', '\n', '/**\n', ' * @dev Contract module which provides a basic access control mechanism, where\n', ' * there is an account (an owner) that can be granted exclusive access to\n', ' * specific functions.\n', ' *\n', ' * By default, the owner account will be the one that deploys the contract. This\n', ' * can later be changed with {transferOwnership}.\n', ' *\n', ' * This module is used through inheritance. It will make available the modifier\n', ' * `onlyOwner`, which can be applied to your functions to restrict their use to\n', ' * the owner.\n', ' */\n', 'contract Ownable {\n', '    address private _owner;\n', '\n', '    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n', '\n', '    /**\n', '     * @dev Initializes the contract setting the deployer as the initial owner.\n', '     */\n', '    constructor () internal {\n', '        _owner = msg.sender;\n', '        emit OwnershipTransferred(address(0), msg.sender);\n', '    }\n', '\n', '    /**\n', '     * @dev Returns the address of the current owner.\n', '     */\n', '    function owner() public view returns (address) {\n', '        return _owner;\n', '    }\n', '\n', '    /**\n', '     * @dev Throws if called by any account other than the owner.\n', '     */\n', '    modifier onlyOwner() {\n', '        require(_owner == msg.sender, "Ownable: caller is not the owner");\n', '        _;\n', '    }\n', '\n', '    /**\n', '     * @dev Leaves the contract without owner. It will not be possible to call\n', '     * `onlyOwner` functions anymore. Can only be called by the current owner.\n', '     *\n', '     * NOTE: Renouncing ownership will leave the contract without an owner,\n', '     * thereby removing any functionality that is only available to the owner.\n', '     */\n', '    function renounceOwnership() public onlyOwner {\n', '        emit OwnershipTransferred(_owner, address(0));\n', '        _owner = address(0);\n', '    }\n', '\n', '    /**\n', '     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n', '     * Can only be called by the current owner.\n', '     */\n', '    function transferOwnership(address newOwner) public onlyOwner {\n', '        require(newOwner != address(0), "Ownable: new owner is the zero address");\n', '        emit OwnershipTransferred(_owner, newOwner);\n', '        _owner = newOwner;\n', '    }\n', '}\n', '// File: browser/WhitelistSale.sol\n', '\n', '// SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity ^0.5.16;\n', 'pragma experimental ABIEncoderV2;\n', '\n', '\n', '\n', '\n', '\n', 'contract WhitelistSale is Ownable {\n', '\n', '    /* ========== Libraries ========== */\n', '\n', '    using SafeMath for uint256;\n', '    using SafeERC20 for IERC20;\n', '\n', '    /* ========== Struct ========== */\n', '\n', '    struct Participant {\n', '        uint256 allocation;\n', '        uint256 spent;\n', '    }\n', '\n', '    /* ========== Variables ========== */\n', '\n', '    IERC20 public currency;\n', '\n', '    mapping (address => Participant) public participants;\n', '\n', '    uint256 public totalHardCap;\n', '\n', '    uint256 public totalRaised;\n', '\n', '    bool public saleOpen;\n', '\n', '    /* ========== Events ========== */\n', '\n', '    event AllocationClaimed(address user, uint256 amount);\n', '\n', '    event AllocationSet(address user, uint256 amount);\n', '\n', '    event SaleStatusUpdated(bool status);\n', '\n', '    event HardCapUpdated(uint256 amount);\n', '\n', '    /* ========== Constructor ========== */\n', '\n', '    constructor(address currencyAddress) public {\n', '        currency = IERC20(currencyAddress);\n', '        saleOpen = false;\n', '    }\n', '\n', '    /* ========== Public Functions ========== */\n', '\n', '    function claimAllocation(\n', '        uint256 amount\n', '    )\n', '        external\n', '    {\n', '        // Get their total spend till date\n', '        uint256 participantSpent = participants[msg.sender].spent.add(amount);\n', '\n', '        uint256 newTotalRaised = totalRaised.add(amount);\n', '\n', '        require(\n', '            participantSpent <= participants[msg.sender].allocation,\n', '            "You cannot spend more than your allocation"\n', '        );\n', '\n', '        require(\n', '            saleOpen,\n', '            "The sale is not currently open"\n', '        );\n', '\n', '        require(\n', '            newTotalRaised <= totalHardCap,\n', '            "You cannot purchase more than the hard cap"\n', '        );\n', '\n', "        // Increase the user's spend amount otherwise they can keep purchasing\n", '        participants[msg.sender].spent = participantSpent;\n', '\n', '        totalRaised = newTotalRaised;\n', '\n', '        // Transfer the funds to the owner, no funds will be stored in this contract directly.\n', '        currency.safeTransferFrom(\n', '            msg.sender,\n', '            owner(),\n', '            amount\n', '        );\n', '\n', '        emit AllocationClaimed(msg.sender, amount);\n', '    }\n', '\n', '    /* ========== Admin Functions ========== */\n', '\n', '    function setHardCap(uint256 amount)\n', '        external\n', '        onlyOwner\n', '    {\n', '        totalHardCap = amount;\n', '\n', '        emit HardCapUpdated(amount);\n', '    }\n', '\n', '    function setAllocation(\n', '        address[] calldata users,\n', '        uint256[] calldata allocations\n', '    )\n', '        external\n', '        onlyOwner\n', '    {\n', "        // If there is a mismatch something hasn't been done correctly\n", '        require(\n', '            users.length == allocations.length,\n', '            "The users and amounts do not match"\n', '        );\n', '\n', '        for (uint256 i = 0; i < users.length; i++) {\n', '            participants[users[i]].allocation = allocations[i];\n', '\n', '            emit AllocationSet(users[i], allocations[i]);\n', '        }\n', '    }\n', '\n', '    function updateSaleStatus(\n', '        bool status\n', '    )\n', '        external\n', '        onlyOwner\n', '    {\n', '        require(\n', '            saleOpen != status,\n', '            "Cannot re-set the same status"\n', '        );\n', '\n', '        saleOpen = status;\n', '\n', '        emit SaleStatusUpdated(status);\n', '    }\n', '}']