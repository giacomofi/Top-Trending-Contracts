['/**\n', ' *Submitted for verification at Etherscan.io on 2021-06-13\n', '*/\n', '\n', '//SPDX-License-Identifier: MIT\n', 'pragma solidity ^0.8.3;\n', '\n', 'contract salvador {\n', '    \n', '    uint256 initialsupply = 10000*(10**6)*(10**18);\n', '    using SafeMath for uint256;\n', '    \n', '    string  public name      = "El Salvador Coin";\n', '    string  public symbol    = "ESDC";\n', '    uint    public decimals  = 18;\n', '    \n', '    \n', '\n', '    uint256 public totalSupply = initialsupply;\n', '    address admin;\n', '    \n', '    mapping (address => uint256 ) balances;\n', '    mapping (address => mapping (address => uint256)) allowed;\n', '    \n', '    function balanceOf(address tokenOwner) public view returns (uint) {\n', '        return balances[tokenOwner];\n', '    }\n', '    \n', '    function allowance(address tokenOwner, address spender)  public view returns (uint) {\n', '        return allowed[tokenOwner][spender];\n', '    }\n', '    \n', '    function transfer(address to, uint tokens) public returns (bool) {\n', '        require(balances[msg.sender] >= tokens);\n', '        balances[msg.sender]    =   balances[msg.sender].sub(tokens);\n', '        balances[to]            =   balances[to].add(tokens);\n', '        emit Transfer(msg.sender, to, tokens);\n', '        return true;\n', '    }\n', '    \n', '    function approve(address delegate,uint numTokens) public returns (bool) {\n', '        allowed[msg.sender][delegate] = numTokens;\n', '        emit Approval(msg.sender, delegate, numTokens);\n', '        return true;\n', '    }\n', '    function transferFrom(address owner, address buyer,uint numTokens) public returns (bool) {\n', '        require(numTokens <= balances[owner],"ERC20: insufficient balance ");\n', '        require(numTokens <= allowed[owner][msg.sender],"ERC20: insufficient allowance");\n', '        balances[owner] = balances[owner].sub(numTokens);\n', '        allowed[owner][msg.sender] =  allowed[owner][msg.sender].sub(numTokens);\n', '        balances[buyer] = balances[buyer].add(numTokens);\n', '        emit Transfer(owner, buyer, numTokens);\n', '        return true;\n', '    }\n', '     \n', '    constructor()  {\n', '        balances[msg.sender] =  initialsupply;\n', '        admin = msg.sender ;\n', '    }\n', '    \n', '    \n', '    event Approval(address indexed tokenOwner, address indexed spender,uint tokens);\n', '    event Transfer(address indexed from      , address indexed to     ,uint tokens);\n', '}\n', '\n', '\n', 'library SafeMath {\n', '    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n', '        assert(b <= a);\n', '        return (a - b);\n', '    }   \n', '    function add(uint256 a, uint256 b) internal pure returns (uint256)   {\n', '        uint256 c = a + b;\n', '        assert(c >= a);\n', '        return c;\n', '    }\n', '}']