['/**\n', ' *Submitted for verification at Etherscan.io on 2021-05-29\n', '*/\n', '\n', 'pragma solidity ^0.4.25;\n', '\n', '\n', '\n', ' contract EtherCash {\n', '     struct User {\n', '       address One;  \n', '       address fastreferer;\n', '       address secondreferer;\n', '       }\n', '       \n', '       mapping(address => User) public users;\n', '       uint prise = 10 finney;\n', '       address public owner;\n', '       event ownershipTransferred(address indexed previousowner, address indexed newowner);\n', '       event prisetransferred(uint _prise, uint newprise);\n', '  \n', '   constructor()public{\n', '        owner = msg.sender;\n', '        }\n', '        modifier onlyOwner() {\n', '    require(msg.sender == owner);\n', '    _;\n', '  }\n', '    function transferowner(address newowner) public onlyOwner {\n', '    require(newowner != address(0));\n', '    emit ownershipTransferred(owner, newowner);\n', '    owner = newowner;\n', '  }\n', '   function transferprise(uint newprise) public onlyOwner {\n', '    require(newprise != uint(0));\n', '    emit prisetransferred(prise, newprise);\n', '    prise = newprise;\n', '  }\n', '  \n', '  function Registracion(address One, address fastreferer) public payable {\n', '      address helper = msg.sender;\n', '      address sender = One;\n', '      address secondreferer = users[fastreferer].fastreferer;\n', '      require(One != fastreferer);\n', '      uint value = msg.value*44/100;\n', '      owner.transfer(value);\n', '      require(msg.value >= prise);\n', '      uint referervalue = msg.value*20/100;\n', '      uint sreferervalue = msg.value*30/100;\n', '      uint helpvalue = msg.value*5/100;\n', '      fastreferer.transfer(referervalue);\n', '      secondreferer.transfer(sreferervalue);\n', '      helper.transfer(helpvalue);\n', '       \n', '       User memory newUser;\n', '       newUser.fastreferer = fastreferer;\n', '       newUser.secondreferer = users[fastreferer].fastreferer;\n', '      \n', '       \n', '       users[sender] = newUser;\n', '       \n', '      \n', '  }\n', ' }']