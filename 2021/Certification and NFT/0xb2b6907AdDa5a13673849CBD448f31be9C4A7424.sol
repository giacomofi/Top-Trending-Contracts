['// SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity >=0.8.0 <0.9.0;\n', '\n', 'contract DeriVote {\n', '\n', '    event Vote(address indexed voter, uint256 indexed votingId, uint256 votingOption);\n', '\n', "    string public constant name = 'DeriVote';\n", '\n', '    uint256 public votingId;\n', '\n', '    uint256 public numVotingOptions;\n', '\n', '    uint256 public votingDeadline;\n', '\n', '    // Record voting topic for a specific voting id of `votingId`\n', '    mapping (uint256 => string) public votingTopics;\n', '\n', '    // Record voting option for voters\n', '    // `votingOption` starts from 1, 1 means the first votingTopic, 0 is reserved for no voting\n', '    mapping (uint256 => mapping (address => uint256)) public votingOptions;\n', '\n', '    address public controller;\n', '\n', '    constructor () {\n', '        controller = msg.sender;\n', '    }\n', '\n', '    function setController(address newController) public {\n', "        require(msg.sender == controller, 'DeriVote.setController: only controller');\n", '        controller = newController;\n', '    }\n', '\n', '    function initializeVote(string memory topic, uint256 nOptions, uint256 deadline) public {\n', "        require(msg.sender == controller, 'DeriVote.initializeVote: only controller');\n", "        require(block.timestamp > votingDeadline, 'DeriVote.initializeVote: still in voting');\n", "        require(deadline > block.timestamp, 'DeriVote.initializeVote: deadline not valid');\n", '\n', '        votingId += 1;\n', '        numVotingOptions = nOptions;\n', '        votingDeadline = deadline;\n', '        votingTopics[votingId] = topic;\n', '    }\n', '\n', '    function vote(uint256 votingOption) public {\n', "        require(block.timestamp <= votingDeadline, 'DeriVote.vote: voting expired');\n", "        require(votingOption > 0 && votingOption <= numVotingOptions, 'DeriVote.vote: invalid voting option');\n", '        votingOptions[votingId][msg.sender] = votingOption;\n', '\n', '        emit Vote(msg.sender, votingId, votingOption);\n', '    }\n', '\n', '}']