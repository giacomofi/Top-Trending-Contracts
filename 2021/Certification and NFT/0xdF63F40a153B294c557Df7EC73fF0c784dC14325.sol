['/**\n', ' *Submitted for verification at Etherscan.io on 2021-03-22\n', '*/\n', '\n', '// SPDX-License-Identifier: MIT\n', 'pragma solidity 0.8.2;\n', 'interface IERC20 {\n', '    function allowance(address owner, address spender) external view returns (uint256);\n', '    function transfer(address recipient, uint256 amount) external;\n', '    function transferFrom(address sender, address recipient, uint256 amount) external;\n', '}\n', 'contract BridgeAssistE {\n', '    address public owner;\n', '    IERC20 public TKN;\n', '\n', '    modifier restricted {\n', '        require(msg.sender == owner, "This function is restricted to owner");\n', '        _;\n', '    }\n', '    \n', '    event Collect(address indexed sender, uint256 amount);\n', '    event Dispense(address indexed sender, uint256 amount);\n', '    event TransferOwnership(address indexed previousOwner, address indexed newOwner);\n', '\n', '    function collect(address _sender, uint256 _amount) public restricted {\n', '        TKN.transferFrom(_sender, address(this), _amount);\n', '        emit Collect(_sender, _amount);\n', '    }\n', '\n', '    function dispense(address _sender, uint256 _amount) public restricted {\n', '        TKN.transfer(_sender, _amount);\n', '        emit Dispense(_sender, _amount);\n', '    }\n', '\n', '    function transferOwnership(address _newOwner) public restricted {\n', '        emit TransferOwnership(owner, _newOwner);\n', '        owner = _newOwner;\n', '    }\n', '\n', '    constructor(IERC20 _TKN, address _owner) {\n', '        TKN = _TKN;\n', '        owner = _owner;\n', '    }\n', '}']