['/**\n', ' *Submitted for verification at Etherscan.io on 2021-06-20\n', '*/\n', '\n', '// SPDX-License-Identifier: MIT\n', '\n', '// SIVA Pre-Sale Contract | T3M\n', '\n', 'pragma solidity ^0.7.6;\n', '\n', 'contract SIVA {\n', '    address payable public controller;\n', '    uint256 public totalRaised;\n', '    mapping (address => uint256) private _amountSent;\n', '    uint256 public deadline;\n', '    bool private status;\n', '    uint256 public salePriceETH;\n', '    address private SIVAcontract;\n', '    \n', '    constructor() payable {\n', '        controller = payable(msg.sender);\n', '        deadline = 1625943600;\n', '        status = true;\n', '        salePriceETH = 153531709095794;\n', '        SIVAcontract = 0xFD18E5BCfbc2f898ab00b430C2059f1389e1B55a;\n', '    }\n', '\n', '    function buySIVA() public payable {\n', '        require (block.timestamp < deadline, "Pre-Sale no Longer Active.");\n', '        totalRaised += msg.value;\n', '        _amountSent[msg.sender] += msg.value;\n', '    }\n', '\n', '    function conclude() public {\n', '        require (msg.sender == controller, "Unable.");\n', '        uint amount = address(this).balance;\n', '        (bool success,) = controller.call{value: amount}("");\n', '        require(success, "Failed to send Ether");\n', '        status = false;\n', '    }\n', '    \n', '    function presaleBalance() public view returns (uint256) {\n', '        return address(this).balance;\n', '    }\n', '    \n', '    function userETH(address _useraddress) public view returns (uint256) {\n', '        return _amountSent[_useraddress];\n', '    }\n', '    \n', '    function userShare(address _useraddress) public view returns (uint256) {\n', '        uint256 tokens = _amountSent[_useraddress] / salePriceETH * 10 ** 18;\n', '        return tokens;\n', '    }\n', '    \n', '    function adjustDeadline(uint256 _deadline) public virtual returns (bool) {\n', '        require (msg.sender == controller, "Unable.");\n', '        deadline = _deadline;\n', '        return true;\n', '    }\n', '    \n', '    function adjustPrice(uint256 _price) public virtual returns (bool) {\n', '        require (msg.sender == controller, "Unable.");\n', '        salePriceETH = _price;\n', '        return true;\n', '    }\n', '\n', '    function isLive() public view returns (bool) {\n', '        return status;\n', '    }\n', '}']