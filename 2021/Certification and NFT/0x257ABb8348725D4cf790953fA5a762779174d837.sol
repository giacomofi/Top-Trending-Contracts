['/**\n', ' *Submitted for verification at Etherscan.io on 2021-03-07\n', '*/\n', '\n', '// SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity <=0.7.4;\n', '\n', '// @name Rich\n', '// @dev Contract to track richest owner and name and take ownership by paying cost\n', 'contract Rich {\n', '  string public richest = ""; // Name of richest\n', '  uint public cost = 0.001 ether; // Cost to take ownership\n', '  address payable public currentOwner; // Current richest owner\n', '\n', '  // Event to emit on owner change\n', '  event NewRichest(address indexed to, uint cost);\n', '\n', '  // On deployment\n', '  constructor() {\n', '    // Set initial richest to Anish\n', '    richest = "Anish Agnihotri";\n', '    currentOwner = msg.sender;\n', '  }\n', '\n', '  // @dev take ownership and become the richest\n', '  // @param _name to set as richest\n', '  function takeOwnership(string calldata _name) external payable {\n', '    require(msg.value == cost, "Rich: Insufficient paid value"); // Require payment\n', '    require(msg.sender != currentOwner, "Rich: Cannot be current owner"); // Ensure no duplicacy\n', '\n', '    currentOwner.transfer(msg.value); // Transfer fees to old owner\n', '    richest = _name; // Update name of richest\n', '    currentOwner = msg.sender; // Change current owner\n', '    cost = cost * 3 / 2; // Multiply cost of ownership by 1.5\n', '\n', '    // Emit new owner event\n', '    emit NewRichest(msg.sender, cost);\n', '  }\n', '}']