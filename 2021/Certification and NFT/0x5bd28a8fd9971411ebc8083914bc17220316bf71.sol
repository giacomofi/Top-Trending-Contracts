['/**\n', ' *Submitted for verification at Etherscan.io on 2021-03-25\n', '*/\n', '\n', '// SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity 0.8.1;\n', '\n', '/*\n', 'VERSION DATE: 17/03/2021\n', '*/\n', '\n', 'contract CheckAccess \n', '{\n', '\taddress public owner;\n', '\n', '\tmapping(address => bool) public admins;\n', '\t\n', '\tevent AddAdmin(address user);\n', '\tevent RemoveAdmin(address user);\n', '\t\n', '\tmodifier onlyOwner {\n', '        require(msg.sender == owner, "wrong owner");\n', '        _;\n', '    }\n', '\n', '\tconstructor() \n', '\t{\n', '\t\towner = msg.sender;\n', '    }\n', '\t\n', '    function changeOwner(address newOwner) public onlyOwner\n', '\t{\n', '\t\trequire(newOwner != address(0), "wrong address");\n', '\t\trequire(newOwner != owner, "wrong address");\n', '\n', '        owner = newOwner;\n', '    }\n', '\t\n', '    function addAdmin(address addr) public onlyOwner\n', '\t{\n', '\t\trequire(addr != address(0));\n', '\t\trequire(admins[addr] == false, "admin exists");\n', '\n', '\t\tadmins[addr] = true;\n', '\t\t\n', '\t\temit AddAdmin(addr);\n', '    }\n', '\n', '    function removeAdmin(address addr) public onlyOwner\n', '\t{\n', '\t\trequire(admins[addr] == true, "admin does not exists");\n', '\t\t\n', '\t\tdelete admins[addr];\n', '\t\t\n', '\t\temit RemoveAdmin(addr);\n', '    }\n', '\t\n', '\tfunction isAdmin(address addr) public view returns (bool)\n', '\t{\n', '\t\treturn( admins[addr] );\n', '    }\n', '}']