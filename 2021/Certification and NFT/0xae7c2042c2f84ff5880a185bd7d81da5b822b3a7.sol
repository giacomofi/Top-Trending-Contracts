['/**\n', '* SPDX-License-Identifier: LicenseRef-Aktionariat\n', '*\n', '* MIT License with Automated License Fee Payments\n', '*\n', '* Copyright (c) 2020 Aktionariat AG (aktionariat.com)\n', '*\n', '* Permission is hereby granted to any person obtaining a copy of this software\n', '* and associated documentation files (the "Software"), to deal in the Software\n', '* without restriction, including without limitation the rights to use, copy,\n', '* modify, merge, publish, distribute, sublicense, and/or sell copies of the\n', '* Software, and to permit persons to whom the Software is furnished to do so,\n', '* subject to the following conditions:\n', '*\n', '* - The above copyright notice and this permission notice shall be included in\n', '*   all copies or substantial portions of the Software.\n', '* - All automated license fee payments integrated into this and related Software\n', '*   are preserved.\n', '*\n', '* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n', '* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n', '* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n', '* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n', '* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n', '* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n', '* SOFTWARE.\n', '*/\n', 'pragma solidity >=0.8;\n', '\n', 'import "./Shares.sol";\n', '\n', '/**\n', ' * @title CompanyName AG Shares\n', ' * @author Luzius Meisser, [email\xa0protected]\n', ' *\n', ' * These tokens are uncertified shares (Wertrechte according to the Swiss code of obligations),\n', ' * with this smart contract serving as onwership registry (Wertrechtebuch), but not as shareholder\n', ' * registry, which is kept separate and run by the company. This is equivalent to the traditional system\n', ' * of having physical share certificates kept at home by the shareholders and a shareholder registry run by\n', ' * the company. Just like with physical certificates, the owners of the tokens are the owners of the shares.\n', ' * However, in order to exercise their rights (for example receive a dividend), shareholders must register\n', ' * with the company. For example, in case the company pays out a dividend to a previous shareholder because\n', ' * the current shareholder did not register, the company cannot be held liable for paying the dividend to\n', ' * the "wrong" shareholder. In relation to the company, only the registered shareholders count as such.\n', ' * Registration requires setting up an account with ledgy.com providing your name and address and proving\n', ' * ownership over your addresses.\n', ' * @notice The main addition is a functionality that allows the user to claim that the key for a certain address is lost.\n', ' * @notice In order to prevent malicious attempts, a collateral needs to be posted.\n', ' * @notice The contract owner can delete claims in case of disputes.\n', ' */\n', 'contract SharesWithPredecessor is Shares {\n', '\n', '    Shares private immutable predecessor;\n', '\n', '    constructor(address _predecessor, string memory _symbol, string memory _name, string memory _terms, uint256 _totalShares) Shares(_symbol, _name, _terms, _totalShares) {\n', '        predecessor = Shares(_predecessor);\n', '    }\n', '\n', '    function convertOldShares() public {\n', '        uint256 balance = predecessor.balanceOf(msg.sender);\n', '        predecessor.transferFrom(msg.sender, address(this), balance);\n', '        predecessor.burn(balance);\n', '        _mint(msg.sender, balance);\n', '    }\n', '\n', '}']