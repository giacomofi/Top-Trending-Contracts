['// SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity ^0.6.12;\n', 'pragma experimental ABIEncoderV2;\n', '\n', 'library Constants {\n', '    uint256 private constant MAX = ~uint256(0);\n', '    uint256 private constant _launchSupply = 185000 * 10**9;\n', '    uint256 private constant _largeTotal = (MAX - (MAX % _launchSupply));\n', '\n', '    uint256 private constant _deployerCost = 10 ether;\n', '\n', '    uint256 private constant _baseExpansionFactor = 300;\n', '    uint256 private constant _baseContractionFactor = 100;\n', '    uint256 private constant _baseUtilityFee = 50;\n', '    uint256 private constant _baseContractionCap = 1000;\n', '\n', '    uint256 private constant _presaleIndividualCap = 1 ether;\n', '    uint256 private constant _presaleIndividualMin = 1 ether;\n', '    uint256 private constant _presaleCap = 1 * 10**5 * 10**9;\n', '    uint256 private constant _maxPresaleGas = 200000000000;\n', '\n', '    uint256 private constant _epochLength = 30 minutes;\n', '\n', '    address private constant _routerAddress = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\n', '    address private constant _factoryAddress = 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;\n', '    address payable private constant _deployerAddress = 0x083c3b9a697596755834dbEF3D0a70a77c36Ae07;\n', '\n', '    string private constant _name = "UPSTABLE.PROTOCOL";\n', '    string private constant _symbol = "UPS";\n', '    uint8 private constant _decimals = 9;\n', '\n', '\n', '    /****** Getters *******/\n', '    function getLaunchSupply() internal pure returns (uint256) {\n', '        return _launchSupply;\n', '    }\n', '    function getLargeTotal() internal pure returns (uint256) {\n', '        return _largeTotal;\n', '    }\n', '    function getBaseExpansionFactor() internal pure returns (uint256) {\n', '        return _baseExpansionFactor;\n', '    }\n', '    function getBaseContractionFactor() internal pure returns (uint256) {\n', '        return _baseContractionFactor;\n', '    }\n', '    function getBaseContractionCap() internal pure returns (uint256) {\n', '        return _baseContractionCap;\n', '    }\n', '    function getDeployerCost() internal pure returns (uint256) {\n', '        return _deployerCost;\n', '    }\n', '    function getPresaleCap() internal pure returns (uint256) {\n', '        return _presaleCap;\n', '    }\n', '    function getPresaleIndividualMin() internal pure returns (uint256) {\n', '        return _presaleIndividualMin;\n', '    }\n', '    function getPresaleIndividualCap() internal pure returns (uint256) {\n', '        return _presaleIndividualCap;\n', '    }\n', '    function getMaxPresaleGas() internal pure returns (uint256) {\n', '        return _maxPresaleGas;\n', '    }\n', '    function getBaseUtilityFee() internal pure returns (uint256) {\n', '        return _baseUtilityFee;\n', '    }\n', '    function getEpochLength() internal pure returns (uint256) {\n', '        return _epochLength;\n', '    }\n', '    function getRouterAdd() internal pure returns (address) {\n', '        return _routerAddress;\n', '    }\n', '    function getFactoryAdd() internal pure returns (address) {\n', '        return _factoryAddress;\n', '    }\n', '    function getDeployerAdd() internal pure returns (address payable) {\n', '        return _deployerAddress;\n', '    }\n', '    function getName() internal pure returns (string memory)  {\n', '        return _name;\n', '    }\n', '    function getSymbol() internal pure returns (string memory) {\n', '        return _symbol;\n', '    }\n', '    function getDecimals() internal pure returns (uint8) {\n', '        return _decimals;\n', '    }\n', '\n', '}']