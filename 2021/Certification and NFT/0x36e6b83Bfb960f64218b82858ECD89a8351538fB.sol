['interface Ilsw {\n', '     function setDELTAToken(address deltaToken, bool delegateCall) external;\n', '}\n', '\n', 'contract Fixer {\n', '\n', '    address public owner;\n', '    address public pendingLSWOwner;\n', '    Ilsw constant LSW = Ilsw(0xdaFCE5670d3F67da9A3A44FE6bc36992e5E2beaB);\n', '    address public addressToFix;\n', '    address public fixer;\n', '\n', '    constructor () public {\n', '        owner = msg.sender;\n', '        pendingLSWOwner = address(this);  //  we get the LSW first can swithc back out of it with switchLSWOwner\n', '    }\n', '\n', '    function setOwnerOfFixerContract(address _newOwner) public onlyOwner() {\n', '        owner = _newOwner;\n', '    }\n', '\n', '    function setFixerDelegate(address _newFixer) public onlyOwner() {\n', '        fixer = _newFixer;\n', '    }\n', '\n', '    function switchLSWOwner(address _newOwner) public onlyOwner() {\n', '        pendingLSWOwner = _newOwner;\n', '        callDelegate();\n', '    }\n', '\n', '    modifier onlyOwner() {\n', '        require(msg.sender == owner);\n', '        _;\n', '    }\n', '\n', '    function fixAddress(address _addressToFix)  public  {\n', '        addressToFix = _addressToFix;\n', '        callDelegate();\n', '        addressToFix = address(0);\n', '    }\n', '\n', '    function callDelegate() internal {\n', '        LSW.setDELTAToken(fixer, true);\n', '    }\n', '\n', '\n', '\n', '}\n', '\n', '{\n', '  "optimizer": {\n', '    "enabled": true,\n', '    "runs": 200\n', '  },\n', '  "outputSelection": {\n', '    "*": {\n', '      "*": [\n', '        "evm.bytecode",\n', '        "evm.deployedBytecode",\n', '        "abi"\n', '      ]\n', '    }\n', '  },\n', '  "libraries": {}\n', '}']