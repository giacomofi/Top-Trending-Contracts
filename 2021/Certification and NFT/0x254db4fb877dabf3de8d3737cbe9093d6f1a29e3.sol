['/**\n', ' *Submitted for verification at Etherscan.io on 2021-04-29\n', '*/\n', '\n', 'pragma solidity 0.5.10;\n', '\n', 'contract UnifiedLogger {\n', '    bytes32 private constant GUARD_VALUE = keccak256("guard.bytes32");\n', '    address gatedLogBatcherLib;\n', '    bytes32 guard;\n', '\n', '    struct UnlockSchedule {\n', '        address beneficiary;\n', '        address token;\n', '        uint256 totalAmount;\n', '        uint256 start;\n', '        uint256 end;\n', '        uint256 duration;\n', '    }\n', '\n', '    mapping(address => UnlockSchedule[]) public unlockSchedules;\n', '\n', '    event UnlockScheduleSet(\n', '        address indexed beneficiary,\n', '        address token,\n', '        uint256 totalAmount,\n', '        uint256 start,\n', '        uint256 end,\n', '        uint256 duration,\n', '        uint256 indexed timestamp,\n', '        uint256 indexed blockNumber\n', '    );\n', '    event DiggPegRewards(address indexed beneficiary, uint256 response, uint256 rate, uint256 indexed timestamp, uint256 indexed blockNumber);\n', '\n', '    event BatchLogs(bytes32 contentHash);\n', '\n', '    constructor(address _gatedLogBatcherLib) public {\n', '        gatedLogBatcherLib = _gatedLogBatcherLib;\n', '        guard = GUARD_VALUE;\n', '    }\n', '\n', '    function batchLogs(bytes memory logs, bytes32 contentHash) public {\n', '        require(guard != GUARD_VALUE);\n', '        (bool success, bytes memory data) = gatedLogBatcherLib.delegatecall(abi.encodeWithSignature("multiSend(bytes)", logs));\n', '        emit BatchLogs(contentHash);\n', '    }\n', '}']