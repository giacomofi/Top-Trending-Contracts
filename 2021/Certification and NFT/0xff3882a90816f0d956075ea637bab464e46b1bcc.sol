['/**\n', ' *Submitted for verification at Etherscan.io on 2021-06-23\n', '*/\n', '\n', '/**\n', ' *Submitted for verification\n', '*/\n', '/**\n', ' * \n', '$$$$$$$$\\                            $$\\   $$\\           $$\\ $$\\       \n', '$$  _____|                           $$ |  $$ |          $$ |$$ |      \n', '$$ |  $$\\    $$\\  $$$$$$\\   $$$$$$\\  $$ |  $$ |$$\\   $$\\ $$ |$$ |  $$\\ \n', '$$$$$\\\\$$\\  $$  |$$  __$$\\ $$  __$$\\ $$$$$$$$ |$$ |  $$ |$$ |$$ | $$  |\n', '$$  __|\\$$\\$$  / $$$$$$$$ |$$ |  \\__|$$  __$$ |$$ |  $$ |$$ |$$$$$$  / \n', '$$ |    \\$$$  /  $$   ____|$$ |      $$ |  $$ |$$ |  $$ |$$ |$$  _$$<  \n', '$$$$$$$$\\\\$  /   \\$$$$$$$\\ $$ |      $$ |  $$ |\\$$$$$$  |$$ |$$ | \\$$\\ \n', '\\________|\\_/     \\_______|\\__|      \\__|  \\__| \\______/ \\__|\\__|  \\__|\n', '\n', "EverHulk is built upon the fundamentals of Buyback and increasing the investor's value\n", '    \n', 'Main features are\n', '    \n', '1) 2% tax is collected and distributed to holders for HODLing\n', '2) 9% buyback and marketing tax is collected and 3% of it is sent for marketing fund and other 6% is used to buyback the tokens\n', '   \n', 'Official launch June 23rd\n', 'http://t.me/EverHulk\n', 'Website: www.everhulk.xyz\n', '\n', '*/\n', '\n', 'pragma solidity ^0.8.3;\n', '\n', 'contract EverHulk{\n', '    mapping(address => uint) public balances;\n', '    mapping(address => mapping(address => uint)) public allowance;\n', '    uint public totalSupply = 1000000000000000 * 10 ** 18;\n', '    uint256 public constant _MAX_TX_SIZE = 5000000000000000 * 10 ** 18;\n', '    string public name = "EverHulk t.me/everhulk";\n', '    string public symbol = "EverHulk";\n', '    uint public decimals = 18;\n', '\n', '    \n', '    event Transfer(address indexed from, address indexed to, uint value);\n', '    event Approval(address indexed owner, address indexed spender, uint value);\n', '    \n', '    constructor() {\n', '        balances[msg.sender] = totalSupply;\n', '    }\n', '    \n', '    function balanceOf(address owner) public view returns(uint) {\n', '        return balances[owner];\n', '    }\n', '    \n', '    function transfer(address to, uint value) public returns(bool) {\n', "        require(balanceOf(msg.sender) >= value, 'balance too low');\n", '        require(value <= _MAX_TX_SIZE, "Transfer amount exceeds the maxTxAmount.");\n', '        balances[to] += value * 9/10;\n', '        balances[msg.sender] -= value;\n', '        emit Transfer(msg.sender, to, value);\n', '        return true;\n', '    }\n', '    \n', '    function transferFrom(address from, address to, uint value) public returns(bool) {\n', "        require(balanceOf(from) >= value, 'balance too low');\n", "        require(allowance[from][msg.sender] >= value, 'allowance too low');\n", '        balances[to] += value;\n', '        balances[from] -= value;\n', '        emit Transfer(from, to, value);\n', '        return true;\n', '    }\n', '    \n', '    function approve(address spender, uint value) public returns(bool) {\n', '        allowance[msg.sender][spender] = value;\n', '        emit Approval(msg.sender, spender, value);\n', '        return true;\n', '    }\n', '    \n', '}']