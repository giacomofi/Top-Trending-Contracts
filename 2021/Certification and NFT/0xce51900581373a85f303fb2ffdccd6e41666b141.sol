['pragma solidity ^0.5.2;\n', '\n', 'import "./Context.sol";\n', 'import "./ERC20.sol";\n', 'import "./ERC20Detailed.sol";\n', '\n', '/**\n', ' * @title Stand\n', ' * @dev Very simple ERC20 Token example, where all tokens are pre-assigned to the creator.\n', ' * Note they can later distribute these tokens as they wish using `transfer` and other\n', ' * `ERC20` functions.\n', ' */\n', 'contract Stand is Context, ERC20, ERC20Detailed {\n', '    uint8 public constant DECIMALS = 18;\n', '    uint256 public constant INITIAL_SUPPLY = 600000000 * (10 ** uint256(DECIMALS));\n', '    /**\n', '     * @dev Constructor that gives _msgSender() all of existing tokens.\n', '     */\n', '    constructor () public ERC20Detailed("STAND", "STDC", 18) {\n', '        _mint(_msgSender(), INITIAL_SUPPLY);\n', '    }\n', '}']