['pragma solidity ^0.7.0;\n', 'pragma experimental ABIEncoderV2;\n', '\n', 'import { Variables } from "./variables.sol";\n', '\n', 'interface IndexInterface {\n', '    function list() external view returns (address);\n', '}\n', '\n', 'interface ListInterface {\n', '    function addAuth(address user) external;\n', '    function removeAuth(address user) external;\n', '}\n', '\n', 'contract Constants is Variables {\n', '    uint public constant implementationVersion = 1;\n', '    // InstaIndex Address.\n', '    address public constant instaIndex = 0x2971AdFa57b20E5a416aE5a708A8655A9c74f723;\n', '    // The Account Module Version.\n', '    uint public constant version = 2;\n', '}\n', '\n', 'contract Record is Constants {\n', '\n', '    event LogEnableUser(address indexed user);\n', '    event LogDisableUser(address indexed user);\n', '\n', '    /**\n', '     * @dev Check for Auth if enabled.\n', '     * @param user address/user/owner.\n', '     */\n', '    function isAuth(address user) public view returns (bool) {\n', '        return _auth[user];\n', '    }\n', '\n', '    /**\n', '     * @dev Enable New User.\n', '     * @param user Owner address\n', '    */\n', '    function enable(address user) public {\n', '        require(msg.sender == address(this) || msg.sender == instaIndex, "not-self-index");\n', '        require(user != address(0), "not-valid");\n', '        require(!_auth[user], "already-enabled");\n', '        _auth[user] = true;\n', '        ListInterface(IndexInterface(instaIndex).list()).addAuth(user);\n', '        emit LogEnableUser(user);\n', '    }\n', '\n', '    /**\n', '     * @dev Disable User.\n', '     * @param user Owner address\n', '    */\n', '    function disable(address user) public {\n', '        require(msg.sender == address(this), "not-self");\n', '        require(user != address(0), "not-valid");\n', '        require(_auth[user], "already-disabled");\n', '        delete _auth[user];\n', '        ListInterface(IndexInterface(instaIndex).list()).removeAuth(user);\n', '        emit LogDisableUser(user);\n', '    }\n', '\n', '}\n', '\n', 'contract InstaDefaultImplementation is Record {\n', '\n', '    receive() external payable {}\n', '}\n', '\n', 'pragma solidity ^0.7.0;\n', '\n', 'contract Variables {\n', '    // Auth Module(Address of Auth => bool).\n', '    mapping (address => bool) internal _auth;\n', '}']