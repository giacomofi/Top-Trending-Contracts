['/**\n', ' *Submitted for verification at Etherscan.io on 2021-04-30\n', '*/\n', '\n', '/**\n', ' *Submitted for verification at Etherscan.io on 2021-04-27\n', '*/\n', '\n', '// SPDX-License-Identifier: MIT\n', 'pragma solidity 0.8.3;\n', '\n', '// This contract accepts ETH, delivering it to the miner of the current block.\n', '// The FlashbotsPayment event is interpretted by Flashbots MEV-geth at block construction time to determine bundle profitability\n', '// queueEther() can be used if multiple transactions pay the miner, saving gas from emitting multiple events and sending ETH twice\n', '\n', 'contract FlashbotsMinerPaymentV1 {\n', '    event FlashbotsPayment(address coinbase, address msgSender, uint256 amount);\n', '\n', '    receive() external payable {\n', '        _payMiner();\n', '    }\n', '    \n', '    function _payMiner() private {\n', '        uint256 amount = address(this).balance;\n', '        payable(block.coinbase).transfer(amount);\n', '        emit FlashbotsPayment(block.coinbase, msg.sender, amount);\n', '    }\n', '    \n', '    function payMiner() external payable {\n', '        _payMiner();\n', '    }\n', '    \n', '    function queueEther() external payable { }\n', '}']