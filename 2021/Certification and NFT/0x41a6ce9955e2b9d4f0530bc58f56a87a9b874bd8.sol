['/**\n', ' *Submitted for verification at Etherscan.io on 2021-05-16\n', '*/\n', '\n', '/**\n', ' *SPDX-License-Identifier: Unlicensed\n', '*/\n', '\n', 'pragma solidity ^0.6.12;\n', '\n', 'interface IERC20 {\n', '    function balanceOf(address account) external view returns (uint256);\n', '    function transfer(address recipient, uint256 amount) external returns (bool);\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '}\n', '\n', 'contract ChadogeAirdrop {\n', '    uint256 public total;    \n', '    uint256 public airdrop = 1 * 10**9;\n', '    address public Token;\n', '    mapping(address => bool) public claimed;\n', '\t\n', '    event Claimed(address addr,uint256 n);\n', '    constructor(address _tokenAddress) public {  \n', '        Token = _tokenAddress;\n', '    }  \n', '    function claimAirdrop() external {\n', '\t\trequire(tx.gasprice>=30,"not fair");\n', '        require(!claimed[msg.sender],"claimed");\n', '        claimed[msg.sender]=true;\n', '        total++;\n', '        IERC20 token = IERC20(Token);\n', '        uint256 tb = token.balanceOf(address(this));\n', '        require(airdrop<=tb,"not enough");\n', '        token.transfer(msg.sender,airdrop);\n', '        emit Claimed(msg.sender,total);\n', '    }\n', '}']