['/**\n', ' *Submitted for verification at Etherscan.io on 2021-02-12\n', '*/\n', '\n', '/**\n', ' * SPDX-License-Identifier: UNLICENSED\n', ' * Submitted for verification at Etherscan.io on 2017-12-14\n', '*/\n', '\n', 'pragma solidity ^0.7.0;\n', '\n', '\n', 'abstract contract DateTime {\n', '\n', '    function getHour(uint timestamp) virtual public returns (uint8);\n', '}\n', '\n', 'contract SlavContract {\n', '    address private owner;\n', '\n', '  \taddress constant private SLAV_ADDR = 0x0625fAaD99bCD3d22C91aB317079F6616e81e3c0;\n', '\n', '    address constant private DATE_TIME_ADDR = 0x8Fc065565E3e44aef229F1D06aac009D6A524e82;\n', '    DateTime dateTime = DateTime(DATE_TIME_ADDR);\n', '\n', '\n', '    constructor()  {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    receive() external payable {\n', '\n', '    }\n', '    fallback () external payable {\n', '        \n', '    }\n', '\n', '    function getMyCoinsPlease() public {\n', '        uint8 hour = dateTime.getHour(block.timestamp);\n', '        require (hour > 16, "after 16:00 UTC only");\n', '        require (msg.sender == SLAV_ADDR);\n', '        msg.sender.transfer(address(this).balance);\n', '    }\n', '\n', '\n', '    function getBalance() view public returns (uint256){\n', '        return address(this).balance;\n', '    }\n', '}']