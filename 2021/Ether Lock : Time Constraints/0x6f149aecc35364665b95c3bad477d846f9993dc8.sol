['/**\n', ' *Submitted for verification at Etherscan.io on 2021-06-19\n', '*/\n', '\n', 'pragma solidity 0.6.7;\n', '\n', 'abstract contract StabilityFeeTreasuryLike {\n', '    function getAllowance(address) virtual public view returns (uint256, uint256);\n', '    function setTotalAllowance(address, uint256) virtual external;\n', '}\n', 'contract SFTreasuryAllowanceReseter {\n', '    // --- Variables ---\n', '    StabilityFeeTreasuryLike public treasury;\n', '\n', '    // --- Events ---\n', '    event ResetTotalAllowance(address account);\n', '\n', '    constructor(address treasury_) public {\n', '        require(treasury_ != address(0), "SFTreasuryAllowanceReseter/null-treasury");\n', '        treasury = StabilityFeeTreasuryLike(treasury_);\n', '    }\n', '\n', '    /*\n', '    * @notify Reset the total allowance for an address that has a positive perBlock allowance\n', '    */\n', '    function resetTotalAllowance(address account) external {\n', '        (, uint perBlockAllowance) = treasury.getAllowance(account);\n', '        require(perBlockAllowance > 0, "SFTreasuryAllowanceReseter/null-per-block-allowance");\n', '        treasury.setTotalAllowance(account, uint(-1));\n', '        emit ResetTotalAllowance(account);\n', '    }\n', '}']