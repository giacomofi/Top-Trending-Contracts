['/**\n', ' *Submitted for verification at Etherscan.io on 2021-06-10\n', '*/\n', '\n', 'pragma solidity 0.4.14;\n', '\n', 'contract ERC20Interface {\n', '  function transfer(address _to, uint256 _value) returns (bool success);\n', '  function balanceOf(address _owner) constant returns (uint256 balance);\n', '}\n', '\n', '/**\n', ' * Contract that will forward any incoming Ether to its creator\n', ' */\n', 'contract Forwarder {\n', '  address public parentAddress;\n', '  event ForwarderDeposited(address from, uint value, bytes data);\n', '\n', '  event TokensFlushed(\n', '    address tokenContractAddress,\n', '    uint value\n', '  );\n', '\n', '\n', '  function Forwarder() {\n', '    parentAddress = msg.sender;\n', '  }\n', '\n', '\n', '  modifier onlyParent {\n', '    if (msg.sender != parentAddress) {\n', '      revert();\n', '    }\n', '    _;\n', '  }\n', '\n', '  function() payable {\n', '    if (!parentAddress.call.value(msg.value)(msg.data))\n', '      revert();\n', '    ForwarderDeposited(msg.sender, msg.value, msg.data);\n', '  }\n', '\n', '  function flushTokens(address tokenContractAddress) onlyParent {\n', '    ERC20Interface instance = ERC20Interface(tokenContractAddress);\n', '    var forwarderAddress = address(this);\n', '    var forwarderBalance = instance.balanceOf(forwarderAddress);\n', '    if (forwarderBalance == 0) {\n', '      return;\n', '    }\n', '    if (!instance.transfer(parentAddress, forwarderBalance)) {\n', '      revert();\n', '    }\n', '    TokensFlushed(tokenContractAddress, forwarderBalance);\n', '  }\n', '\n', '  function flush() {\n', '    if (!parentAddress.call.value(this.balance)())\n', '      revert();\n', '  }\n', '}']