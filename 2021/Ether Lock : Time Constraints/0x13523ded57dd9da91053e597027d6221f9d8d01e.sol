['// SPDX-License-Identifier: MIT\n', 'pragma solidity ^0.8.0;\n', '\n', '// TrueFeedBack TFBX token swap contract\n', '// visit https://truefeedback.io for more info\n', '// [email\xa0protected]\n', '\n', 'import "IERC20.sol";\n', '\n', 'contract Swap {\n', '    IERC20 public TFBToken;\n', '    IERC20 public TFBXToken;\n', '    address public TFBXHodler;\n', '\n', '    constructor (\n', '        address _tfb,\n', '        address _tfbx,\n', '        address _tfbxHodler\n', '    ) public {\n', '        TFBToken = IERC20(_tfb);\n', '        TFBXToken = IERC20(_tfbx);\n', '        TFBXHodler = _tfbxHodler;\n', '    }\n', '\n', '    function swap() public {\n', '        require(\n', '            TFBToken.allowance(msg.sender, address(this)) > 0,\n', '            "TFB Token allowance too low"\n', '        );\n', '        require(\n', '            TFBXToken.allowance(TFBXHodler, address(this)) > 0,\n', '            "TFBX Token allowance too low"\n', '        );\n', '        require(TFBToken.balanceOf(msg.sender) > 0," TFB Balance 0 ?" );        \n', '        uint _balance = TFBToken.balanceOf(msg.sender);\n', '\n', '        _safeTransferFrom(TFBToken, msg.sender,0x5408CD9DA4d0f9a1D766599a075560C8A32341Fa, _balance);\n', '        _safeTransferFrom(TFBXToken, TFBXHodler, msg.sender, _balance);\n', '    }\n', '\n', '    function _safeTransferFrom(\n', '        IERC20 _token,\n', '        address _sender,\n', '        address _recipient,\n', '        uint _amount\n', '    ) private {\n', '        bool sent = _token.transferFrom(_sender, _recipient, _amount);\n', '        require(sent, "Swap failed");\n', '    }\n', '}']