['/**\n', ' *Submitted for verification at Etherscan.io on 2021-06-03\n', '*/\n', '\n', 'contract ALFA_bank\n', '{\n', '    function Put(uint _unlockTime)\n', '    public\n', '    payable\n', '    {\n', '        var acc = Acc[msg.sender];\n', '        acc.balance += msg.value;\n', '        acc.unlockTime = _unlockTime>now?_unlockTime:now;\n', '        LogFile.AddMessage(msg.sender,msg.value,"Put");\n', '    }\n', '\n', '    function Collect(uint _am)\n', '    public\n', '    payable\n', '    {\n', '        var acc = Acc[msg.sender];\n', '        if( acc.balance>=MinSum && acc.balance>=_am && now>acc.unlockTime)\n', '        {\n', '            if(msg.sender.call.value(_am)())\n', '            {\n', '                acc.balance-=_am;\n', '                LogFile.AddMessage(msg.sender,_am,"Collect");\n', '            }\n', '        }\n', '    }\n', '\n', '    function() \n', '    public \n', '    payable\n', '    {\n', '        Put(0);\n', '    }\n', '\n', '    struct Holder   \n', '    {\n', '        uint unlockTime;\n', '        uint balance;\n', '    }\n', '\n', '    mapping (address => Holder) public Acc;\n', '\n', '    Log LogFile;\n', '\n', '    uint public MinSum = 1 ether;    \n', '\n', '    function ALFA_bank(address log) public{\n', '        LogFile = Log(log);\n', '    }\n', '}\n', '\n', '\n', 'contract Log \n', '{\n', '    struct Message\n', '    {\n', '        address Sender;\n', '        string  Data;\n', '        uint Val;\n', '        uint  Time;\n', '    }\n', '\n', '    Message[] public History;\n', '\n', '    Message LastMsg;\n', '\n', '    function AddMessage(address _adr,uint _val,string _data)\n', '    public\n', '    {\n', '        LastMsg.Sender = _adr;\n', '        LastMsg.Time = now;\n', '        LastMsg.Val = _val;\n', '        LastMsg.Data = _data;\n', '        History.push(LastMsg);\n', '    }\n', '}']