['pragma solidity ^0.8.0;\n', '\n', 'interface I_ERC20 {\n', '    function balanceOf(address account) external view returns (uint256);\n', '    function transfer(address recipient, uint256 amount) external returns (bool);\n', '}\n', '\n', 'contract PausedReserve {\n', '\n', '    event Withdraw(address to, uint256 amount);\n', '\n', '    address public gov = 0xade20A93179003300529AfeF3853F9679234D929;\n', '    address public dai = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\n', '\n', '    constructor() {}\n', '\n', '    function withdraw(address to, uint256 amount, bool max) external {\n', '        require(msg.sender == gov, "PausedReserve: not gov");\n', '        if (max) {amount = I_ERC20(dai).balanceOf(address(this));}\n', '        require(\n', '            I_ERC20(dai).transfer(to, amount),\n', '            "withdraw: transfer failed"\n', '        );\n', '        emit Withdraw(to, amount);\n', '    }\n', '\n', '}\n', '\n', '{\n', '  "optimizer": {\n', '    "enabled": false,\n', '    "runs": 200\n', '  },\n', '  "outputSelection": {\n', '    "*": {\n', '      "*": [\n', '        "evm.bytecode",\n', '        "evm.deployedBytecode",\n', '        "abi"\n', '      ]\n', '    }\n', '  },\n', '  "libraries": {}\n', '}']