['/**\n', ' *Submitted for verification at Etherscan.io on 2021-02-19\n', '*/\n', '\n', 'pragma solidity 0.5.17;\n', '\n', 'contract Permissions {\n', '\n', '  address public permits;\n', '\n', '  constructor() public {\n', '    permits = msg.sender;\n', '  }\n', '\n', '  \n', '  modifier onlyPermits(){\n', '    require(msg.sender == permits);\n', '    _;\n', '  }\n', '\n', '}\n', '\n', '\n', '\n', ' \n', 'contract SZOReward{\n', '      function getReward(address _contract,address _wallet) public view returns(uint256);\n', '      \n', '}\n', ' \n', ' \n', ' contract S1SZORewardSum is Permissions{\n', '     uint256 public version = 1;\n', '     mapping(address=>bool) disPools;\n', '     address[] public allowPools;\n', '     \n', '     SZOReward szoReward;\n', '     \n', '     // All are Goerli\n', '     constructor() public{\n', '        allowPools.push(0xE29659A35260B87264eBf1155dD03B7DE17d9B26); // Pool Dai\n', '        allowPools.push(0x1C69D1829A5970d85bCe8dD4A4f7f568DB492c81); // Pool USDT\n', '        allowPools.push(0x93347FFA6020a3904790220E84f38594F35bac7D); // Pool USDC\n', '        \n', '        szoReward = SZOReward(0xceC492583F9C8A382502C5b9feE5DB777810a89a);\n', '     }\n', '     \n', '     function setSZOReward(address _addr) public onlyPermits{\n', '          szoReward = SZOReward(_addr);\n', '     }\n', '     \n', '     function summarySZOReward(address _addr) public view returns(uint256 sumBalance,uint256[] memory _pool){\n', '         _pool = new uint256[](allowPools.length);\n', '         \n', '         for(uint256 i=0;i<allowPools.length;i++){\n', '             if(disPools[allowPools[i]] == false){\n', '                 _pool[i] = szoReward.getReward(allowPools[i],_addr);\n', '                 sumBalance += _pool[i];\n', '             }\n', '         }\n', '     }\n', '     \n', '   \n', '     \n', ' }']