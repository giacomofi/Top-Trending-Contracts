['/**\n', ' *Submitted for verification at Etherscan.io on 2021-03-24\n', '*/\n', '\n', 'pragma solidity ^0.5.0;\n', '\n', 'interface ICryptoPunkLike {\n', '    function punkIndexToAddress(uint256) external view returns (address);\n', '}\n', '\n', 'contract FlexPunk {\n', '    address public owner = 0xA1Ed76f128084e70C683eB86b1A61FeFdc49268F;  \n', '    bool public paused = false;\n', '    struct ActiveFlex {\n', '        address flexer;\n', '        uint256 flexAmount;\n', '        uint256 id;\n', '        uint256 time;\n', '    }\n', '  \n', '    ActiveFlex public flex;\n', '    event NewFlex(address indexed _flexer, uint256 _id, uint256 _value);\n', '    event RevokeFlex(address indexed _address, uint256 _id, uint256 _days);\n', '\n', '    constructor(address _flexer, uint256 _flexAmount, uint256 _id, uint256 _time) public{\n', '        flex.flexer = _flexer;\n', '        flex.flexAmount = _flexAmount;\n', '        flex.id = _id;\n', '        flex.time = _time;\n', '        \n', '    }\n', '\n', '       modifier onlyDegenData {\n', '        require(\n', '            msg.sender == 0xA1Ed76f128084e70C683eB86b1A61FeFdc49268F,\n', '            "Excuse me, This doesn\'t belong to you"\n', '        );\n', '        _;\n', '    }\n', '\n', '    modifier isPaused {\n', '        require(\n', '            paused == false,\n', '            "sorry we have pause things for now. Too much Flexing is going on."\n', '        );\n', '        _;\n', '    }\n', '\n', ' \n', '    \n', '    function flexPunk(uint256 _id) public payable {\n', '        require(msg.value > .1 ether, "Minimu Flex is .1 ETH.");\n', '        require(ICryptoPunkLike(0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB).punkIndexToAddress(\n', '                _id\n', '            ) == msg.sender,\n', '            "Sender has to be the owner of the Punk"\n', '        );\n', '        require(\n', '            msg.value > flex.flexAmount,\n', '            "You Gotta Flex more than the Current Flex"\n', '        );\n', '        require(\n', '            block.timestamp > flex.time,\n', '            "You gotta Wait your turn to flex"\n', '        );\n', '        flex.flexAmount = msg.value;\n', '        flex.flexer = msg.sender;\n', '        flex.id = _id;\n', '        flex.time = block.timestamp + 1 days;\n', '        emit NewFlex(msg.sender, _id, msg.value);\n', '        \n', '    }\n', '\n', '    function contractBalance() public view returns (uint256) {\n', '        return address(this).balance;\n', '    }\n', '\n', '    function withdraw() public onlyDegenData {\n', '        msg.sender.transfer(address(this).balance);\n', '    }\n', '    \n', '    function revokeFlex(uint256 _id) public isPaused {\n', '         require(ICryptoPunkLike(0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB).punkIndexToAddress(\n', '                _id\n', '            ) == msg.sender,\n', '            "Sender has to be the owner of the Punk"\n', '        );\n', '        emit RevokeFlex(msg.sender, _id, block.timestamp);\n', '    }\n', '}']