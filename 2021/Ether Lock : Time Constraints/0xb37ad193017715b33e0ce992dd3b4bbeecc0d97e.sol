['/**\n', ' *Submitted for verification at Etherscan.io on 2021-05-20\n', '*/\n', '\n', '// SPDX-License-Identifier: MIT\n', '\n', 'pragma solidity ^0.8.4;\n', '\n', '/******************************************/\n', '/*       SyncDEX starts here              */\n', '/******************************************/\n', '\n', 'abstract contract SyncDEX \n', '\n', '{\n', '    function sync() external virtual;\n', '}\n', '\n', '\n', '/******************************************/\n', '/*       GulpDEX starts here              */\n', '/******************************************/\n', '\n', 'abstract contract GulpDEX \n', '\n', '{\n', '    function gulp(address token) external virtual;\n', '}\n', '\n', '/******************************************/\n', '/*       BenchmarkSync starts here       */\n', '/******************************************/\n', '\n', 'contract BenchmarkSync {\n', '\n', '    address public constant benchmark = 0x67c597624B17b16fb77959217360B7cD18284253;\n', '    \n', '    address owner1;\n', '    address owner2;\n', '    address owner3;\n', '    address owner4;\n', '    address owner5;\n', '    \n', '    SyncDEX[] public SyncPools;\n', '    GulpDEX[] public GulpPools;\n', '\n', '    modifier isOwner() \n', '    {\n', '        require (msg.sender == owner1 || msg.sender == owner2 || msg.sender == owner3 || msg.sender == owner4 || msg.sender == owner5);\n', '        _;\n', '    }\n', '    \n', '    /**\n', '     * @dev Sync liquidity pools. \n', '     */\n', '    function syncPools() public {\n', '        uint256 syncArrayLength = SyncPools.length;\n', '        for (uint256 i = 0; i < syncArrayLength; i++) \n', '        {\n', '            if (address(SyncPools[i]) != address(0)) {\n', '                SyncPools[i].sync();\n', '            }           \n', '        }\n', '\n', '        uint256 gulpArrayLength = GulpPools.length;\n', '        for (uint256 i = 0; i < gulpArrayLength; i++) \n', '        {\n', '            if (address(GulpPools[i]) != address(0)) {\n', '                GulpPools[i].gulp(benchmark);\n', '            }           \n', '        }\n', '    }\n', '    \n', '    /**\n', '     * @dev Add a new Liquidity Pool. \n', '     * @param _lpPool Address of Liquidity Pool.\n', '     */\n', '    function addSyncPool (address _lpPool) public isOwner {\n', '        SyncPools.push(SyncDEX(_lpPool));\n', '    }\n', '\n', '    /**\n', '     * @dev Add a new Liquidity Pool. \n', '     * @param _lpPool Address of Liquidity Pool.\n', '     */\n', '    function addGulpPool (address _lpPool) public isOwner {\n', '        GulpPools.push(GulpDEX(_lpPool));\n', '    }\n', '\n', '    /**\n', '     * @dev Remove a Liquidity Pool. \n', '     * @param _index Index of Liquidity Pool.\n', '     */\n', '    function removeSyncPool (uint256 _index) public isOwner {\n', '        delete SyncPools[_index];\n', '    }\n', '\n', '    /**\n', '     * @dev Remove a Liquidity Pool. \n', '     * @param _index Index of Liquidity Pool.\n', '     */\n', '    function removeGulpPool (uint256 _index) public isOwner {\n', '        delete GulpPools[_index];\n', '    }\n', '}']