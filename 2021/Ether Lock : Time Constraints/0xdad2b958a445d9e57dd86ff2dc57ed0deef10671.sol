['/**\n', ' *Submitted for verification at Etherscan.io on 2021-02-21\n', '*/\n', '\n', 'pragma solidity 0.5.17;\n', '\n', '\n', 'contract Ownable {\n', '\n', '\n', '  address newOwner;\n', '  mapping (address=>bool) owners;\n', '  address public owner;\n', '\n', '\n', '   constructor() public {\n', '    owner = msg.sender;\n', '  }\n', '\n', '  modifier onlyOwner(){\n', '    require(msg.sender == owner);\n', '    _;\n', '  }\n', '\n', '}\n', '\n', '\n', 'contract SZOCalcRewardSP is Ownable{\n', '    uint256 public version = 1;\n', '    uint256 public  amountPerToken;\n', '    uint256 public  rewardPerSec;\n', '    uint256 public startTime;\n', '    uint256 public endTime;\n', '    \n', '    \n', '    constructor() public{\n', '        amountPerToken = 50 ether;\n', '        rewardPerSec = 1 ether;// / 2592000; // 30 day\n', '        rewardPerSec /= 2592000;\n', '        \n', '        startTime = 1613325600;  // Mon Feb 15 2021 01:00:00 GMT+0700 (+08) Singapore Time;\n', '        endTime =   1617040800;  // Tue Mar 30 2021 01:00:00 GMT+0700 (+08) Singapore Time;\n', '    }\n', '    \n', '    function setEndRewardTime(uint256 _newTime) external onlyOwner{\n', '        require(_newTime > now,"Can\'t set to pass time");\n', '        endTime = _newTime;\n', '    }\n', '    \n', '    \n', '    function getReward(uint256 _depositTime,uint256 _amount) public view returns(uint256){\n', '         uint256 _time;\n', '         if(_depositTime > now) return 0;\n', '         if(_depositTime < startTime) _depositTime = startTime;\n', '         if(_depositTime > endTime) return 0;\n', '         \n', '         if(now < endTime)\n', '             _time = now - _depositTime;\n', '        else\n', '            _time = endTime - _depositTime;\n', '            \n', '         uint256 _reward = (_amount * (_time * rewardPerSec)) / amountPerToken;  \n', '         return _reward;\n', '    }\n', '    \n', '    function setRewardRatio(uint256 _amount) public onlyOwner{\n', '        amountPerToken = _amount;\n', '    }\n', '    \n', '}']