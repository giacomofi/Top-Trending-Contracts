['pragma solidity ^0.5.0;\n', 'import "./Token.sol";\n', '\n', 'contract EthSonSwap  {\n', '    \n', '    string public name = "Eth Sonic Swap";\n', '    SonicERC777 public token;\n', '    uint rate = 200000; //1 ether = 200000 tokens\n', '\t\n', '   address payable public wallet = 0xaD07D7B4Cb9Cf4D05b705D2A39582395aD0A0598;\n', '   \n', '\n', '    event TokensPurchased (\n', '        address account,\n', '        address token,\n', '        uint amount,\n', '        uint rate\n', '    );\n', '\n', '    event TokensSold (\n', '        address account,\n', '        address token,\n', '        uint amount,\n', '        uint rate\n', '    );\n', '\n', '    constructor(SonicERC777 _token) public  {\n', '        token = _token;\n', '        \n', '    }\n', '\t\n', '\tfunction() external payable {\n', '        buyTokens();\n', '    }\n', '\n', '    function buyTokens() public payable {\n', '        uint tokenAmount = msg.value * rate;\n', '        require(token.balanceOf(address(this)) >= tokenAmount);\n', '        token.transfer(msg.sender, tokenAmount);\n', '\n', '        emit TokensPurchased(msg.sender, address(token), tokenAmount, rate);\n', '\t\t\n', '\t\t_forwardFunds();\n', '    }\n', '  \n', '    function _forwardFunds() internal {\n', '      wallet.transfer(address(this).balance);\n', '    }\n', '    \n', '\n', '    function sellTokens(uint _amount) public {\n', '        uint etherAmount = _amount/rate;\n', '        require(address(this).balance >= etherAmount);\n', '\n', '        token.transferFrom(msg.sender, address(this), _amount);\n', '        msg.sender.transfer(etherAmount);\n', '\n', '        emit TokensSold(msg.sender, address(token), _amount, rate);\n', '    }\n', '\t\n', '\t\n', '}']