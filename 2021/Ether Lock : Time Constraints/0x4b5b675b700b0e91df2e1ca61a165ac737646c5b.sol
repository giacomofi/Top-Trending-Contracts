['/**\n', ' *Submitted for verification at Etherscan.io on 2021-06-03\n', '*/\n', '\n', '// SPDX-License-Identifier: MIT\n', 'pragma solidity ^0.8.4;\n', '\n', '/**\n', ' * @dev This contract is deployed as an interim patch while the DateTime library is upgraded. \n', ' */\n', 'contract Test {\n', '\n', '\n', '\taddress public original = 0x1a6184CD4C5Bea62B0116de7962EE7315B7bcBce;\n', '\n', '    function getMonth0() public view returns (bool) {\n', '        \n', '        DateTimeAPI dateTime = DateTimeAPI(original);\n', '        uint value = dateTime.getMonth(block.timestamp);\n', '        \n', '        if (value == 6) {\n', '            return true;\n', '        }\n', '        false;\n', '    }\n', '\n', '\n', '    address public update = 0x740a637ADD6492e5FaA907AF0fe708770B737058;\n', '\n', '    function getMonth1() public view returns (bool) {\n', '\n', '        DateTimeAPI dateTime = DateTimeAPI(update);\n', '        uint value = dateTime.getMonth(block.timestamp);\n', '        \n', '        if (value == 6) {\n', '            return true;\n', '        }\n', '        false;\n', '    }\n', '\n', '\n', '    address public patch = 0x2a837A67f756517654bf43548b2B4CBEd364B4D0; \n', '\n', '    function getMonth2() public view returns (bool) {\n', '        \n', '        DateTimeAPI dateTime = DateTimeAPI(patch);\n', '        uint value = dateTime.getMonth(block.timestamp);\n', '        \n', '        if (value == 6) {\n', '            return true;\n', '        }\n', '        false;\n', '    }\n', '\n', '}\n', '\n', 'abstract contract DateTimeAPI {\n', '    function getMonth(uint timestamp) public view virtual returns (uint8);\n', '}']