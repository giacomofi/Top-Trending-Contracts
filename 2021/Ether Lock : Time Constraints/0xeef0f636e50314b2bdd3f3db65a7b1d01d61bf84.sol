['/**\n', ' *Submitted for verification at Etherscan.io on 2021-03-25\n', '*/\n', '\n', 'pragma solidity >=0.4.22 <0.6.0;\n', '\n', 'contract Token {\n', '    function decimals() public view returns (uint);\n', '    function balanceOf(address) public view returns (uint);\n', '    function transfer(address, uint) public returns (bool);\n', '}\n', '\n', 'contract Hold\n', '{\n', '    uint256 public time;\n', '    address payable public owner;\n', '    \n', '    constructor () public {\n', '        \n', '        owner = msg.sender;\n', '        time = now + 5 minutes;\n', '    }\n', '    \n', '    modifier onlyOwner() {\n', '        require(owner == msg.sender);\n', '        _;\n', '    }\n', '    \n', '    modifier checkTime(uint256 _time) {\n', '        require(time < _time);\n', '\t\trequire(_time - time <= 31536000);\n', '        _;\n', '    }\n', '    \n', '    function setTime(uint256 _time) public checkTime(_time) onlyOwner {\n', '\t\ttime = _time;\n', '    }\n', '    \n', '    function getEthereum() public onlyOwner {\n', '        if(now < time)\n', '\t\t{\n', '\t\t\trevert();\n', '        }\n', '\t\telse\n', '\t\t{\n', '\t\t\towner.transfer(address(this).balance);\n', '\t\t}\n', '    }\n', '\n', '    function getToken(address _token) public onlyOwner {\n', '        if(now < time)\n', '        {\n', '            revert();\n', '        }\n', '        else\n', '        {\n', '            Token(_token).transfer(owner, Token(_token).balanceOf(address(this)));\n', '        }\n', '    }\n', '    \n', '    function () payable external {\n', '        \n', '    }\n', '}']