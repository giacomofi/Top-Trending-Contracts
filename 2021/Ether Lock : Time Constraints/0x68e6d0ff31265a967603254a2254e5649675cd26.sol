['// SPDX-License-Identifier: UNLICENCED\n', 'pragma solidity >=0.6.0 <0.8.0;\n', '\n', 'import "./Ownable.sol";\n', '\n', 'interface oracleInterface {\n', '    function latestAnswer() external view returns (int256);\n', '}\n', '\n', 'contract SCoinOracleWrapper is Ownable{\n', '    \n', '    mapping(string=>address) public  currencyToOracle;\n', '    \n', '    function setCurrencyOracle(string memory _currencySymbol, address _oracle) external onlyOwner() {\n', "      require(_oracle!=address(0),'Invalid oracle address.');\n", '      currencyToOracle[_currencySymbol]= _oracle;\n', '    }\n', '    \n', '    function getPrice(string memory _currencySymbol) public  view returns(int256){\n', "        require(currencyToOracle[_currencySymbol]!=address(0),'Invalid currency symbol.');\n", '        address oracleAddress= currencyToOracle[_currencySymbol];\n', '        oracleInterface currentOracleObj =  oracleInterface(oracleAddress);\n', '        return currentOracleObj.latestAnswer();\n', '    }\n', '    \n', '    function doesCurrencyExists (string memory _currencySymbol) public view returns(bool){\n', '        return (currencyToOracle[_currencySymbol]!=address(0));\n', '    }\n', '    \n', '}']