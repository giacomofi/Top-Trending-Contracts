['/**\n', ' *Submitted for verification at Etherscan.io on 2021-05-24\n', '*/\n', '\n', '// File: contracts/SHDVote.sol\n', '\n', 'pragma solidity ^0.6.12;\n', '\n', 'interface IERC20 {\n', '    function totalSupply() external view returns (uint256);\n', '    function balanceOf(address account) external view returns (uint256);\n', '    function transfer(address recipient, uint256 amount) external returns (bool);\n', '    function allowance(address owner, address spender) external view returns (uint256);\n', '    function approve(address spender, uint256 amount) external returns (bool);\n', '    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n', '    event Transfer(address indexed from, address indexed to, uint256 value);\n', '    event Approval(address indexed owner, address indexed spender, uint256 value);\n', '}\n', '\n', 'interface ShadingDAOMining {\n', '    function getUserInfoByPids(uint256[] memory _pids, address _user)\n', '        external\n', '        view\n', '        returns (\n', '            uint256[] memory _amount,\n', '            uint256[] memory _originWeight,\n', '            uint256[] memory _modifiedWeight,\n', '            uint256[] memory _endBlock\n', '        );\n', '}\n', '\n', 'contract SHDVote {\n', '    \n', '    IERC20 public constant votes = IERC20(0xbECE15ed02A078272a3044827E68D33ef2db8335);\n', '    ShadingDAOMining public constant mining = ShadingDAOMining(0x627Af3B7bB61CB5E96a1F31277eb387DeFe737A1);\n', '    uint public constant pool = uint(0);\n', '    \n', '    function decimals() external pure returns (uint8) {\n', '        return uint8(18);\n', '    }\n', '    \n', '    function name() external pure returns (string memory) {\n', '        return "SHDVote";\n', '    }\n', '    \n', '    function symbol() external pure returns (string memory) {\n', '        return "SHDVOTE";\n', '    }\n', '    \n', '    function totalSupply() external view returns (uint) {\n', '        return votes.totalSupply();\n', '    }\n', '    \n', '    function balanceOf(address _voter) external view returns (uint) {\n', '        uint256[] memory pools = new uint256[](1);\n', '        pools[0] = pool;\n', '        (uint256[] memory _votes,,,) = mining.getUserInfoByPids(pools, _voter);\n', '        return _votes[0];\n', '    }\n', '    \n', '    constructor() public {}\n', '}']