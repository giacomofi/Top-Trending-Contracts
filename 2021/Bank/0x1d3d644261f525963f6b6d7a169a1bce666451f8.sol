['/**\n', ' *Submitted for verification at Etherscan.io on 2021-04-29\n', '*/\n', '\n', '// SPDX-License-Identifier: MIT\n', 'pragma solidity 0.8.4;\n', 'interface IERC20 {\n', '    function approve(address spender, uint256 amount) external returns (bool);\n', '    function transfer(address recipient, uint256 amount) external returns (bool);\n', '    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n', '}\n', 'interface IWTKN {\n', '    function deposit(uint256 inAmount) external;\n', '    function withdraw(uint256 burnAmount) external;\n', '    function rawToWrapAmount(uint256 rawAmount) external view returns (uint256);\n', '    function wrapToRawAmount(uint256 wrapAmount) external view returns (uint256);\n', '}\n', 'contract BridgeAssistE {\n', '    address public owner;\n', '    IERC20 public TKN;\n', '    IWTKN public WTKN;\n', '\n', '    modifier restricted {\n', '        require(msg.sender == owner, "This function is restricted to owner");\n', '        _;\n', '    }\n', '\n', '    event Collect(address indexed sender, uint256 amount);\n', '    event Dispense(address indexed sender, uint256 amount);\n', '    event TransferOwnership(address indexed previousOwner, address indexed newOwner);\n', '\n', '    function collect(address _sender, uint256 _amount, uint256 _fee) public restricted {\n', '        TKN.transferFrom(_sender, address(this), _amount);\n', '        WTKN.deposit(_amount - _fee);\n', '        emit Collect(_sender, _amount);\n', '    }\n', '\n', '    function dispense(address _sender, uint256 _amount, uint256 _fee) public restricted {\n', '        uint256 _wAmount = WTKN.rawToWrapAmount(_amount);\n', '        WTKN.withdraw(_wAmount);\n', '        TKN.transfer(_sender, _amount - _fee);\n', '        emit Dispense(_sender, _amount);\n', '    }\n', '\n', '    function transferOwnership(address _newOwner) public restricted {\n', '        require(_newOwner != address(0), "Invalid address: should not be 0x0");\n', '        emit TransferOwnership(owner, _newOwner);\n', '        owner = _newOwner;\n', '    }\n', '\n', '    function drain(IERC20 _TKN, uint256 _amount) public restricted {\n', '        _TKN.transfer(msg.sender, _amount);\n', '    }\n', '\n', '    function approveMax() public restricted {\n', '        TKN.approve(address(WTKN), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n', '    }\n', '\n', '    constructor(IERC20 _TKN, IWTKN _WTKN) {\n', '        TKN = _TKN;\n', '        WTKN = _WTKN;\n', '        owner = msg.sender;\n', '    }\n', '}']