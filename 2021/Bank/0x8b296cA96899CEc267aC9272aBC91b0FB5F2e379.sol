['pragma solidity ^0.5.0;\n', 'pragma experimental ABIEncoderV2;\n', '\n', 'import "./ERC721Tradable.sol";\n', 'import "./Strings.sol";\n', 'import "./Ownable.sol";\n', 'import "./SafeMath.sol";\n', '\n', '/**\n', ' * @title Creature\n', ' * Creature - a contract for my non-fungible creatures.\n', ' */\n', 'contract Creature is ERC721Tradable {\n', '\n', '    address payable private _owner;\n', '    uint256 private _currentTokenId = 0;\n', '\n', '\n', '    uint256 private _basePrice = 0;\n', '    uint256 private constant _protectPrice = 300000000000000000;\n', '    uint256 private constant _imagePrice = 100000000000000000;\n', '    uint256 private constant _simpleTraitPrice = 14000000000000000;\n', '    uint256 private constant _advancedTraitPrice = 35000000000000000;\n', '    uint256 private constant _legendaryTraitPrice = 60000000000000000;\n', '\n', '    struct Rick {\n', '        uint256 skin;\n', '        uint256 hair;\n', '        uint256 shirt;\n', '        uint256 pants;\n', '        uint256 shoes;\n', '        uint256 item;\n', '    }\n', '\n', '\n', '    struct RickProtection {\n', '        uint256 id;\n', '        uint256 value;\n', '\n', '    }\n', '\n', '    bytes32 constant RICK_TYPEHASH = keccak256(\n', '        "Rick(uint skin, uint hair, uint shirt, uint pants, uint shoes, uint item)"\n', '    );\n', '\n', '    bytes32 constant RICKPROTECTION_TYPEHASH = keccak256(\n', '        "RickProtection(uint id, uint value)"\n', '    );\n', '\n', '    mapping (uint => Rick) private _ricks;\n', '    mapping (uint => string) private _image;\n', '    mapping (uint => string) private _name;\n', '\n', '    //hash => rickId\n', '    mapping (bytes32 => bool) private _rickHash;\n', '    mapping (bytes32 => bool) private _rickProtectionHash;\n', '\n', '    constructor(address _proxyRegistryAddress)\n', '    public\n', '    ERC721Tradable("CryptoRick", "RICKS", _proxyRegistryAddress)\n', '    {\n', '        _owner = msg.sender;\n', '\n', '    }\n', '\n', '    function craftRick(Rick memory rick) public returns (uint){\n', '        require(msg.sender == _owner);\n', '\n', '        uint nextId = _getNextTokenId();\n', '        _safeMint(msg.sender, nextId);\n', '        _incrementTokenId();\n', '\n', '        bytes32 rickHash = hash(rick);\n', '        _ricks[nextId] = rick;\n', '        _rickHash[rickHash] = true;\n', '\n', '        return nextId;\n', '    }\n', '\n', '    function getImage(uint rickId) public view returns (string memory){\n', '        return _image[rickId];\n', '    }\n', '\n', '    function totalSupply() public view returns (uint256) {\n', '        return 1024;\n', '    }\n', '\n', '    function hash(Rick memory _rick) internal pure returns (bytes32) {\n', '        return keccak256(abi.encode(\n', '            RICK_TYPEHASH,\n', '            _rick.skin,\n', '            _rick.hair,\n', '            _rick.shirt,\n', '            _rick.pants,\n', '            _rick.shoes\n', '        ));\n', '    }\n', '\n', '    function hashProtection(RickProtection memory _rickProt) internal pure returns (bytes32) {\n', '        return keccak256(abi.encode(\n', '            RICKPROTECTION_TYPEHASH,\n', '            _rickProt.id,\n', '            _rickProt.value\n', '        ));\n', '    }\n', '\n', '    function _getNextTokenId() private view returns (uint256) { return _currentTokenId.add(1); }\n', '    function _incrementTokenId() private { _currentTokenId++; }\n', '    function getCurrentTokenId() public view returns (uint256) { return _currentTokenId; }\n', '\n', '    function getRick(uint rickId) public view returns (Rick memory) {\n', '        return _ricks[rickId];\n', '    }\n', '\n', '    function getName(uint rickId) public view returns (string memory){\n', '        return _name[rickId];\n', '    }\n', '\n', '    function setName(\n', '        uint rickId,\n', '        string memory name\n', '    ) public payable {\n', '        require(ownerOf(rickId) == msg.sender, "RICK-08");\n', '        require(msg.value >= 50000000000000000, "RICK-09");\n', '\n', '        _name[rickId] = name;\n', '    }\n', '\n', '    function buyRick(\n', '        Rick memory _rick,\n', '        string memory image,\n', '        uint[] memory protectedTraitIds\n', '    ) public payable {\n', '\n', '        /*\n', '            Validate the Input!\n', '            We throw our own RICK-XX error code to handle the frontend output.\n', '        */\n', '        //check for remaining ricks\n', '        require(_currentTokenId < totalSupply(), "RICK-00");\n', '\n', '        //is the rick uniq ?\n', '        bytes32 rickHash = hash(_rick);\n', '        require(_rickHash[rickHash] == false, "RICK-01");\n', '\n', '        require(msg.value >= getPriceForRick(_rick, bytes(image).length > 0, protectedTraitIds.length), "RICK-02");\n', '\n', '        bytes32 hashHair = hashProtection(RickProtection(1, _rick.hair));\n', '        require(_rickProtectionHash[hashHair] == false, "RICK-03");\n', '\n', '        bytes32 hashShirt = hashProtection(RickProtection(2, _rick.shirt));\n', '        require(_rickProtectionHash[hashShirt] == false, "RICK-04");\n', '\n', '        bytes32 hashPants = hashProtection(RickProtection(3, _rick.pants));\n', '        require(_rickProtectionHash[hashPants] == false, "RICK-05");\n', '\n', '        bytes32 hashShoes = hashProtection(RickProtection(4, _rick.shoes));\n', '        require(_rickProtectionHash[hashShoes] == false, "RICK-06");\n', '\n', '        bytes32 hashItem = hashProtection(RickProtection(5, _rick.item));\n', '        require(_rickProtectionHash[hashItem] == false, "RICK-07");\n', '\n', '        /*\n', '            Mint the new Token\n', '        */\n', '        uint nextId = _getNextTokenId();\n', '        _safeMint(msg.sender, nextId);\n', '        _incrementTokenId();\n', '\n', '        /*\n', '            Save rick\n', '        */\n', '        _image[nextId] = image;\n', '        _ricks[nextId] = _rick;\n', '        _rickHash[rickHash] = true;\n', '\n', '        /*\n', '            Protect the traits\n', '        */\n', '        for (uint i = 0; i < protectedTraitIds.length; i++) {\n', '            uint val = protectedTraitIds[i];\n', '\n', '            if (val == 1) _rickProtectionHash[hashHair] = true;\n', '            if (val == 2) _rickProtectionHash[hashShirt] = true;\n', '            if (val == 3) _rickProtectionHash[hashPants] = true;\n', '            if (val == 4) _rickProtectionHash[hashShoes] = true;\n', '            if (val == 5) _rickProtectionHash[hashItem] = true;\n', '        }\n', '\n', '        //update basePrice\n', '        if      (nextId == 50  ) _basePrice = 20000000000000000;\n', '        else if (nextId == 250 ) _basePrice = 50000000000000000;\n', '        else if (nextId == 500 ) _basePrice = 70000000000000000;\n', '        else if (nextId == 1000) _basePrice = 100000000000000000;\n', '\n', '    }\n', '\n', '    function getPriceForRick(Rick memory rick, bool withImage, uint protectedTraits) internal view returns(uint){\n', '\n', '        uint price = _basePrice;\n', '        if (withImage) price += _imagePrice;\n', '        if(protectedTraits > 0) price += _protectPrice * protectedTraits;\n', '\n', '        if (rick.skin > 8) price += _legendaryTraitPrice;       //legendary  (9 - 13)\n', '        else if (rick.skin > 4) price += _advancedTraitPrice;   //advanced   (5 - 8 )\n', '        else price += _simpleTraitPrice;                        //simple     (1 - 4 )\n', '\n', '        if (rick.hair > 40) price += _legendaryTraitPrice;       //legendary  (41 - 50)\n', '        else if (rick.hair > 25) price += _advancedTraitPrice;   //advanced   (26 - 40 )\n', '        else price += _simpleTraitPrice;                        //simple     (1 - 25 )\n', '\n', '        if (rick.shirt > 40) price += _legendaryTraitPrice;       //legendary (41 - 50)\n', '        else if (rick.shirt > 25) price += _advancedTraitPrice;   //advanced  (26 - 40 )\n', '        else price += _simpleTraitPrice;                         //simple    (1 - 25 )\n', '\n', '        if (rick.pants > 40) price += _legendaryTraitPrice;       //legendary (41 - 50)\n', '        else if (rick.pants > 25) price += _advancedTraitPrice;   //advanced  (26 - 40 )\n', '        else price += _simpleTraitPrice;                         //simple    (1 - 25 )\n', '\n', '        if (rick.shoes > 40) price += _legendaryTraitPrice;       //legendary (41 - 50)\n', '        else if (rick.shoes > 25) price += _advancedTraitPrice;   //advanced  (26 - 40 )\n', '        else price += _simpleTraitPrice;                         //simple    (1 - 25)\n', '\n', '        if (rick.item > 25) price += _legendaryTraitPrice;       //legendary (26 - 50)\n', '        else if (rick.item > 0) price += _advancedTraitPrice;   //advanced  (1 - 25 )\n', '\n', '        return price;\n', '\n', '    }\n', '\n', '    function withdraw(uint256 amount) public {\n', '        require(msg.sender == _owner);\n', '        msg.sender.transfer(amount);\n', '    }\n', '\n', '    function baseTokenURI() public pure returns (string memory) {\n', '        return "https://www.crypto-ricks.com/api/";\n', '    }\n', '\n', '    function contractURI() public pure returns (string memory) {\n', '        return "https://www.crypto-ricks.com/contract";\n', '    }\n', '\n', '}']