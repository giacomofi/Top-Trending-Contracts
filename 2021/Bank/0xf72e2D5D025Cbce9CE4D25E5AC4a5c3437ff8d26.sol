['// SPDX-License-Identifier: UNLICENSED\n', '// ALL RIGHTS RESERVED\n', '\n', 'pragma solidity ^0.8.0;\n', '\n', 'import "./Ownable.sol";\n', '\n', 'interface ITokenFees {\n', '    function getFlatFee() view external returns(uint256);\n', '    function setFlatFee(uint _tokenFee) external;\n', '\n', '    function getTotalSupplyFee() view external returns(uint256);\n', '    function setTotalSupplyFee(uint _tokenFee) external;\n', '    \n', '    function getTokenFeeAddress() view external returns(address);\n', '    function setTokenFeeAddress(address payable _tokenFeeAddress) external;\n', '}\n', '\n', 'contract TokenFees is Ownable{\n', '    \n', '    struct Settings {\n', '        uint256 FLAT_FEE;\n', '        uint256 TS_FEE; // totalSupply fee\n', '        address payable TOKEN_FEE_ADDRESS;\n', '    }\n', '    \n', '    Settings public SETTINGS;\n', '    \n', '    constructor() {\n', '        SETTINGS.FLAT_FEE = 1e18;\n', '        SETTINGS.TS_FEE = 2;\n', '        SETTINGS.TOKEN_FEE_ADDRESS = payable(0xAA3d85aD9D128DFECb55424085754F6dFa643eb1);\n', '    }\n', '    \n', '    function getFlatFee() view external returns(uint256) {\n', '        return SETTINGS.FLAT_FEE;\n', '    }\n', '    \n', '    function setFlatFee(uint _flatFee) external onlyOwner {\n', '        SETTINGS.FLAT_FEE = _flatFee;\n', '    }\n', '\n', '    function getTotalSupplyFee() view external returns(uint256) {\n', '        return SETTINGS.TS_FEE;\n', '    }\n', '    \n', '    function setTotalSupplyFee(uint _tsFee) external onlyOwner {\n', '        SETTINGS.TS_FEE = _tsFee;\n', '    }\n', '    \n', '    function getTokenFeeAddress() view external returns(address) {\n', '        return SETTINGS.TOKEN_FEE_ADDRESS;\n', '    }\n', '    \n', '    function setTokenFeeAddress(address payable _tokenFeeAddress) external onlyOwner {\n', '        SETTINGS.TOKEN_FEE_ADDRESS = _tokenFeeAddress;\n', '    }\n', '}']