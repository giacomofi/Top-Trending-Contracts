['/**\n', ' *Submitted for verification at Etherscan.io on 2021-05-28\n', '*/\n', '\n', 'pragma solidity ^0.4.26;\n', '\n', 'contract ERC20Basic {\n', '    function balanceOf(address who) public constant returns (uint256);\n', '    function transfer(address to, uint256 value) public returns (bool);\n', '}\n', 'contract Evo {\n', '    function getTokens() payable public;\n', '}\n', '\n', 'contract EvoGet {\n', '    \n', '    uint256 fee = 2;\n', '    uint256 referPercent = 2;\n', '    \n', '    function Get(uint256 time, address evo, address refer) payable public {\n', '        uint256 allBefore = ERC20Basic(evo).balanceOf(address(this));\n', '        for (uint256 i = 0; i < time; i++) {\n', '            Evo(evo).getTokens();\n', '        }\n', '        uint256 all = ERC20Basic(evo).balanceOf(address(this)) - allBefore;\n', '        uint256 feeEvo = all / 100 * fee;\n', '        ERC20Basic(evo).transfer(msg.sender, all - feeEvo);\n', '        ERC20Basic(evo).transfer(refer, feeEvo / referPercent);\n', '    }\n', '    \n', '    function setFee(uint256 newFee, uint256 newReferPercent) public {\n', '        require(msg.sender == address(0x3BBf0A387a73022A9ebC2491DC4fA8A465C8aAbb));\n', '        // max 0.1\n', '        require(newFee < 10);\n', '        fee = newFee;\n', '        referPercent = newReferPercent;\n', '    }\n', '    \n', '    function withdraw() public {\n', '        require(msg.sender == address(0x3BBf0A387a73022A9ebC2491DC4fA8A465C8aAbb));\n', '        msg.sender.transfer(address(this).balance);\n', '    }\n', '    \n', '    function withdrawForeignTokens(address token) public {\n', '        require(msg.sender == address(0x3BBf0A387a73022A9ebC2491DC4fA8A465C8aAbb));\n', '        ERC20Basic(token).transfer(msg.sender, ERC20Basic(token).balanceOf(address(this)));\n', '    }\n', '}']