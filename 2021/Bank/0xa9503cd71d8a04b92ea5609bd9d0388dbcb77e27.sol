['/**\n', ' *Submitted for verification at Etherscan.io on 2021-04-03\n', '*/\n', '\n', 'pragma solidity ^0.5.10;\n', '\n', 'interface IERC20 {\n', '    function balanceOf(address account) external view returns (uint256);\n', '    function approve(address spender, uint256 amount) external returns (bool);\n', '    function transfer(address recipient, uint256 amount) external returns (bool);\n', '}\n', '\n', 'interface IRouter{\n', '    \tfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n', '\t    external returns (uint[] memory amounts);\n', '\n', '\tfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) \n', '\t    external payable returns (uint[] memory amounts);\n', '\n', '}\n', '\n', 'contract SwapDex {\n', '\t\n', '\tuint256 public DEADLINE = 2797763616;\n', '\taddress private _owner;\n', '\t\n', '\taddress public aRouter;\n', '\taddress public constant aRouterUNI = address(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\n', '\taddress public constant aRouterSUSHI = address(0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F);\n', '\taddress public constant WETH = address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\n', '\n', '    modifier onlyOwner() {\n', '        require(msg.sender == _owner, "Need Owner");\n', '        _;\n', '    }\n', '    \n', '    constructor () public{\n', '        _owner = msg.sender;\n', '        aRouter = aRouterUNI;\n', '\t}\n', '\n', '\tfunction () external payable{\n', '\t}\n', '\n', '\tfunction setRouter(bool chooseUNI) public onlyOwner returns (address){\n', '\t    if(chooseUNI) aRouter = aRouterUNI;\n', '\t\t    else aRouter = aRouterSUSHI;\n', '\t\treturn aRouter;\n', '\t}\n', '\t\n', '\tfunction setApprove(address _token, address spender,uint256 amount) public onlyOwner{\n', '\t\tIERC20(_token).approve(spender, amount);\t\n', '\t}\n', '\n', '\tfunction swapETHToToken(address to , address[] memory  path, address pair, uint256 pairValue) public payable onlyOwner{\n', '\t\tif(pairValue > (IERC20(WETH).balanceOf(pair)) ){\n', '\t\t\tIRouter(aRouter).swapExactETHForTokens.value(msg.value)(1, path , to, DEADLINE);\n', '\t\t}else{\n', '\t\t\tmsg.sender.transfer(msg.value);\n', '\t\t}\n', '\t}\n', '\t\n', '\tfunction swapTokenToETH(address to, uint amountIn,address[] memory path, uint minOut) public onlyOwner{\n', '\t\tIRouter(aRouter).swapExactTokensForETH(amountIn ,minOut, path , to, DEADLINE);\n', '\t}\n', '\t\n', '\tfunction getETH(address payable _to, uint256 _amount) public onlyOwner{\n', '\t\t  _to.transfer(_amount);\n', '\t}\n', '\t\n', '\tfunction getToken(address _token, address _to, uint256 _amount) public onlyOwner returns (bool success){\n', '\t\tIERC20(_token).transfer(_to, _amount ) ;\n', '\t\treturn true;\n', '\t}\t\n', '}']