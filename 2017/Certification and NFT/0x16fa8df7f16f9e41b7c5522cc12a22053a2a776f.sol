['pragma solidity ^0.4.11;\n', '\n', 'contract BlockchainPi {\n', '\n', '    uint total;\n', '    uint sevencount;\n', '    uint256 constant public MAX_UINT256 = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\n', '    \n', '    event RollDice (address roller, uint firstdie, uint seconddie, uint newtotal);\n', '    \n', '    function addDiceRoll(uint _onedie, uint _twodie) public returns (bool) {\n', '        bool oneDieFlag = checkDie(_onedie);\n', '        bool twoDieFlag = checkDie(_twodie);\n', '        require(oneDieFlag);\n', '        require(twoDieFlag);\n', '        require(total != MAX_UINT256);\n', '        total++;\n', '        uint addDice = _onedie + _twodie;\n', '        if (addDice ==7) sevencount++;\n', '        RollDice(msg.sender, _onedie, _twodie, total);\n', '        return true;\n', '    }\n', '    \n', '    function checkDie (uint _a) internal returns (bool) {\n', '        if (_a > 0) {\n', '            if (_a < 7) {\n', '                return true;\n', '            } else {\n', '                return false;\n', '            }\n', '        } else {\n', '            return false;\n', '        }\n', '    }\n', '    \n', '    function getSevenCount() public returns (uint){\n', '        return sevencount;\n', '    }\n', '    \n', '    function getTotal() public returns (uint) {\n', '       return total;\n', '    }\n', '\n', '}']