['pragma solidity ^0.4.18;\n', '\n', '// Splitter is an Ether payment splitter contract between an owner and a payee\n', '// account. Both payee and owner gets funded immediately upon receipt of payment, whilst\n', '// the owner can withdraw accumulated funds upon request if something goes wrong\n', '\n', '\n', '//THIS CONTRACT DEPLOYMENT USES 362992 GAS\n', '\n', '\n', 'contract Splitter {\n', '    address public owner;   // Owner of the contract, will get `percent` of all transferred funds\n', '    address public payee = 0xE413239e62f25Cc6746cD393920d123322aCa948;   // Payee of the contract, will get 100 - `percent` of all transferred funds\n', '    uint    public percent = 10; // Percent of the funds to transfer to the payee (range: 1 - 99)\n', '    \n', "    // Splitter creates a fund splitter, forwarding 'percent' of any received funds\n", "    // to the 'owner' and 100 percent for the payee.\n", '    function Splitter() public {\n', '        owner   = msg.sender;\n', '    }\n', '    \n', "    // Withdraw pulls the entire (if any) balance of the contract to the owner's\n", '    // account.\n', '    function Withdraw() external {\n', '        require(msg.sender == owner);\n', '        owner.transfer(this.balance);\n', '    }\n', '    \n', '    // Default function to accept Ether transfers and forward some percentage of it\n', "    // to the owner's account and the payee\n", '    function() external payable {\n', '        owner.transfer(msg.value * percent / 100);\n', '        payee.transfer(msg.value * (100 - percent) / 100);\n', '    }\n', '}']