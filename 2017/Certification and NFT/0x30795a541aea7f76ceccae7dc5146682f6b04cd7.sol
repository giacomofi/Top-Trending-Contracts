['pragma solidity ^0.4.18;\n', '\n', '//*** Owner ***//\n', 'contract owned {\n', '\taddress public owner;\n', '    \n', '    //*** OwnershipTransferred ***//\n', '    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n', '\n', '\tfunction owned() public {\n', '\t\towner = msg.sender;\n', '\t}\n', '\n', '    //*** Change Owner ***//\n', '\tfunction changeOwner(address newOwner) onlyOwner public {\n', '\t\towner = newOwner;\n', '\t}\n', '    \n', '    //*** Transfer OwnerShip ***//\n', '    function transferOwnership(address newOwner) onlyOwner public {\n', '        require(newOwner != address(0));\n', '        OwnershipTransferred(owner, newOwner);\n', '        owner = newOwner;\n', '    }\n', '    \n', '    //*** Only Owner ***//\n', '\tmodifier onlyOwner {\n', '\t\trequire(msg.sender == owner);\n', '\t\t_;\n', '\t}\n', '}\n', '\n', 'interface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; }\n', '\n', '//*** GraphenePowerToken ***//\n', 'contract GraphenePowerToken is owned{\n', '    \n', '    //************** Token ************//\n', "\tstring public standard = 'Token 1';\n", '\n', "\tstring public name = 'Graphene Power';\n", '\n', "\tstring public symbol = 'GRP';\n", '\n', '\tuint8 public decimals = 18;\n', '\n', '\tuint256 public totalSupply =0;\n', '\t\n', '\t//*** Pre-sale ***//\n', '    uint preSaleStart=1513771200;\n', '    uint preSaleEnd=1515585600;\n', '    uint256 preSaleTotalTokens=30000000;\n', '    uint256 preSaleTokenCost=6000;\n', '    address preSaleAddress;\n', '    bool public enablePreSale=false;\n', '    \n', '    //*** ICO ***//\n', '    uint icoStart;\n', '    uint256 icoSaleTotalTokens=400000000;\n', '    address icoAddress;\n', '    bool public enableIco=false;\n', '    \n', '    //*** Advisers,Consultants ***//\n', '    uint256 advisersConsultantTokens=15000000;\n', '    address advisersConsultantsAddress;\n', '    \n', '    //*** Bounty ***//\n', '    uint256 bountyTokens=15000000;\n', '    address bountyAddress;\n', '    \n', '    //*** Founders ***//\n', '    uint256 founderTokens=40000000;\n', '    address founderAddress;\n', '    \n', '    //*** Walet ***//\n', '    address public wallet;\n', '    \n', '    //*** TranferCoin ***//\n', '    bool public transfersEnabled = false;\n', '    \n', '     //*** Balance ***//\n', '    mapping (address => uint256) public balanceOf;\n', '    \n', '    //*** Alowed ***//\n', '    mapping (address => mapping (address => uint256)) allowed;\n', '    \n', '    //*** Tranfer ***//\n', '    event Transfer(address from, address to, uint256 value);\n', '    \n', '\t//*** Approval ***//\n', '\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\n', '\t\n', '\t//*** Destruction ***//\n', '\tevent Destruction(uint256 _amount);\n', '\t\n', '\t//*** Burn ***//\n', '\tevent Burn(address indexed from, uint256 value);\n', '\t\n', '\t//*** Issuance ***//\n', '\tevent Issuance(uint256 _amount);\n', '\t\n', '\tfunction GraphenePowerToken() public{\n', '        preSaleAddress=0xC07850969A0EC345A84289f9C5bb5F979f27110f;\n', '        icoAddress=0x1C21Cf57BF4e2dd28883eE68C03a9725056D29F1;\n', '        advisersConsultantsAddress=0xe8B6dA1B801b7F57e3061C1c53a011b31C9315C7;\n', '        bountyAddress=0xD53E82Aea770feED8e57433D3D61674caEC1D1Be;\n', '        founderAddress=0xDA0D3Dad39165EA2d7386f18F96664Ee2e9FD8db;\n', '        totalSupply =500000000;\n', '        balanceOf[msg.sender]=totalSupply;\n', '\t}\n', '\n', '\t//*** Payable ***//\n', '    function() payable public {\n', '        require(msg.value>0);\n', '        require(msg.sender != 0x0);\n', '        \n', '        uint256 weiAmount;\n', '        uint256 tokens;\n', '        wallet=owner;\n', '        \n', '        if(isPreSale()){\n', '            wallet=preSaleAddress;\n', '            weiAmount=6000;\n', '        }\n', '        else if(isIco()){\n', '            wallet=icoAddress;\n', '            \n', '            if((icoStart+(7*24*60*60)) >= now){\n', '               weiAmount=4000;\n', '            }\n', '            else if((icoStart+(14*24*60*60)) >= now){\n', '                 weiAmount=3750;\n', '            }\n', '            else if((icoStart+(21*24*60*60)) >= now){\n', '                 weiAmount=3500;\n', '            }\n', '            else if((icoStart+(28*24*60*60)) >= now){\n', '                 weiAmount=3250;\n', '            }\n', '            else if((icoStart+(35*24*60*60)) >= now){\n', '                 weiAmount=3000;\n', '            }\n', '            else{\n', '                weiAmount=2000;\n', '            }\n', '        }\n', '        else{\n', '            weiAmount=4000;\n', '        }\n', '        \n', '        tokens=msg.value*weiAmount/1000000000000000000;\n', '        Transfer(this, msg.sender, tokens);\n', '        balanceOf[msg.sender]+=tokens;\n', '        totalSupply=(totalSupply-tokens);\n', '        wallet.transfer(msg.value);\n', '        balanceOf[this]+=msg.value;\n', '\t}\n', '\t\n', '\t/* Send coins */\n', '\tfunction transfer(address _to, uint256 _value) public returns (bool success) {\n', '\t    if(transfersEnabled){\n', '\t\t    require(balanceOf[_to] >= _value);\n', '\t\t    // Subtract from the sender\n', '\t\t    balanceOf[msg.sender] = (balanceOf[msg.sender] -_value);\n', '\t        balanceOf[_to] =(balanceOf[_to] + _value);\n', '\t\t    Transfer(msg.sender, _to, _value);\n', '\t\t    return true;\n', '\t    }\n', '\t    else{\n', '\t        return false;\n', '\t    }\n', '\t\n', '\t}\n', '\n', '\t//*** Transfer From ***//\n', '\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n', '\t    if(transfersEnabled){\n', '\t        // Check if the sender has enough\n', '\t\t    require(balanceOf[_from] >= _value);\n', '\t\t    // Check allowed\n', '\t\t    require(_value <= allowed[_from][msg.sender]);\n', '\n', '\t\t    // Subtract from the sender\n', '\t\t    balanceOf[_from] = (balanceOf[_from] - _value);\n', '\t\t    // Add the same to the recipient\n', '\t\t    balanceOf[_to] = (balanceOf[_to] + _value);\n', '\n', '\t\t    allowed[_from][msg.sender] = (allowed[_from][msg.sender] - _value);\n', '\t\t    Transfer(_from, _to, _value);\n', '\t\t    return true;\n', '\t    }\n', '\t    else{\n', '\t        return false;\n', '\t    }\n', '\t}\n', '\t\n', '\t//*** Transfer OnlyOwner ***//\n', '\tfunction transferOwner(address _to,uint256 _value) public onlyOwner returns(bool success){\n', '\t    // Subtract from the sender\n', '\t    totalSupply=(totalSupply-_value);\n', '\t\t// Add the same to the recipient\n', '\t\tbalanceOf[_to] = (balanceOf[_to] + _value);\n', '\t\tTransfer(this, _to, _value);\n', '\t}\n', '\t\n', '\t//*** Allowance ***//\n', '\tfunction allowance(address _owner, address _spender) constant public returns (uint256 remaining) {\n', '\t\treturn allowed[_owner][_spender];\n', '\t}\n', '\t\n', '\t//*** Approve ***//\n', '\tfunction approve(address _spender, uint256 _value) public returns (bool success) {\n', '\t\tallowed[msg.sender][_spender] = _value;\n', '\t\tApproval(msg.sender, _spender, _value);\n', '\t\treturn true;\n', '\t}\n', '\t\n', '\t//*** Burn Owner***//\n', '\tfunction burnOwner(uint256 _value) public onlyOwner returns (bool success) {\n', '\t\tdestroyOwner(msg.sender, _value);\n', '\t\tBurn(msg.sender, _value);\n', '\t\treturn true;\n', '\t}\n', '\t\n', '\t//*** Destroy Owner ***//\n', '\tfunction destroyOwner(address _from, uint256 _amount) public onlyOwner{\n', '\t    balanceOf[_from] =(balanceOf[_from] - _amount);\n', '\t\ttotalSupply = (totalSupply - _amount);\n', '\t\tTransfer(_from, this, _amount);\n', '\t\tDestruction(_amount);\n', '\t}\n', '\t\n', '\t//*** Kill Balance ***//\n', '\tfunction killBalance(uint256 _value) onlyOwner public {\n', '\t\tif(this.balance > 0) {\n', '\t\t    if(_value==1){\n', '\t\t        preSaleAddress.transfer(this.balance);\n', '\t\t        balanceOf[this]=0;\n', '\t\t    }\n', '\t\t    else if(_value==2){\n', '\t\t        icoAddress.transfer(this.balance);\n', '\t\t         balanceOf[this]=0;\n', '\t\t    }\n', '\t\t    else{\n', '\t\t        owner.transfer(this.balance);\n', '\t\t         balanceOf[this]=0;\n', '\t\t    }\n', '\t\t}\n', '\t\telse{\n', '\t\t    owner.transfer(this.balance);\n', '\t\t     balanceOf[this]=0;\n', '\t\t}\n', '\t}\n', '\t\n', '\t//*** Kill Tokens ***//\n', '\tfunction killTokens() onlyOwner public{\n', '\t    Transfer(this, bountyAddress, bountyTokens);\n', '\t    Transfer(this, founderAddress, founderTokens);\n', '\t    Transfer(this, advisersConsultantsAddress, advisersConsultantTokens);\n', '\t    totalSupply=totalSupply-(bountyTokens+founderTokens+advisersConsultantTokens);\n', '\t    bountyTokens=0;\n', '\t    founderTokens=0;\n', '\t    advisersConsultantTokens=0;\n', '\t}\n', '\t\n', '\t//*** Contract Balance ***//\n', '\tfunction contractBalance() constant public returns (uint256 balance) {\n', '\t\treturn balanceOf[this];\n', '\t}\n', '\t\n', '\t//*** Set ParamsTransfer ***//\n', '\tfunction setParamsTransfer(bool _value) public onlyOwner{\n', '\t    transfersEnabled=_value;\n', '\t}\n', '\t\n', '\t//*** Set ParamsICO ***//\n', '    function setParamsIco(bool _value) public onlyOwner returns(bool result){\n', '        enableIco=_value;\n', '    }\n', '    \n', '\t//*** Set ParamsPreSale ***//\n', '    function setParamsPreSale(bool _value) public onlyOwner returns(bool result){\n', '        enablePreSale=_value;\n', '    }\n', '\t\n', '\t//*** Is ico ***//\n', '    function isIco() constant public returns (bool ico) {\n', '\t\t bool result=((icoStart+(35*24*60*60)) >= now);\n', '\t\t if(enableIco){\n', '\t\t     return true;\n', '\t\t }\n', '\t\t else{\n', '\t\t     return result;\n', '\t\t }\n', '\t}\n', '    \n', '    //*** Is PreSale ***//\n', '    function isPreSale() constant public returns (bool preSale) {\n', '\t\tbool result=(preSaleEnd >= now);\n', '\t\tif(enablePreSale){\n', '\t\t    return true;\n', '\t\t}\n', '\t\telse{\n', '\t\t    return result;\n', '\t\t}\n', '\t}\n', '}']