['pragma solidity ^0.4.16;\n', '\n', 'contract owned {\n', '    address public owner;\n', '\n', '    function owned() {\n', '        owner = msg.sender;\n', '    }\n', '\n', '    modifier onlyOwner {\n', '        if (msg.sender != owner) {\n', '            revert();\n', '        }\n', '        _;\n', '    }\n', '}\n', '\n', 'library SafeMath {\n', '\tfunction mul(uint256 a, uint256 b) internal constant returns (uint256) {\n', '\t\tuint256 c = a * b;\n', '\t\tassert(a == 0 || c / a == b);\n', '\t\treturn c;\n', '\t}\n', '\n', '\tfunction div(uint256 a, uint256 b) internal constant returns (uint256) {\n', '\t\tuint256 c = a / b;\n', '\t\treturn c;\n', '\t}\n', '\n', '\tfunction sub(uint256 a, uint256 b) internal constant returns (uint256) {\n', '\t\tassert(b <= a);\n', '\t\treturn a - b;\n', '\t}\n', '\n', '\tfunction add(uint256 a, uint256 b) internal constant returns (uint256) {\n', '\t\tuint256 c = a + b;\n', '\t\tassert(c >= a);\n', '\t\treturn c;\n', '\t}\n', '}\n', '\n', 'contract ValoremICO is owned {\n', '\n', '    // Timeline\n', '    uint public presaleStart;\n', '    uint public icoLevel1;\n', '    uint public icoLevel2;\n', '    uint public icoLevel3;\n', '    uint public icoLevel4;\n', '    uint public icoLevel5;\n', '    uint public saleEnd;\n', '\n', '    // Bonus Values\n', '    uint256 public saleBonusPresale;\n', '    uint256 public saleBonusICO1;\n', '    uint256 public saleBonusICO2;\n', '    uint256 public saleBonusICO3;\n', '    uint256 public saleBonusICO4;\n', '    uint256 public saleBonusICO5;\n', '    uint256 public totalInvestors;\n', '\n', '    // Min Investment\n', '    uint256 public minInvestment;\n', '\n', '    function ValoremICO() {\n', '        presaleStart = 1513036800;\n', '        icoLevel1 = 1517097600;\n', '        icoLevel2 = 1519776000;\n', '        icoLevel3 = 1522195200;\n', '        icoLevel4 = 1524873600;\n', '        icoLevel5 = 1527465600;\n', '        saleEnd = 1530144000;\n', '\n', '        saleBonusPresale = 100;\n', '        saleBonusICO1 = 50;\n', '        saleBonusICO2 = 40;\n', '        saleBonusICO3 = 20;\n', '        saleBonusICO4 = 10;\n', '        saleBonusICO5 = 5;\n', '\n', '        minInvestment = (1/10) * (10 ** 18);\n', '    }\n', '\n', '    event EtherTransfer(address indexed _from,address indexed _to,uint256 _value);\n', '\n', '    function changeTiming(uint _presaleStart,uint _icoLevel1,uint _icoLevel2,uint _icoLevel3,uint _icoLevel4,uint _icoLevel5,uint _saleEnd) onlyOwner {\n', '        presaleStart = _presaleStart;\n', '        icoLevel1 = _icoLevel1;\n', '        icoLevel2 = _icoLevel2;\n', '        icoLevel3 = _icoLevel3;\n', '        icoLevel4 = _icoLevel4;\n', '        icoLevel5 = _icoLevel5;\n', '        saleEnd = _saleEnd;\n', '    }\n', '\n', '    function changeBonus(uint _saleBonusPresale,uint _saleBonusICO1,uint _saleBonusICO2,uint _saleBonusICO3,uint _saleBonusICO4,uint _saleBonusICO5) onlyOwner {\n', '        saleBonusPresale = _saleBonusPresale;\n', '        saleBonusICO1 = _saleBonusICO1;\n', '        saleBonusICO2 = _saleBonusICO2;\n', '        saleBonusICO3 = _saleBonusICO3;\n', '        saleBonusICO4 = _saleBonusICO4;\n', '        saleBonusICO5 = _saleBonusICO5;\n', '    }\n', '\n', '    function changeMinInvestment(uint256 _minInvestment) onlyOwner {\n', '        minInvestment = _minInvestment;\n', '    }\n', '\n', '    function withdrawEther(address _account) onlyOwner payable returns (bool success) {\n', '        require(_account.send(this.balance));\n', '\n', '        EtherTransfer(this, _account, this.balance);\n', '        return true;\n', '    }\n', '\n', '    function destroyContract() {\n', '        if (msg.sender == owner) {\n', '            selfdestruct(owner);\n', '        }\n', '    }\n', '\n', '    function () payable {\n', '        if (presaleStart < now && saleEnd > now) {\n', '            require(msg.value >= minInvestment);\n', '            totalInvestors = totalInvestors + 1;\n', '        } else {\n', '            revert();\n', '        }\n', '    }\n', '\n', '}']