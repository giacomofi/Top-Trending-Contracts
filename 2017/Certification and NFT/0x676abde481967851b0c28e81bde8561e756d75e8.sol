['pragma solidity ^0.4.18;\n', '\n', '/**\n', ' * @title Ownable\n', ' * @dev The Ownable contract has an owner address, and provides basic authorization control\n', ' * functions, this simplifies the implementation of "user permissions".\n', ' */\n', 'contract Ownable {\n', '  address public owner;\n', '\n', '\n', '  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n', '\n', '\n', '  /**\n', '   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n', '   * account.\n', '   */\n', '  function Ownable() {\n', '    owner = msg.sender;\n', '  }\n', '\n', '\n', '  /**\n', '   * @dev Throws if called by any account other than the owner.\n', '   */\n', '  modifier onlyOwner() {\n', '    require(msg.sender == owner);\n', '    _;\n', '  }\n', '\n', '\n', '  /**\n', '   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n', '   * @param newOwner The address to transfer ownership to.\n', '   */\n', '  function transferOwnership(address newOwner) onlyOwner public {\n', '    require(newOwner != address(0));\n', '    OwnershipTransferred(owner, newOwner);\n', '    owner = newOwner;\n', '  }\n', '\n', '}\n', '\n', '/**\n', ' * @title ModulumInvestorsWhitelist\n', ' * @dev ModulumInvestorsWhitelist is a smart contract which holds and manages\n', ' * a list whitelist of investors allowed to participate in Modulum ICO.\n', ' * \n', '*/\n', 'contract ModulumInvestorsWhitelist is Ownable {\n', '\n', '  mapping (address => bool) public isWhitelisted;\n', '\n', '  /**\n', '   * @dev Contructor\n', '   */\n', '  function ModulumInvestorsWhitelist() {\n', '  }\n', '\n', '  /**\n', '   * @dev Add a new investor to the whitelist\n', '   */\n', '  function addInvestorToWhitelist(address _address) public onlyOwner {\n', '    require(_address != 0x0);\n', '    require(!isWhitelisted[_address]);\n', '    isWhitelisted[_address] = true;\n', '  }\n', '\n', '  /**\n', '   * @dev Remove an investor from the whitelist\n', '   */\n', '  function removeInvestorFromWhiteList(address _address) public onlyOwner {\n', '    require(_address != 0x0);\n', '    require(isWhitelisted[_address]);\n', '    isWhitelisted[_address] = false;\n', '  }\n', '\n', '  /**\n', '   * @dev Test whether an investor\n', '   */\n', '  function isInvestorInWhitelist(address _address) constant public returns (bool result) {\n', '    return isWhitelisted[_address];\n', '  }\n', '}']