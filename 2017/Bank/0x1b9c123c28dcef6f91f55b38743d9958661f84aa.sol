['pragma solidity ^0.4.15;\n', 'contract Emoz {\n', ' uint256 constant private STARTING_PRICE = 0.005 ether;\n', ' address private cO;\n', ' mapping (uint256 => address) public onrs;\n', ' mapping (uint256 => string ) public urls;\n', ' mapping (uint256 => uint256) private prcs;\n', ' mapping (uint256 => uint256) public tyms;\n', ' event Upd(uint256 c, string url, address onr, uint256 prc, uint256 tym);\n', ' function Emoz() public {\n', '  cO = msg.sender;\n', ' }\n', ' function() public payable {\n', ' }\n', ' function prc(uint256 c) constant external returns(uint256) {\n', '  uint256 p = prcs[c];\n', '  return p > 0 ? p : STARTING_PRICE;\n', ' }\n', ' function buy(uint256 c, string url) external payable {\n', '  uint256 p = prcs[c];\n', '  if(p == 0) p = STARTING_PRICE;\n', '  require (msg.value >= p);\n', '  address pO = onrs[c];\n', '  uint256 nP = p << 1;\n', '  prcs[c] = nP;\n', '  onrs[c] = msg.sender;\n', '  urls[c] = url;\n', '  tyms[c] = now;\n', '  Upd(c, url, msg.sender, nP, now);\n', '  if(pO != address(0)) {\n', '   pO.transfer((3 * p) / 5);\n', '  }\n', '  cO.transfer(this.balance);\n', ' }\n', ' function ban(uint256 c) external {\n', '  require (msg.sender == cO);\n', '  delete urls[c];\n', '  Upd(c, "", onrs[c], prcs[c], tyms[c]);\n', ' }\n', '}']