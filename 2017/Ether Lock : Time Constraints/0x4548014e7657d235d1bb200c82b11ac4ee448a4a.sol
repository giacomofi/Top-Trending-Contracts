['pragma solidity ^0.4.15;\n', '\n', 'contract Token {\n', '    function transfer(address _to, uint _value) returns (bool success);\n', '}\n', '\n', 'contract Safe {\n', '    address public owner;\n', '    uint256 public lock;\n', '\n', '    function Safe() {\n', '        owner = msg.sender;\n', '    }\n', '    \n', '    function transfer(address to) returns (bool) {\n', '        require(msg.sender == owner);\n', '        require(to != address(0));\n', '        owner = to;\n', '        return true;\n', '    }\n', '\n', '    function lock(uint256 timestamp) returns (bool) {\n', '        require(msg.sender == owner);\n', '        require(timestamp > lock);\n', '        require(timestamp > block.timestamp);\n', '        lock = timestamp;\n', '        return true;\n', '    }\n', '\n', '    function withdrawal(Token token, address to, uint value) returns (bool) {\n', '        require(msg.sender == owner);\n', '        require(block.timestamp >= lock);\n', '        require(to != address(0));\n', '        return token.transfer(to, value);\n', '    }\n', '}']