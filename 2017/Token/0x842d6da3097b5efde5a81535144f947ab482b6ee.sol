['pragma solidity ^0.4.16;\n', '\n', '\n', 'contract WhoTheEth {\n', '    \n', '    address owner;\n', '    uint public numberOfNames;\n', '    mapping(address => string) public names;\n', '    mapping(address => uint) public bank;\n', '\n', '    event AddedName(\n', '        address indexed _address,\n', '        string _name,\n', '        uint _time,\n', '        address indexed _referrer,\n', '        uint _value\n', '    );\n', '    \n', '    function WhoTheEth() public {\n', '        owner = msg.sender;\n', '    }\n', '    \n', '    function pullFunds() public {\n', '        require (bank[msg.sender] > 0);\n', '        uint value = bank[msg.sender];\n', '        bank[msg.sender] = 0;\n', '        msg.sender.transfer(value);\n', '    }\n', '    \n', '    function setName(string newName) payable public {\n', '        require(msg.value >= 1 finney || numberOfNames < 500);\n', '        numberOfNames++;\n', '        names[msg.sender] = newName;\n', '        bank[owner] += msg.value;\n', '        AddedName(msg.sender, newName, now, owner, msg.value);\n', '    }\n', '    \n', '        \n', '    function setNameRefer(string newName, address ref) payable public {\n', '        require(msg.value >= 1 finney || numberOfNames < 500);\n', '        require(msg.sender != ref);\n', '        numberOfNames++;\n', '        names[msg.sender] = newName;\n', '        bank[owner] += msg.value / 10;\n', '        bank[ref] += msg.value - (msg.value / 10);\n', '        AddedName(msg.sender, newName, now, ref, msg.value);\n', '    }\n', '    \n', '\n', '}']