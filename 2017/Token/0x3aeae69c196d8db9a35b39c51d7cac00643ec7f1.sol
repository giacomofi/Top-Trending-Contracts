['pragma solidity 0.4.18;\n', '\n', 'contract Token {\n', '\n', '    function totalSupply() constant returns (uint supply) {}\n', '    function balanceOf(address _owner) constant returns (uint balance) {}\n', '    function transfer(address _to, uint _value) returns (bool success) {}\n', '    function transferFrom(address _from, address _to, uint _value) returns (bool success) {}\n', '    function approve(address _spender, uint _value) returns (bool success) {}\n', '    function allowance(address _owner, address _spender) constant returns (uint remaining) {}\n', '\n', '    event Transfer(address indexed _from, address indexed _to, uint _value);\n', '    event Approval(address indexed _owner, address indexed _spender, uint _value);\n', '}\n', '\n', 'contract StandardToken is Token {\n', '\n', '    function transfer(address _to, uint _value) public returns (bool) {\n', '        if (balances[msg.sender] >= _value && balances[_to] + _value >= balances[_to]) {\n', '            balances[msg.sender] -= _value;\n', '            balances[_to] += _value;\n', '            Transfer(msg.sender, _to, _value);\n', '            return true;\n', '        } else { return false; }\n', '    }\n', '\n', '    function transferFrom(address _from, address _to, uint _value) public returns (bool) {\n', '        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value >= balances[_to]) {\n', '            balances[_to] += _value;\n', '            balances[_from] -= _value;\n', '            allowed[_from][msg.sender] -= _value;\n', '            Transfer(_from, _to, _value);\n', '            return true;\n', '        } else { return false; }\n', '    }\n', '\n', '    function balanceOf(address _owner) constant public returns (uint) {\n', '        return balances[_owner];\n', '    }\n', '\n', '    function approve(address _spender, uint _value) public returns (bool) {\n', '        allowed[msg.sender][_spender] = _value;\n', '        Approval(msg.sender, _spender, _value);\n', '        return true;\n', '    }\n', '\n', '    function allowance(address _owner, address _spender) constant public returns (uint) {\n', '        return allowed[_owner][_spender];\n', '    }\n', '\n', '    mapping (address => uint) balances;\n', '    mapping (address => mapping (address => uint)) allowed;\n', '    uint public totalSupply;\n', '}\n', '\n', 'contract USDT is StandardToken {\n', '\n', '    uint8 constant public decimals = 0;\n', '    uint public totalSupply = 0;\n', '    string constant public name = "USD Token";\n', '    string constant public symbol = "USDT";\n', '\n', '    function USDT() public {\n', '        totalSupply = 1e6;\n', '        balances[msg.sender] = totalSupply;\n', '    }\n', '}']